{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///home/tom/www2026/8_server/vercel/mydoc.site/node_modules/.pnpm/%40scalar%2Bopenapi-parser%400.18.3/node_modules/%40scalar/openapi-parser/src/utils/escape-json-pointer.ts"],"sourcesContent":["/**\n * Escapes a JSON pointer string.\n *\n * Example: `/foo/bar~baz` -> `/foo~1bar~0baz`\n */\nexport function escapeJsonPointer(str: string) {\n  return str.replace(/~/g, '~0').replace(/\\//g, '~1')\n}\n"],"names":[],"mappings":";;;;AAKO,SAAS,kBAAkB,GAAA,EAAa;IAC7C,OAAO,IAAI,OAAA,CAAQ,MAAM,IAAI,EAAE,OAAA,CAAQ,OAAO,IAAI;AACpD","debugId":null}},
    {"offset": {"line": 17, "column": 0}, "map": {"version":3,"sources":["file:///home/tom/www2026/8_server/vercel/mydoc.site/node_modules/.pnpm/%40scalar%2Bopenapi-parser%400.18.3/node_modules/%40scalar/openapi-parser/src/polyfills/path.ts"],"sourcesContent":["// @ts-nocheck\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  let up = 0\n  for (let i = parts.length - 1; i >= 0; i--) {\n    const last = parts[i]\n    if (last === '.') {\n      parts.splice(i, 1)\n    } else if (last === '..') {\n      parts.splice(i, 1)\n      up++\n    } else if (up) {\n      parts.splice(i, 1)\n      up--\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..')\n    }\n  }\n\n  return parts\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nconst splitPathRe = /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^/]+?|)(\\.[^./]*|))(?:[/]*)$/\nconst splitPath = (filename) => splitPathRe.exec(filename).slice(1)\n\n// path.resolve([from ...], to)\n// posix version\nexport function resolve(...parameters) {\n  let resolvedPath = '',\n    resolvedAbsolute = false\n\n  for (let i = parameters.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    const path = i >= 0 ? parameters[i] : '/'\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings')\n    }\n    if (!path) {\n      continue\n    }\n\n    resolvedPath = path + '/' + resolvedPath\n    resolvedAbsolute = path.charAt(0) === '/'\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(\n    filter(resolvedPath.split('/'), (p) => !!p),\n    !resolvedAbsolute,\n  ).join('/')\n\n  return (resolvedAbsolute ? '/' : '') + resolvedPath || '.'\n}\n\n// path.normalize(path)\n// posix version\nexport function normalize(path) {\n  const isPathAbsolute = isAbsolute(path),\n    trailingSlash = substr(path, -1) === '/'\n\n  // Normalize the path\n  path = normalizeArray(\n    filter(path.split('/'), (p) => !!p),\n    !isPathAbsolute,\n  ).join('/')\n\n  if (!path && !isPathAbsolute) {\n    path = '.'\n  }\n  if (path && trailingSlash) {\n    path += '/'\n  }\n\n  return (isPathAbsolute ? '/' : '') + path\n}\n\n// posix version\nexport function isAbsolute(path) {\n  return path.charAt(0) === '/'\n}\n\n// posix version\nexport function join(...paths: string[]) {\n  return normalize(\n    filter(paths, (p, _index) => {\n      if (typeof p !== 'string') {\n        throw new TypeError('Arguments to path.join must be strings')\n      }\n      return p\n    }).join('/'),\n  )\n}\n\n// path.relative(from, to)\n// posix version\nexport function relative(from, to) {\n  from = resolve(from).substr(1)\n  to = resolve(to).substr(1)\n\n  function trim(arr) {\n    let start = 0\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') {\n        break\n      }\n    }\n\n    let end = arr.length - 1\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') {\n        break\n      }\n    }\n\n    if (start > end) {\n      return []\n    }\n    return arr.slice(start, end - start + 1)\n  }\n\n  const fromParts = trim(from.split('/'))\n  const toParts = trim(to.split('/'))\n\n  const length = Math.min(fromParts.length, toParts.length)\n  let samePartsLength = length\n  for (let i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i\n      break\n    }\n  }\n\n  let outputParts = []\n  for (let i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..')\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength))\n\n  return outputParts.join('/')\n}\n\nexport const sep = '/'\nexport const delimiter = ':'\n\nexport function dirname(path) {\n  const result = splitPath(path),\n    root = result[0]\n\n  let dir = result[1]\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.'\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1)\n  }\n\n  return root + dir\n}\n\nexport function basename(path, ext) {\n  let f = splitPath(path)[2]\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length)\n  }\n  return f\n}\n\nexport function extname(path) {\n  return splitPath(path)[3]\n}\nexport default {\n  extname: extname,\n  basename: basename,\n  dirname: dirname,\n  sep: sep,\n  delimiter: delimiter,\n  relative: relative,\n  join: join,\n  isAbsolute: isAbsolute,\n  normalize: normalize,\n  resolve: resolve,\n}\nfunction filter(xs, f) {\n  if (xs.filter) {\n    return xs.filter(f)\n  }\n  const res = []\n  for (let i = 0; i < xs.length; i++) {\n    if (f(xs[i], i, xs)) {\n      res.push(xs[i])\n    }\n  }\n  return res\n}\n\n// String.prototype.substr - negative index don't work in IE8\nconst substr =\n  'ab'.substr(-1) === 'b'\n    ? (str, start, len) => str.substr(start, len)\n    : (str, start, len) => {\n        if (start < 0) {\n          start = str.length + start\n        }\n        return str.substr(start, len)\n      }\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 199, "column": 0}, "map": {"version":3,"sources":["file:///home/tom/www2026/8_server/vercel/mydoc.site/node_modules/.pnpm/%40scalar%2Bopenapi-parser%400.18.3/node_modules/%40scalar/openapi-parser/src/utils/unescape-json-pointer.ts"],"sourcesContent":["/**\n * Unescape JSON pointer\n *\n * Examples:\n * /foo~1bar~0baz -> /foo/bar~baz\n */\nexport function unescapeJsonPointer(uri: string) {\n  return decodeURI(uri.replace(/~1/g, '/').replace(/~0/g, '~'))\n}\n"],"names":[],"mappings":";;;;AAMO,SAAS,oBAAoB,GAAA,EAAa;IAC/C,OAAO,UAAU,IAAI,OAAA,CAAQ,OAAO,GAAG,EAAE,OAAA,CAAQ,OAAO,GAAG,CAAC;AAC9D","debugId":null}},
    {"offset": {"line": 212, "column": 0}, "map": {"version":3,"sources":["file:///home/tom/www2026/8_server/vercel/mydoc.site/node_modules/.pnpm/%40scalar%2Bopenapi-parser%400.18.3/node_modules/%40scalar/openapi-parser/src/utils/get-segments-from-path.ts"],"sourcesContent":["import { unescapeJsonPointer } from './unescape-json-pointer'\n\n/**\n * Translate `/paths/~1test` to `['paths', '/test']`\n */\nexport function getSegmentsFromPath(path: string) {\n  return (\n    // /paths/~1test\n    path\n      // ['', 'paths', '~1test']\n      .split('/')\n      // ['paths', '~test']\n      .slice(1)\n      // ['paths', '/test']\n      .map(unescapeJsonPointer)\n  )\n}\n"],"names":[],"mappings":";;;;AAAA,SAAS,2BAA2B;;AAK7B,SAAS,oBAAoB,IAAA,EAAc;IAChD,OAAA,gBAAA;IAEE,KAEG,KAAA,CAAM,GAAG,EAET,KAAA,CAAM,CAAC,EAEP,GAAA,CAAI,+RAAmB;AAE9B","debugId":null}},
    {"offset": {"line": 228, "column": 0}, "map": {"version":3,"sources":["file:///home/tom/www2026/8_server/vercel/mydoc.site/node_modules/.pnpm/%40scalar%2Bopenapi-parser%400.18.3/node_modules/%40scalar/openapi-parser/src/utils/is-object.ts"],"sourcesContent":["/**\n * Check if the given value is an object\n */\nexport const isObject = (obj: any) => typeof obj === 'object' && !Array.isArray(obj) && obj !== null\n"],"names":[],"mappings":";;;;AAGO,MAAM,WAAW,CAAC,MAAa,OAAO,QAAQ,YAAY,CAAC,MAAM,OAAA,CAAQ,GAAG,KAAK,QAAQ","debugId":null}},
    {"offset": {"line": 239, "column": 0}, "map": {"version":3,"sources":["file:///home/tom/www2026/8_server/vercel/mydoc.site/node_modules/.pnpm/%40scalar%2Bopenapi-parser%400.18.3/node_modules/%40scalar/openapi-parser/src/utils/is-yaml.ts"],"sourcesContent":["import { parse } from 'yaml'\n\nexport function isYaml(value: string) {\n  // Line breaks\n  if (!value.includes('\\n')) {\n    return false\n  }\n\n  try {\n    parse(value, {\n      maxAliasCount: 10000,\n    })\n\n    return true\n  } catch (_error) {\n    return false\n  }\n}\n"],"names":[],"mappings":";;;;AAAA,SAAS,aAAa;;AAEf,SAAS,OAAO,KAAA,EAAe;IAEpC,IAAI,CAAC,MAAM,QAAA,CAAS,IAAI,GAAG;QACzB,OAAO;IACT;IAEA,IAAI;QACF,IAAA,+LAAA,EAAM,OAAO;YACX,eAAe;QACjB,CAAC;QAED,OAAO;IACT,EAAA,OAAS,QAAQ;QACf,OAAO;IACT;AACF","debugId":null}},
    {"offset": {"line": 264, "column": 0}, "map": {"version":3,"sources":["file:///home/tom/www2026/8_server/vercel/mydoc.site/node_modules/.pnpm/%40scalar%2Bopenapi-parser%400.18.3/node_modules/%40scalar/openapi-parser/src/utils/is-json.ts"],"sourcesContent":["export function isJson(value: string) {\n  try {\n    JSON.parse(value)\n\n    return true\n  } catch {\n    return false\n  }\n}\n"],"names":[],"mappings":";;;;AAAO,SAAS,OAAO,KAAA,EAAe;IACpC,IAAI;QACF,KAAK,KAAA,CAAM,KAAK;QAEhB,OAAO;IACT,EAAA,OAAQ;QACN,OAAO;IACT;AACF","debugId":null}},
    {"offset": {"line": 282, "column": 0}, "map": {"version":3,"sources":["file:///home/tom/www2026/8_server/vercel/mydoc.site/node_modules/.pnpm/%40scalar%2Bopenapi-parser%400.18.3/node_modules/%40scalar/openapi-parser/src/utils/bundle/value-generator.ts"],"sourcesContent":["/**\n * Generates a short SHA-1 hash from a string value.\n * This function is used to create unique identifiers for external references\n * while keeping the hash length manageable. It uses the Web Crypto API to\n * generate a SHA-1 hash and returns the first 7 characters of the hex string.\n * If the hash would be all numbers, it ensures at least one letter is included.\n *\n * @param value - The string to hash\n * @returns A 7-character hexadecimal hash with at least one letter\n * @example\n * // Returns \"2ae91d7\"\n * await getHash(\"https://example.com/schema.json\")\n */\nexport async function getHash(value: string) {\n  // Convert string to ArrayBuffer\n  const encoder = new TextEncoder()\n  const data = encoder.encode(value)\n\n  // Hash the data\n  const hashBuffer = await crypto.subtle.digest('SHA-1', data)\n\n  // Convert buffer to hex string\n  const hashArray = Array.from(new Uint8Array(hashBuffer))\n  const hashHex = hashArray.map((b) => b.toString(16).padStart(2, '0')).join('')\n\n  // Return first 7 characters of the hash, ensuring at least one letter\n  const hash = hashHex.substring(0, 7)\n  return hash.match(/^\\d+$/) ? 'a' + hash.substring(1) : hash\n}\n\n/**\n * Generates a unique compressed value for a string, handling collisions by recursively compressing\n * until a unique value is found. This is used to create unique identifiers for external\n * references in the bundled OpenAPI document.\n *\n * @param compress - Function that generates a compressed value from a string\n * @param value - The original string value to compress\n * @param compressedToValue - Object mapping compressed values to their original values\n * @param prevCompressedValue - Optional previous compressed value to use as input for generating a new value\n * @param depth - Current recursion depth to prevent infinite loops\n * @returns A unique compressed value that doesn't conflict with existing values\n *\n * @example\n * const valueMap = {}\n * // First call generates compressed value for \"example.com/schema.json\"\n * const value1 = await generateUniqueValue(compress, \"example.com/schema.json\", valueMap)\n * // Returns something like \"2ae91d7\"\n *\n * // Second call with same value returns same compressed value\n * const value2 = await generateUniqueValue(compress, \"example.com/schema.json\", valueMap)\n * // Returns same value as value1\n *\n * // Call with different value generates new unique compressed value\n * const value3 = await generateUniqueValue(compress, \"example.com/other.json\", valueMap)\n * // Returns different value like \"3bf82e9\"\n */\nexport async function generateUniqueValue(\n  compress: (value: string) => Promise<string> | string,\n  value: string,\n  compressedToValue: Record<string, string>,\n  prevCompressedValue?: string,\n  depth = 0,\n) {\n  // Prevent infinite recursion by limiting depth\n  const MAX_DEPTH = 100\n\n  if (depth >= MAX_DEPTH) {\n    throw 'Can not generate unique compressed values'\n  }\n\n  // Compress the value, using previous compressed value if provided\n  const compressedValue = await compress(prevCompressedValue ?? value)\n\n  // Handle collision by recursively trying with compressed value as input\n  if (compressedToValue[compressedValue] !== undefined && compressedToValue[compressedValue] !== value) {\n    return generateUniqueValue(compress, value, compressedToValue, compressedValue, depth + 1)\n  }\n\n  // Store mapping and return unique compressed value\n  compressedToValue[compressedValue] = value\n  return compressedValue\n}\n\n/**\n * Factory function that creates a value generator with caching capabilities.\n * The generator maintains a bidirectional mapping between original values and their compressed forms.\n *\n * @param compress - Function that generates a compressed value from a string\n * @param compressedToValue - Initial mapping of compressed values to their original values\n * @returns An object with a generate method that produces unique compressed values\n *\n * @example\n * const compress = (value) => value.substring(0, 6) // Simple compression example\n * const initialMap = { 'abc123': 'example.com/schema.json' }\n * const generator = uniqueValueGeneratorFactory(compress, initialMap)\n *\n * // Generate compressed value for new string\n * const compressed = await generator.generate('example.com/other.json')\n * // Returns something like 'example'\n *\n * // Generate compressed value for existing string\n * const cached = await generator.generate('example.com/schema.json')\n * // Returns 'abc123' from cache\n */\nexport const uniqueValueGeneratorFactory = (\n  compress: (value: string) => Promise<string> | string,\n  compressedToValue: Record<string, string>,\n) => {\n  // Create a reverse mapping from original values to their compressed forms\n  const valueToCompressed = Object.fromEntries(Object.entries(compressedToValue).map(([key, value]) => [value, key]))\n\n  return {\n    /**\n     * Generates a unique compressed value for the given input string.\n     * First checks if a compressed value already exists in the cache.\n     * If not, generates a new unique compressed value and stores it in the cache.\n     *\n     * @param value - The original string value to compress\n     * @returns A Promise that resolves to the compressed string value\n     *\n     * @example\n     * const generator = uniqueValueGeneratorFactory(compress, {})\n     * const compressed = await generator.generate('example.com/schema.json')\n     * // Returns a unique compressed value like 'example'\n     */\n    generate: async (value: string) => {\n      // Check if we already have a compressed value for this input\n      const cache = valueToCompressed[value]\n      if (cache) {\n        return cache\n      }\n\n      // Generate a new unique compressed value\n      const generatedValue = await generateUniqueValue(compress, value, compressedToValue)\n\n      // Ensure the generated string contains at least one non-numeric character\n      // This prevents the `setValueAtPath` function from interpreting the value as an array index\n      // by forcing it to be treated as an object property name\n      const compressedValue = generatedValue.match(/^\\d+$/) ? `a${generatedValue}` : generatedValue\n\n      // Store the new mapping in our cache\n      valueToCompressed[value] = compressedValue\n\n      return compressedValue\n    },\n  }\n}\n"],"names":[],"mappings":";;;;;;;;AAaA,eAAsB,QAAQ,KAAA,EAAe;IAE3C,MAAM,UAAU,IAAI,YAAY;IAChC,MAAM,OAAO,QAAQ,MAAA,CAAO,KAAK;IAGjC,MAAM,aAAa,MAAM,OAAO,MAAA,CAAO,MAAA,CAAO,SAAS,IAAI;IAG3D,MAAM,YAAY,MAAM,IAAA,CAAK,IAAI,WAAW,UAAU,CAAC;IACvD,MAAM,UAAU,UAAU,GAAA,CAAI,CAAC,IAAM,EAAE,QAAA,CAAS,EAAE,EAAE,QAAA,CAAS,GAAG,GAAG,CAAC,EAAE,IAAA,CAAK,EAAE;IAG7E,MAAM,OAAO,QAAQ,SAAA,CAAU,GAAG,CAAC;IACnC,OAAO,KAAK,KAAA,CAAM,OAAO,IAAI,MAAM,KAAK,SAAA,CAAU,CAAC,IAAI;AACzD;AA4BA,eAAsB,oBACpB,QAAA,EACA,KAAA,EACA,iBAAA,EACA,mBAAA,EACA,QAAQ,CAAA,EACR;IAEA,MAAM,YAAY;IAElB,IAAI,SAAS,WAAW;QACtB,MAAM;IACR;IAGA,MAAM,kBAAkB,MAAM,SAAS,uBAAuB,KAAK;IAGnE,IAAI,iBAAA,CAAkB,eAAe,CAAA,KAAM,KAAA,KAAa,iBAAA,CAAkB,eAAe,CAAA,KAAM,OAAO;QACpG,OAAO,oBAAoB,UAAU,OAAO,mBAAmB,iBAAiB,QAAQ,CAAC;IAC3F;IAGA,iBAAA,CAAkB,eAAe,CAAA,GAAI;IACrC,OAAO;AACT;AAuBO,MAAM,8BAA8B,CACzC,UACA,sBACG;IAEH,MAAM,oBAAoB,OAAO,WAAA,CAAY,OAAO,OAAA,CAAQ,iBAAiB,EAAE,GAAA,CAAI,CAAC,CAAC,KAAK,KAAK,CAAA,GAAM;YAAC;YAAO,GAAG;SAAC,CAAC;IAElH,OAAO;QAAA;;;;;;;;;;;;KAAA,GAcL,UAAU,OAAO,UAAkB;YAEjC,MAAM,QAAQ,iBAAA,CAAkB,KAAK,CAAA;YACrC,IAAI,OAAO;gBACT,OAAO;YACT;YAGA,MAAM,iBAAiB,MAAM,oBAAoB,UAAU,OAAO,iBAAiB;YAKnF,MAAM,kBAAkB,eAAe,KAAA,CAAM,OAAO,IAAI,CAAA,CAAA,EAAI,cAAc,EAAA,GAAK;YAG/E,iBAAA,CAAkB,KAAK,CAAA,GAAI;YAE3B,OAAO;QACT;IACF;AACF","debugId":null}},
    {"offset": {"line": 347, "column": 0}, "map": {"version":3,"sources":["file:///home/tom/www2026/8_server/vercel/mydoc.site/node_modules/.pnpm/%40scalar%2Bopenapi-parser%400.18.3/node_modules/%40scalar/openapi-parser/src/utils/bundle/bundle.ts"],"sourcesContent":["import type { UnknownObject } from '@/types'\nimport { escapeJsonPointer } from '@/utils/escape-json-pointer'\nimport path from '@/polyfills/path'\nimport { getSegmentsFromPath } from '@/utils/get-segments-from-path'\nimport { isObject } from '@/utils/is-object'\nimport { isYaml } from '@/utils/is-yaml'\nimport { isJson } from '@/utils/is-json'\nimport { getHash, uniqueValueGeneratorFactory } from '@/utils/bundle/value-generator'\n\n/**\n * Checks if a string is a remote URL (starts with http:// or https://)\n * @param value - The URL string to check\n * @returns true if the string is a remote URL, false otherwise\n * @example\n * ```ts\n * isRemoteUrl('https://example.com/schema.json') // true\n * isRemoteUrl('http://api.example.com/schemas/user.json') // true\n * isRemoteUrl('#/components/schemas/User') // false\n * isRemoteUrl('./local-schema.json') // false\n * ```\n */\nexport function isRemoteUrl(value: string) {\n  try {\n    const url = new URL(value)\n    return url.protocol === 'http:' || url.protocol === 'https:'\n  } catch {\n    return false\n  }\n}\n\n/**\n * Checks if a string represents a file path by ensuring it's not a remote URL,\n * YAML content, or JSON content.\n *\n * @param value - The string to check\n * @returns true if the string appears to be a file path, false otherwise\n * @example\n * ```ts\n * isFilePath('./schemas/user.json') // true\n * isFilePath('https://example.com/schema.json') // false\n * isFilePath('{\"type\": \"object\"}') // false\n * isFilePath('type: object') // false\n * ```\n */\nexport function isFilePath(value: string) {\n  return !isRemoteUrl(value) && !isYaml(value) && !isJson(value)\n}\n\n/**\n * Checks if a string is a local reference (starts with #)\n * @param value - The reference string to check\n * @returns true if the string is a local reference, false otherwise\n * @example\n * ```ts\n * isLocalRef('#/components/schemas/User') // true\n * isLocalRef('https://example.com/schema.json') // false\n * isLocalRef('./local-schema.json') // false\n * ```\n */\nexport function isLocalRef(value: string): boolean {\n  return value.startsWith('#')\n}\n\nexport type ResolveResult = { ok: true; data: unknown } | { ok: false }\n\n/**\n * Resolves a string by finding and executing the appropriate plugin.\n * @param value - The string to resolve (URL, file path, etc)\n * @param plugins - Array of plugins that can handle different types of strings\n * @returns A promise that resolves to either the content or an error result\n * @example\n * // Using a URL plugin\n * await resolveContents('https://example.com/schema.json', [urlPlugin])\n * // Using a file plugin\n * await resolveContents('./schemas/user.json', [filePlugin])\n * // No matching plugin returns { ok: false }\n * await resolveContents('#/components/schemas/User', [urlPlugin, filePlugin])\n */\nasync function resolveContents(value: string, plugins: Plugin[]): Promise<ResolveResult> {\n  const plugin = plugins.find((p) => p.validate(value))\n\n  if (plugin) {\n    return plugin.exec(value)\n  }\n\n  return {\n    ok: false,\n  }\n}\n\n/**\n * Retrieves a nested value from an object using an array of property segments.\n * @param target - The target object to traverse\n * @param segments - Array of property names representing the path to the desired value\n * @returns The value at the specified path, or undefined if the path doesn't exist\n * @example\n * const obj = { foo: { bar: { baz: 42 } } };\n * getNestedValue(obj, ['foo', 'bar', 'baz']); // returns 42\n */\nexport function getNestedValue(target: Record<string, any>, segments: string[]) {\n  return segments.reduce<any>((acc, key) => {\n    if (acc === undefined) {\n      return undefined\n    }\n    return acc[key]\n  }, target)\n}\n\n/**\n * Sets a value at a specified path in an object, creating intermediate objects/arrays as needed.\n * This function traverses the object structure and creates any missing intermediate objects\n * or arrays based on the path segments. If the next segment is a numeric string, it creates\n * an array instead of an object.\n *\n * ⚠️ Warning: Be careful with object keys that look like numbers (e.g. \"123\") as this function\n * will interpret them as array indices and create arrays instead of objects. If you need to\n * use numeric-looking keys, consider prefixing them with a non-numeric character.\n *\n * @param obj - The target object to set the value in\n * @param path - The JSON pointer path where the value should be set\n * @param value - The value to set at the specified path\n * @throws {Error} If attempting to set a value at the root path ('')\n *\n * @example\n * const obj = {}\n * setValueAtPath(obj, '/foo/bar/0', 'value')\n * // Result:\n * // {\n * //   foo: {\n * //     bar: ['value']\n * //   }\n * // }\n *\n * @example\n * const obj = { existing: { path: 'old' } }\n * setValueAtPath(obj, '/existing/path', 'new')\n * // Result:\n * // {\n * //   existing: {\n * //     path: 'new'\n * //   }\n * // }\n *\n * @example\n * // ⚠️ Warning: This will create an array instead of an object with key \"123\"\n * setValueAtPath(obj, '/foo/123/bar', 'value')\n * // Result:\n * // {\n * //   foo: [\n * //     undefined,\n * //     undefined,\n * //     undefined,\n * //     { bar: 'value' }\n * //   ]\n * // }\n */\nexport function setValueAtPath(obj: any, path: string, value: any): void {\n  if (path === '') {\n    throw new Error(\"Cannot set value at root ('') pointer\")\n  }\n\n  const parts = getSegmentsFromPath(path)\n\n  let current = obj\n\n  for (let i = 0; i < parts.length; i++) {\n    const key = parts[i]\n    const isLast = i === parts.length - 1\n\n    const nextKey = parts[i + 1]\n    const shouldBeArray = /^\\d+$/.test(nextKey ?? '')\n\n    if (isLast) {\n      current[key] = value\n    } else {\n      if (!(key in current) || typeof current[key] !== 'object') {\n        current[key] = shouldBeArray ? [] : {}\n      }\n      current = current[key]\n    }\n  }\n}\n\n/**\n * Resolves a reference path by combining a base path with a relative path.\n * Handles both remote URLs and local file paths.\n *\n * @param base - The base path (can be a URL or local file path)\n * @param relativePath - The relative path to resolve against the base\n * @returns The resolved absolute path\n * @example\n * // Resolve remote URL\n * resolveReferencePath('https://example.com/api/schema.json', 'user.json')\n * // Returns: 'https://example.com/api/user.json'\n *\n * // Resolve local path\n * resolveReferencePath('/path/to/schema.json', 'user.json')\n * // Returns: '/path/to/user.json'\n */\nfunction resolveReferencePath(base: string, relativePath: string) {\n  if (isRemoteUrl(relativePath)) {\n    return relativePath\n  }\n\n  if (isRemoteUrl(base)) {\n    const url = new URL(base)\n\n    const mergedPath = path.join(path.dirname(url.pathname), relativePath)\n    return new URL(mergedPath, base).toString()\n  }\n\n  return path.join(path.dirname(base), relativePath)\n}\n\n/**\n * Prefixes an internal JSON reference with a given path prefix.\n * Takes a local reference (starting with #) and prepends the provided prefix segments.\n *\n * @param input - The internal reference string to prefix (must start with #)\n * @param prefix - Array of path segments to prepend to the reference\n * @returns The prefixed reference string\n * @throws Error if input is not a local reference\n * @example\n * prefixInternalRef('#/components/schemas/User', ['definitions'])\n * // Returns: '#/definitions/components/schemas/User'\n */\nexport function prefixInternalRef(input: string, prefix: string[]) {\n  if (!isLocalRef(input)) {\n    throw 'Please provide an internal ref'\n  }\n\n  return `#/${prefix.map(escapeJsonPointer).join('/')}${input.substring(1)}`\n}\n\n/**\n * Updates internal references in an object by adding a prefix to their paths.\n * Recursively traverses the input object and modifies any local $ref references\n * by prepending the given prefix to their paths. This is used when embedding external\n * documents to maintain correct reference paths relative to the main document.\n *\n * @param input - The object to update references in\n * @param prefix - Array of path segments to prepend to internal reference paths\n * @returns void\n * @example\n * ```ts\n * const input = {\n *   foo: {\n *     $ref: '#/components/schemas/User'\n *   }\n * }\n * prefixInternalRefRecursive(input, ['definitions'])\n * // Result:\n * // {\n * //   foo: {\n * //     $ref: '#/definitions/components/schemas/User'\n * //   }\n * // }\n * ```\n */\nexport function prefixInternalRefRecursive(input: unknown, prefix: string[]) {\n  if (!isObject(input)) {\n    return\n  }\n\n  Object.values(input).forEach((el) => prefixInternalRefRecursive(el, prefix))\n\n  if (typeof input === 'object' && '$ref' in input && typeof input['$ref'] === 'string') {\n    const ref = input['$ref']\n\n    if (!isLocalRef(ref)) {\n      return\n    }\n\n    input['$ref'] = prefixInternalRef(ref, prefix)\n  }\n}\n\n/**\n * Resolves and copies referenced values from a source document to a target document.\n * This function traverses the document and copies referenced values to the target document,\n * while tracking processed references to avoid duplicates. It only processes references\n * that belong to the same external document.\n *\n * @param targetDocument - The document to copy referenced values to\n * @param sourceDocument - The source document containing the references\n * @param referencePath - The JSON pointer path to the reference\n * @param externalRefsKey - The key used for external references (e.g. 'x-ext')\n * @param documentKey - The key identifying the external document\n * @param processedNodes - Set of already processed nodes to prevent duplicates\n * @example\n * ```ts\n * const source = {\n *   components: {\n *     schemas: {\n *       User: {\n *         $ref: '#/x-ext/users~1schema/definitions/Person'\n *       }\n *     }\n *   }\n * }\n *\n * const target = {}\n * resolveAndCopyReferences(\n *   target,\n *   source,\n *   '/components/schemas/User',\n *   'x-ext',\n *   'users/schema'\n * )\n * // Result: target will contain the User schema with resolved references\n * ```\n */\nconst resolveAndCopyReferences = (\n  targetDocument: unknown,\n  sourceDocument: unknown,\n  referencePath: string,\n  externalRefsKey: string,\n  documentKey: string,\n  processedNodes = new Set(),\n) => {\n  const referencedValue = getNestedValue(sourceDocument, getSegmentsFromPath(referencePath))\n\n  if (processedNodes.has(referencedValue)) {\n    return\n  }\n  processedNodes.add(referencedValue)\n\n  setValueAtPath(targetDocument, referencePath, referencedValue)\n\n  // Do the same for each local ref\n  const traverse = (node: unknown) => {\n    if (!node || typeof node !== 'object') {\n      return\n    }\n\n    if ('$ref' in node && typeof node['$ref'] === 'string') {\n      // We only process references from the same external document because:\n      // 1. Other documents will be handled in separate recursive branches\n      // 2. The source document only contains the current document's content\n      // This prevents undefined behavior and maintains proper document boundaries\n      if (node['$ref'].startsWith(`#/${externalRefsKey}/${escapeJsonPointer(documentKey)}`)) {\n        resolveAndCopyReferences(\n          targetDocument,\n          sourceDocument,\n          node['$ref'].substring(1),\n          documentKey,\n          externalRefsKey,\n          processedNodes,\n        )\n      }\n    }\n\n    for (const value of Object.values(node)) {\n      traverse(value)\n    }\n  }\n\n  traverse(referencedValue)\n}\n\n/**\n * Represents a plugin that handles resolving references from external sources.\n * Plugins are responsible for fetching and processing data from different sources\n * like URLs or the filesystem. Each plugin must implement validation to determine\n * if it can handle a specific reference, and an execution function to perform\n * the actual resolution.\n *\n * @property validate - Determines if this plugin can handle the given reference\n * @property exec - Fetches and processes the reference, returning the resolved data\n */\nexport type Plugin = {\n  // Determines if this plugin can handle the given reference value\n  validate: (value: string) => boolean\n  // Fetches and processes the reference, returning the resolved data\n  exec: (value: string) => Promise<ResolveResult>\n}\n\n/**\n * Configuration options for the bundler.\n * Controls how external references are resolved and processed during bundling.\n */\ntype Config = {\n  /**\n   * Array of plugins that handle resolving references from different sources.\n   * Each plugin is responsible for fetching and processing data from specific sources\n   * like URLs or the filesystem.\n   */\n  plugins: Plugin[]\n\n  /**\n   * Optional root object that serves as the base document when bundling a subpart.\n   * This allows resolving references relative to the root document's location,\n   * ensuring proper path resolution for nested references.\n   */\n  root?: UnknownObject\n\n  /**\n   * Optional cache to store promises of resolved references.\n   * Helps avoid duplicate fetches/reads of the same resource by storing\n   * the resolution promises for reuse.\n   */\n  cache?: Map<string, Promise<ResolveResult>>\n\n  /**\n   * Cache of visited nodes during partial bundling.\n   * Used to prevent re-bundling the same tree multiple times when doing partial bundling,\n   * improving performance by avoiding redundant processing of already bundled sections.\n   */\n  visitedNodes?: Set<unknown>\n\n  /**\n   * Enable tree shaking to optimize the bundle size.\n   * When enabled, only the parts of external documents that are actually referenced\n   * will be included in the final bundle.\n   */\n  treeShake: boolean\n\n  /**\n   * Optional flag to generate a URL map.\n   * When enabled, tracks the original source URLs of bundled references\n   * in an x-ext-urls section for reference mapping.\n   */\n  urlMap?: boolean\n\n  /**\n   * Optional function to compress input URLs or file paths before bundling.\n   * Returns either a Promise resolving to the compressed string or the compressed string directly.\n   */\n  compress?: (value: string) => Promise<string> | string\n\n  /**\n   * Optional hooks to monitor the bundler's lifecycle.\n   * Allows tracking the progress and status of reference resolution.\n   */\n  hooks?: Partial<{\n    /** Called when starting to resolve a reference */\n    onResolveStart: (node: Record<string, unknown> & Record<'$ref', unknown>) => void\n    /** Called when a reference resolution fails */\n    onResolveError: (node: Record<string, unknown> & Record<'$ref', unknown>) => void\n    /** Called when a reference is successfully resolved */\n    onResolveSuccess: (node: Record<string, unknown> & Record<'$ref', unknown>) => void\n  }>\n}\n\n/**\n * Extension keys used for bundling external references in OpenAPI documents.\n * These custom extensions help maintain the structure and traceability of bundled documents.\n */\nconst extensions = {\n  /**\n   * Custom OpenAPI extension key used to store external references.\n   * This key will contain all bundled external documents.\n   * The x-ext key is used to maintain a clean separation between the main\n   * OpenAPI document and its bundled external references.\n   */\n  externalDocuments: 'x-ext',\n\n  /**\n   * Custom OpenAPI extension key used to maintain a mapping between\n   * hashed keys and their original URLs in x-ext.\n   * This mapping is essential for tracking the source of bundled references\n   */\n  externalDocumentsMappings: 'x-ext-urls',\n} as const\n\n/**\n * Bundles an OpenAPI specification by resolving all external references.\n * This function traverses the input object recursively and embeds external $ref\n * references into an x-ext section. External references can be URLs or local files.\n * The original $refs are updated to point to their embedded content in the x-ext section.\n * If the input is an object, it will be modified in place by adding an x-ext\n * property to store resolved external references.\n *\n * @param input - The OpenAPI specification to bundle. Can be either an object or string.\n *                If a string is provided, it will be resolved using the provided plugins.\n *                If no plugin can process the input, the onReferenceError hook will be invoked\n *                and an error will be emitted to the console.\n * @param config - Configuration object containing plugins and options for bundling OpenAPI specifications\n * @returns A promise that resolves to the bundled specification with all references embedded\n * @example\n * // Example with object input\n * const spec = {\n *   paths: {\n *     '/users': {\n *       $ref: 'https://example.com/schemas/users.yaml'\n *     }\n *   }\n * }\n *\n * const bundled = await bundle(spec, {\n *   plugins: [fetchUrls()],\n *   treeShake: true,\n *   urlMap: true,\n *   hooks: {\n *     onResolveStart: (ref) => console.log('Resolving:', ref.$ref),\n *     onResolveSuccess: (ref) => console.log('Resolved:', ref.$ref),\n *     onResolveError: (ref) => console.log('Failed to resolve:', ref.$ref)\n *   }\n * })\n * // Result:\n * // {\n * //   paths: {\n * //     '/users': {\n * //       $ref: '#/x-ext/abc123'\n * //     }\n * //   },\n * //   'x-ext': {\n * //     'abc123': {\n * //       // Resolved content from users.yaml\n * //     }\n * //   },\n * //   'x-ext-urls': {\n * //     'https://example.com/schemas/users.yaml': 'abc123'\n * //   }\n * // }\n *\n * // Example with URL input\n * const bundledFromUrl = await bundle('https://example.com/openapi.yaml', {\n *   plugins: [fetchUrls()],\n *   treeShake: true,\n *   urlMap: true,\n *   hooks: {\n *     onResolveStart: (ref) => console.log('Resolving:', ref.$ref),\n *     onResolveSuccess: (ref) => console.log('Resolved:', ref.$ref),\n *     onResolveError: (ref) => console.log('Failed to resolve:', ref.$ref)\n *   }\n * })\n * // The function will first fetch the OpenAPI spec from the URL,\n * // then bundle all its external references into the x-ext section\n */\nexport async function bundle(input: UnknownObject | string, config: Config) {\n  // Cache for storing promises of resolved external references (URLs and local files)\n  // to avoid duplicate fetches/reads of the same resource\n  const cache = config.cache ?? new Map<string, Promise<ResolveResult>>()\n\n  /**\n   * Resolves the input value by either returning it directly if it's not a string,\n   * or attempting to resolve it using the provided plugins if it is a string.\n   * @returns The resolved input data or throws an error if resolution fails\n   */\n  const resolveInput = async () => {\n    if (typeof input !== 'string') {\n      return input\n    }\n    const result = await resolveContents(input, config.plugins)\n\n    if (result.ok && typeof result.data === 'object') {\n      return result.data\n    }\n\n    throw new Error(\n      'Failed to resolve input: Please provide a valid string value or pass a loader to process the input',\n    )\n  }\n\n  // Resolve the input specification, which could be either a direct object or a string URL/path\n  const rawSpecification = await resolveInput()\n\n  // Document root used to write all external documents\n  // We need this when we want to do a partial bundle of a document\n  const documentRoot = config.root ?? rawSpecification\n\n  // Indicates whether we're performing a partial bundle operation, which occurs when\n  // a root document is provided that differs from the raw specification being bundled\n  const isPartialBundling = config.root !== undefined && config.root !== rawSpecification\n\n  // Set of nodes that have already been processed during bundling to prevent duplicate processing\n  const processedNodes = config.visitedNodes ?? new Set()\n\n  // Determines the initial origin path for the bundler based on the input type.\n  // For string inputs that are URLs or file paths, uses the input as the origin.\n  // For non-string inputs or other string types, returns an empty string.\n  const defaultOrigin = () => {\n    if (typeof input !== 'string') {\n      return ''\n    }\n\n    if (isRemoteUrl(input) || isFilePath(input)) {\n      return input\n    }\n\n    return ''\n  }\n\n  // Create the cache to store the compressed values to their map values\n  if (documentRoot[extensions.externalDocumentsMappings] === undefined) {\n    documentRoot[extensions.externalDocumentsMappings] = {}\n  }\n  const { generate } = uniqueValueGeneratorFactory(\n    config.compress ?? getHash,\n    documentRoot[extensions.externalDocumentsMappings],\n  )\n\n  const bundler = async (root: unknown, origin: string = defaultOrigin(), isChunkParent = false) => {\n    if (!isObject(root) && !Array.isArray(root)) {\n      return\n    }\n\n    // Skip if this node has already been processed to prevent infinite recursion\n    // and duplicate processing of the same node\n    if (processedNodes.has(root)) {\n      return\n    }\n    // Mark this node as processed before continuing\n    processedNodes.add(root)\n\n    if (typeof root === 'object' && '$ref' in root && typeof root['$ref'] === 'string') {\n      const ref = root['$ref']\n      const isChunk = '$global' in root && typeof root['$global'] === 'boolean' && root['$global']\n\n      if (isLocalRef(ref)) {\n        if (isPartialBundling) {\n          // When doing partial bundling, we need to recursively bundle all dependencies\n          // referenced by this local reference to ensure the partial bundle is complete.\n          // This includes not just the direct reference but also all its dependencies,\n          // creating a complete and self-contained partial bundle.\n          await bundler(getNestedValue(documentRoot, getSegmentsFromPath(ref.substring(1))), origin, isChunkParent)\n        }\n        return\n      }\n\n      const [prefix, path = ''] = ref.split('#', 2)\n\n      // Combine the current origin with the new path to resolve relative references\n      // correctly within the context of the external file being processed\n      const resolvedPath = resolveReferencePath(origin, prefix)\n\n      // Generate a unique compressed path for the external document\n      // This is used as a key to store and reference the bundled external document\n      // The compression helps reduce the overall file size of the bundled document\n      const compressedPath = await generate(resolvedPath)\n\n      const seen = cache.has(resolvedPath)\n\n      if (!seen) {\n        cache.set(resolvedPath, resolveContents(resolvedPath, config.plugins))\n      }\n\n      config?.hooks?.onResolveStart?.(root)\n\n      // Resolve the remote document\n      const result = await cache.get(resolvedPath)\n\n      if (result.ok) {\n        // Process the result only once to avoid duplicate processing and prevent multiple prefixing\n        // of internal references, which would corrupt the reference paths\n        if (!seen) {\n          // Skip prefixing for chunks since they are meant to be self-contained and their\n          // internal references should remain relative to their original location. Chunks\n          // are typically used for modular components that need to maintain their own\n          // reference context without being affected by the main document's structure.\n          if (!isChunk) {\n            // Update internal references in the resolved document to use the correct base path.\n            // When we embed external documents, their internal references need to be updated to\n            // maintain the correct path context relative to the main document. This is crucial\n            // because internal references in the external document are relative to its original\n            // location, but when embedded, they need to be relative to their new location in\n            // the main document's x-ext section. Without this update, internal references\n            // would point to incorrect locations and break the document structure.\n            prefixInternalRefRecursive(result.data, [extensions.externalDocuments, compressedPath])\n          }\n\n          // Recursively process the resolved content\n          // to handle any nested references it may contain. We pass the resolvedPath as the new origin\n          // to ensure any relative references within this content are resolved correctly relative to\n          // their new location in the bundled document.\n          await bundler(result.data, isChunk ? origin : resolvedPath, isChunk)\n\n          // Store the mapping between hashed keys and original URLs in x-ext-urls\n          // This allows tracking which external URLs were bundled and their corresponding locations\n          setValueAtPath(\n            documentRoot,\n            `/${extensions.externalDocumentsMappings}/${escapeJsonPointer(compressedPath)}`,\n            resolvedPath,\n          )\n        }\n\n        if (config.treeShake === true) {\n          // Store only the subtree that is actually used\n          // This optimizes the bundle size by only including the parts of the external document\n          // that are referenced, rather than the entire document\n          resolveAndCopyReferences(\n            documentRoot,\n            { [extensions.externalDocuments]: { [compressedPath]: result.data } },\n            prefixInternalRef(`#${path}`, [extensions.externalDocuments, compressedPath]).substring(1),\n            extensions.externalDocuments,\n            compressedPath,\n          )\n        } else if (!seen) {\n          // Store the external document in the main document's x-ext key\n          // When tree shaking is disabled, we include the entire external document\n          // This preserves all content and is faster since we don't need to analyze and copy\n          // specific parts. This approach is ideal when storing the result in memory\n          // as it avoids the overhead of tree shaking operations\n          setValueAtPath(documentRoot, `/${extensions.externalDocuments}/${compressedPath}`, result.data)\n        }\n\n        // Update the $ref to point to the embedded document in x-ext\n        // This is necessary because we need to maintain the correct path context\n        // for the embedded document while preserving its internal structure\n        root.$ref = prefixInternalRef(`#${path}`, [extensions.externalDocuments, compressedPath])\n        config?.hooks?.onResolveSuccess?.(root)\n        return\n      }\n\n      config?.hooks?.onResolveError?.(root)\n      return console.warn(\n        `Failed to resolve external reference \"${resolvedPath}\". The reference may be invalid, inaccessible, or missing a loader for this type of reference.`,\n      )\n    }\n\n    // Recursively process all child objects to handle nested references\n    // This ensures we catch and resolve any $refs that exist deeper in the object tree\n    // We skip EXTERNAL_KEY to avoid processing already bundled content\n    await Promise.all(\n      Object.entries(root).map(async ([key, value]) => {\n        if (key === extensions.externalDocuments) {\n          return\n        }\n\n        await bundler(value, origin, isChunkParent)\n      }),\n    )\n  }\n\n  await bundler(rawSpecification)\n\n  // Keep urlMappings when doing partial bundling to track hash values and handle collisions\n  // For full bundling without urlMap config, remove the mappings to clean up the output\n  if (!config.urlMap && !isPartialBundling) {\n    // Remove the external document mappings from the output when doing a full bundle without urlMap config\n    delete documentRoot[extensions.externalDocumentsMappings]\n  }\n\n  return rawSpecification\n}\n"],"names":["path"],"mappings":";;;;;;;;;;;;;;;;;;AACA,SAAS,yBAAyB;AAClC,OAAO,UAAU;AACjB,SAAS,2BAA2B;AACpC,SAAS,gBAAgB;AACzB,SAAS,cAAc;AACvB,SAAS,cAAc;AACvB,SAAS,SAAS,mCAAmC;;;;;;;;AAc9C,SAAS,YAAY,KAAA,EAAe;IACzC,IAAI;QACF,MAAM,MAAM,IAAI,IAAI,KAAK;QACzB,OAAO,IAAI,QAAA,KAAa,WAAW,IAAI,QAAA,KAAa;IACtD,EAAA,OAAQ;QACN,OAAO;IACT;AACF;AAgBO,SAAS,WAAW,KAAA,EAAe;IACxC,OAAO,CAAC,YAAY,KAAK,KAAK,KAAC,iQAAA,EAAO,KAAK,KAAK,KAAC,iQAAA,EAAO,KAAK;AAC/D;AAaO,SAAS,WAAW,KAAA,EAAwB;IACjD,OAAO,MAAM,UAAA,CAAW,GAAG;AAC7B;AAiBA,eAAe,gBAAgB,KAAA,EAAe,OAAA,EAA2C;IACvF,MAAM,SAAS,QAAQ,IAAA,CAAK,CAAC,IAAM,EAAE,QAAA,CAAS,KAAK,CAAC;IAEpD,IAAI,QAAQ;QACV,OAAO,OAAO,IAAA,CAAK,KAAK;IAC1B;IAEA,OAAO;QACL,IAAI;IACN;AACF;AAWO,SAAS,eAAe,MAAA,EAA6B,QAAA,EAAoB;IAC9E,OAAO,SAAS,MAAA,CAAY,CAAC,KAAK,QAAQ;QACxC,IAAI,QAAQ,KAAA,GAAW;YACrB,OAAO,KAAA;QACT;QACA,OAAO,GAAA,CAAI,GAAG,CAAA;IAChB,GAAG,MAAM;AACX;AAkDO,SAAS,eAAe,GAAA,EAAUA,KAAAA,EAAc,KAAA,EAAkB;IACvE,IAAIA,UAAS,IAAI;QACf,MAAM,IAAI,MAAM,uCAAuC;IACzD;IAEA,MAAM,YAAQ,mSAAA,EAAoBA,KAAI;IAEtC,IAAI,UAAU;IAEd,IAAA,IAAS,IAAI,GAAG,IAAI,MAAM,MAAA,EAAQ,IAAK;QACrC,MAAM,MAAM,KAAA,CAAM,CAAC,CAAA;QACnB,MAAM,SAAS,MAAM,MAAM,MAAA,GAAS;QAEpC,MAAM,UAAU,KAAA,CAAM,IAAI,CAAC,CAAA;QAC3B,MAAM,gBAAgB,QAAQ,IAAA,CAAK,WAAW,EAAE;QAEhD,IAAI,QAAQ;YACV,OAAA,CAAQ,GAAG,CAAA,GAAI;QACjB,OAAO;YACL,IAAI,CAAA,CAAE,OAAO,OAAA,KAAY,OAAO,OAAA,CAAQ,GAAG,CAAA,KAAM,UAAU;gBACzD,OAAA,CAAQ,GAAG,CAAA,GAAI,gBAAgB,CAAC,CAAA,GAAI,CAAC;YACvC;YACA,UAAU,OAAA,CAAQ,GAAG,CAAA;QACvB;IACF;AACF;AAkBA,SAAS,qBAAqB,IAAA,EAAc,YAAA,EAAsB;IAChE,IAAI,YAAY,YAAY,GAAG;QAC7B,OAAO;IACT;IAEA,IAAI,YAAY,IAAI,GAAG;QACrB,MAAM,MAAM,IAAI,IAAI,IAAI;QAExB,MAAM,aAAa,gQAAA,CAAK,IAAA,CAAK,gQAAA,CAAK,OAAA,CAAQ,IAAI,QAAQ,GAAG,YAAY;QACrE,OAAO,IAAI,IAAI,YAAY,IAAI,EAAE,QAAA,CAAS;IAC5C;IAEA,OAAO,gQAAA,CAAK,IAAA,CAAK,gQAAA,CAAK,OAAA,CAAQ,IAAI,GAAG,YAAY;AACnD;AAcO,SAAS,kBAAkB,KAAA,EAAe,MAAA,EAAkB;IACjE,IAAI,CAAC,WAAW,KAAK,GAAG;QACtB,MAAM;IACR;IAEA,OAAO,CAAA,EAAA,EAAK,OAAO,GAAA,CAAI,2RAAiB,EAAE,IAAA,CAAK,GAAG,CAAC,GAAG,MAAM,SAAA,CAAU,CAAC,CAAC,EAAA;AAC1E;AA2BO,SAAS,2BAA2B,KAAA,EAAgB,MAAA,EAAkB;IAC3E,IAAI,KAAC,qQAAA,EAAS,KAAK,GAAG;QACpB;IACF;IAEA,OAAO,MAAA,CAAO,KAAK,EAAE,OAAA,CAAQ,CAAC,KAAO,2BAA2B,IAAI,MAAM,CAAC;IAE3E,IAAI,OAAO,UAAU,YAAY,UAAU,SAAS,OAAO,KAAA,CAAM,MAAM,CAAA,KAAM,UAAU;QACrF,MAAM,MAAM,KAAA,CAAM,MAAM,CAAA;QAExB,IAAI,CAAC,WAAW,GAAG,GAAG;YACpB;QACF;QAEA,KAAA,CAAM,MAAM,CAAA,GAAI,kBAAkB,KAAK,MAAM;IAC/C;AACF;AAqCA,MAAM,2BAA2B,CAC/B,gBACA,gBACA,eACA,iBACA,aACA,iBAAiB,aAAA,GAAA,IAAI,IAAI,CAAA,KACtB;IACH,MAAM,kBAAkB,eAAe,oBAAgB,mSAAA,EAAoB,aAAa,CAAC;IAEzF,IAAI,eAAe,GAAA,CAAI,eAAe,GAAG;QACvC;IACF;IACA,eAAe,GAAA,CAAI,eAAe;IAElC,eAAe,gBAAgB,eAAe,eAAe;IAG7D,MAAM,WAAW,CAAC,SAAkB;QAClC,IAAI,CAAC,QAAQ,OAAO,SAAS,UAAU;YACrC;QACF;QAEA,IAAI,UAAU,QAAQ,OAAO,IAAA,CAAK,MAAM,CAAA,KAAM,UAAU;YAKtD,IAAI,IAAA,CAAK,MAAM,CAAA,CAAE,UAAA,CAAW,CAAA,EAAA,EAAK,eAAe,CAAA,CAAA,MAAI,2RAAA,EAAkB,WAAW,CAAC,EAAE,GAAG;gBACrF,yBACE,gBACA,gBACA,IAAA,CAAK,MAAM,CAAA,CAAE,SAAA,CAAU,CAAC,GACxB,aACA,iBACA;YAEJ;QACF;QAEA,KAAA,MAAW,SAAS,OAAO,MAAA,CAAO,IAAI,EAAG;YACvC,SAAS,KAAK;QAChB;IACF;IAEA,SAAS,eAAe;AAC1B;AA0FA,MAAM,aAAa;IAAA;;;;;GAAA,GAOjB,mBAAmB;IAAA;;;;GAAA,GAOnB,2BAA2B;AAC7B;AAmEA,eAAsB,OAAO,KAAA,EAA+B,MAAA,EAAgB;IAG1E,MAAM,QAAQ,OAAO,KAAA,IAAS,aAAA,GAAA,IAAI,IAAoC;IAOtE,MAAM,eAAe,YAAY;QAC/B,IAAI,OAAO,UAAU,UAAU;YAC7B,OAAO;QACT;QACA,MAAM,SAAS,MAAM,gBAAgB,OAAO,OAAO,OAAO;QAE1D,IAAI,OAAO,EAAA,IAAM,OAAO,OAAO,IAAA,KAAS,UAAU;YAChD,OAAO,OAAO,IAAA;QAChB;QAEA,MAAM,IAAI,MACR;IAEJ;IAGA,MAAM,mBAAmB,MAAM,aAAa;IAI5C,MAAM,eAAe,OAAO,IAAA,IAAQ;IAIpC,MAAM,oBAAoB,OAAO,IAAA,KAAS,KAAA,KAAa,OAAO,IAAA,KAAS;IAGvE,MAAM,iBAAiB,OAAO,YAAA,IAAgB,aAAA,GAAA,IAAI,IAAI;IAKtD,MAAM,gBAAgB,MAAM;QAC1B,IAAI,OAAO,UAAU,UAAU;YAC7B,OAAO;QACT;QAEA,IAAI,YAAY,KAAK,KAAK,WAAW,KAAK,GAAG;YAC3C,OAAO;QACT;QAEA,OAAO;IACT;IAGA,IAAI,YAAA,CAAa,WAAW,yBAAyB,CAAA,KAAM,KAAA,GAAW;QACpE,YAAA,CAAa,WAAW,yBAAyB,CAAA,GAAI,CAAC;IACxD;IACA,MAAM,EAAE,QAAA,CAAS,CAAA,OAAI,wSAAA,EACnB,OAAO,QAAA,IAAY,oRAAA,EACnB,YAAA,CAAa,WAAW,yBAAyB,CAAA;IAGnD,MAAM,UAAU,OAAO,MAAe,SAAiB,cAAc,CAAA,EAAG,gBAAgB,KAAA,KAAU;QAChG,IAAI,KAAC,qQAAA,EAAS,IAAI,KAAK,CAAC,MAAM,OAAA,CAAQ,IAAI,GAAG;YAC3C;QACF;QAIA,IAAI,eAAe,GAAA,CAAI,IAAI,GAAG;YAC5B;QACF;QAEA,eAAe,GAAA,CAAI,IAAI;QAEvB,IAAI,OAAO,SAAS,YAAY,UAAU,QAAQ,OAAO,IAAA,CAAK,MAAM,CAAA,KAAM,UAAU;YAClF,MAAM,MAAM,IAAA,CAAK,MAAM,CAAA;YACvB,MAAM,UAAU,aAAa,QAAQ,OAAO,IAAA,CAAK,SAAS,CAAA,KAAM,aAAa,IAAA,CAAK,SAAS,CAAA;YAE3F,IAAI,WAAW,GAAG,GAAG;gBACnB,IAAI,mBAAmB;oBAKrB,MAAM,QAAQ,eAAe,kBAAc,mSAAA,EAAoB,IAAI,SAAA,CAAU,CAAC,CAAC,CAAC,GAAG,QAAQ,aAAa;gBAC1G;gBACA;YACF;YAEA,MAAM,CAAC,QAAQA,QAAO,EAAE,CAAA,GAAI,IAAI,KAAA,CAAM,KAAK,CAAC;YAI5C,MAAM,eAAe,qBAAqB,QAAQ,MAAM;YAKxD,MAAM,iBAAiB,MAAM,SAAS,YAAY;YAElD,MAAM,OAAO,MAAM,GAAA,CAAI,YAAY;YAEnC,IAAI,CAAC,MAAM;gBACT,MAAM,GAAA,CAAI,cAAc,gBAAgB,cAAc,OAAO,OAAO,CAAC;YACvE;YAEA,QAAQ,OAAO,iBAAiB,IAAI;YAGpC,MAAM,SAAS,MAAM,MAAM,GAAA,CAAI,YAAY;YAE3C,IAAI,OAAO,EAAA,EAAI;gBAGb,IAAI,CAAC,MAAM;oBAKT,IAAI,CAAC,SAAS;wBAQZ,2BAA2B,OAAO,IAAA,EAAM;4BAAC,WAAW,iBAAA;4BAAmB,cAAc;yBAAC;oBACxF;oBAMA,MAAM,QAAQ,OAAO,IAAA,EAAM,UAAU,SAAS,cAAc,OAAO;oBAInE,eACE,cACA,CAAA,CAAA,EAAI,WAAW,yBAAyB,CAAA,CAAA,MAAI,2RAAA,EAAkB,cAAc,CAAC,EAAA,EAC7E;gBAEJ;gBAEA,IAAI,OAAO,SAAA,KAAc,MAAM;oBAI7B,yBACE,cACA;wBAAE,CAAC,WAAW,iBAAiB,CAAA,EAAG;4BAAE,CAAC,cAAc,CAAA,EAAG,OAAO,IAAA;wBAAK;oBAAE,GACpE,kBAAkB,CAAA,CAAA,EAAIA,KAAI,EAAA,EAAI;wBAAC,WAAW,iBAAA;wBAAmB,cAAc;qBAAC,EAAE,SAAA,CAAU,CAAC,GACzF,WAAW,iBAAA,EACX;gBAEJ,OAAA,IAAW,CAAC,MAAM;oBAMhB,eAAe,cAAc,CAAA,CAAA,EAAI,WAAW,iBAAiB,CAAA,CAAA,EAAI,cAAc,EAAA,EAAI,OAAO,IAAI;gBAChG;gBAKA,KAAK,IAAA,GAAO,kBAAkB,CAAA,CAAA,EAAIA,KAAI,EAAA,EAAI;oBAAC,WAAW,iBAAA;oBAAmB,cAAc;iBAAC;gBACxF,QAAQ,OAAO,mBAAmB,IAAI;gBACtC;YACF;YAEA,QAAQ,OAAO,iBAAiB,IAAI;YACpC,OAAO,QAAQ,IAAA,CACb,CAAA,sCAAA,EAAyC,YAAY,CAAA,8FAAA,CAAA;QAEzD;QAKA,MAAM,QAAQ,GAAA,CACZ,OAAO,OAAA,CAAQ,IAAI,EAAE,GAAA,CAAI,OAAO,CAAC,KAAK,KAAK,CAAA,KAAM;YAC/C,IAAI,QAAQ,WAAW,iBAAA,EAAmB;gBACxC;YACF;YAEA,MAAM,QAAQ,OAAO,QAAQ,aAAa;QAC5C,CAAC;IAEL;IAEA,MAAM,QAAQ,gBAAgB;IAI9B,IAAI,CAAC,OAAO,MAAA,IAAU,CAAC,mBAAmB;QAExC,OAAO,YAAA,CAAa,WAAW,yBAAyB,CAAA;IAC1D;IAEA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 603, "column": 0}, "map": {"version":3,"sources":["file:///home/tom/www2026/8_server/vercel/mydoc.site/node_modules/.pnpm/%40scalar%2Bopenapi-parser%400.18.3/node_modules/%40scalar/openapi-parser/src/schemas/v2.0/schema.ts"],"sourcesContent":["export default {\n  \"title\": \"A JSON Schema for Swagger 2.0 API.\",\n  \"id\": \"http://swagger.io/v2/schema.json#\",\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"required\": [\"swagger\", \"info\", \"paths\"],\n  \"additionalProperties\": false,\n  \"patternProperties\": {\n    \"^x-\": {\n      \"$ref\": \"#/definitions/vendorExtension\"\n    }\n  },\n  \"properties\": {\n    \"swagger\": {\n      \"type\": \"string\",\n      \"enum\": [\"2.0\"],\n      \"description\": \"The Swagger version of this document.\"\n    },\n    \"info\": {\n      \"$ref\": \"#/definitions/info\"\n    },\n    \"host\": {\n      \"type\": \"string\",\n      \"pattern\": \"^[^{}/ :\\\\\\\\]+(?::\\\\d+)?$\",\n      \"description\": \"The host (name or ip) of the API. Example: 'swagger.io'\"\n    },\n    \"basePath\": {\n      \"type\": \"string\",\n      \"pattern\": \"^/\",\n      \"description\": \"The base path to the API. Example: '/api'.\"\n    },\n    \"schemes\": {\n      \"$ref\": \"#/definitions/schemesList\"\n    },\n    \"consumes\": {\n      \"description\": \"A list of MIME types accepted by the API.\",\n      \"allOf\": [\n        {\n          \"$ref\": \"#/definitions/mediaTypeList\"\n        }\n      ]\n    },\n    \"produces\": {\n      \"description\": \"A list of MIME types the API can produce.\",\n      \"allOf\": [\n        {\n          \"$ref\": \"#/definitions/mediaTypeList\"\n        }\n      ]\n    },\n    \"paths\": {\n      \"$ref\": \"#/definitions/paths\"\n    },\n    \"definitions\": {\n      \"$ref\": \"#/definitions/definitions\"\n    },\n    \"parameters\": {\n      \"$ref\": \"#/definitions/parameterDefinitions\"\n    },\n    \"responses\": {\n      \"$ref\": \"#/definitions/responseDefinitions\"\n    },\n    \"security\": {\n      \"$ref\": \"#/definitions/security\"\n    },\n    \"securityDefinitions\": {\n      \"$ref\": \"#/definitions/securityDefinitions\"\n    },\n    \"tags\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"$ref\": \"#/definitions/tag\"\n      },\n      \"uniqueItems\": true\n    },\n    \"externalDocs\": {\n      \"$ref\": \"#/definitions/externalDocs\"\n    }\n  },\n  \"definitions\": {\n    \"info\": {\n      \"type\": \"object\",\n      \"description\": \"General information about the API.\",\n      \"required\": [\"version\", \"title\"],\n      \"additionalProperties\": false,\n      \"patternProperties\": {\n        \"^x-\": {\n          \"$ref\": \"#/definitions/vendorExtension\"\n        }\n      },\n      \"properties\": {\n        \"title\": {\n          \"type\": \"string\",\n          \"description\": \"A unique and precise title of the API.\"\n        },\n        \"version\": {\n          \"type\": \"string\",\n          \"description\": \"A semantic version number of the API.\"\n        },\n        \"description\": {\n          \"type\": \"string\",\n          \"description\": \"A longer description of the API. Should be different from the title.  GitHub Flavored Markdown is allowed.\"\n        },\n        \"termsOfService\": {\n          \"type\": \"string\",\n          \"description\": \"The terms of service for the API.\"\n        },\n        \"contact\": {\n          \"$ref\": \"#/definitions/contact\"\n        },\n        \"license\": {\n          \"$ref\": \"#/definitions/license\"\n        }\n      }\n    },\n    \"contact\": {\n      \"type\": \"object\",\n      \"description\": \"Contact information for the owners of the API.\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\",\n          \"description\": \"The identifying name of the contact person/organization.\"\n        },\n        \"url\": {\n          \"type\": \"string\",\n          \"description\": \"The URL pointing to the contact information.\",\n          \"format\": \"uri\"\n        },\n        \"email\": {\n          \"type\": \"string\",\n          \"description\": \"The email address of the contact person/organization.\",\n          \"format\": \"email\"\n        }\n      },\n      \"patternProperties\": {\n        \"^x-\": {\n          \"$ref\": \"#/definitions/vendorExtension\"\n        }\n      }\n    },\n    \"license\": {\n      \"type\": \"object\",\n      \"required\": [\"name\"],\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\",\n          \"description\": \"The name of the license type. It's encouraged to use an OSI compatible license.\"\n        },\n        \"url\": {\n          \"type\": \"string\",\n          \"description\": \"The URL pointing to the license.\",\n          \"format\": \"uri\"\n        }\n      },\n      \"patternProperties\": {\n        \"^x-\": {\n          \"$ref\": \"#/definitions/vendorExtension\"\n        }\n      }\n    },\n    \"paths\": {\n      \"type\": \"object\",\n      \"description\": \"Relative paths to the individual endpoints. They must be relative to the 'basePath'.\",\n      \"patternProperties\": {\n        \"^x-\": {\n          \"$ref\": \"#/definitions/vendorExtension\"\n        },\n        \"^/\": {\n          \"$ref\": \"#/definitions/pathItem\"\n        }\n      },\n      \"additionalProperties\": false\n    },\n    \"definitions\": {\n      \"type\": \"object\",\n      \"additionalProperties\": {\n        \"$ref\": \"#/definitions/schema\"\n      },\n      \"description\": \"One or more JSON objects describing the schemas being consumed and produced by the API.\"\n    },\n    \"parameterDefinitions\": {\n      \"type\": \"object\",\n      \"additionalProperties\": {\n        \"$ref\": \"#/definitions/parameter\"\n      },\n      \"description\": \"One or more JSON representations for parameters\"\n    },\n    \"responseDefinitions\": {\n      \"type\": \"object\",\n      \"additionalProperties\": {\n        \"$ref\": \"#/definitions/response\"\n      },\n      \"description\": \"One or more JSON representations for responses\"\n    },\n    \"externalDocs\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"description\": \"information about external documentation\",\n      \"required\": [\"url\"],\n      \"properties\": {\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"url\": {\n          \"type\": \"string\",\n          \"format\": \"uri\"\n        }\n      },\n      \"patternProperties\": {\n        \"^x-\": {\n          \"$ref\": \"#/definitions/vendorExtension\"\n        }\n      }\n    },\n    \"examples\": {\n      \"type\": \"object\",\n      \"additionalProperties\": true\n    },\n    \"mimeType\": {\n      \"type\": \"string\",\n      \"description\": \"The MIME type of the HTTP message.\"\n    },\n    \"operation\": {\n      \"type\": \"object\",\n      \"required\": [\"responses\"],\n      \"additionalProperties\": false,\n      \"patternProperties\": {\n        \"^x-\": {\n          \"$ref\": \"#/definitions/vendorExtension\"\n        }\n      },\n      \"properties\": {\n        \"tags\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          },\n          \"uniqueItems\": true\n        },\n        \"summary\": {\n          \"type\": \"string\",\n          \"description\": \"A brief summary of the operation.\"\n        },\n        \"description\": {\n          \"type\": \"string\",\n          \"description\": \"A longer description of the operation, GitHub Flavored Markdown is allowed.\"\n        },\n        \"externalDocs\": {\n          \"$ref\": \"#/definitions/externalDocs\"\n        },\n        \"operationId\": {\n          \"type\": \"string\",\n          \"description\": \"A unique identifier of the operation.\"\n        },\n        \"produces\": {\n          \"description\": \"A list of MIME types the API can produce.\",\n          \"allOf\": [\n            {\n              \"$ref\": \"#/definitions/mediaTypeList\"\n            }\n          ]\n        },\n        \"consumes\": {\n          \"description\": \"A list of MIME types the API can consume.\",\n          \"allOf\": [\n            {\n              \"$ref\": \"#/definitions/mediaTypeList\"\n            }\n          ]\n        },\n        \"parameters\": {\n          \"$ref\": \"#/definitions/parametersList\"\n        },\n        \"responses\": {\n          \"$ref\": \"#/definitions/responses\"\n        },\n        \"schemes\": {\n          \"$ref\": \"#/definitions/schemesList\"\n        },\n        \"deprecated\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"security\": {\n          \"$ref\": \"#/definitions/security\"\n        }\n      }\n    },\n    \"pathItem\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"patternProperties\": {\n        \"^x-\": {\n          \"$ref\": \"#/definitions/vendorExtension\"\n        }\n      },\n      \"properties\": {\n        \"$ref\": {\n          \"type\": \"string\"\n        },\n        \"get\": {\n          \"$ref\": \"#/definitions/operation\"\n        },\n        \"put\": {\n          \"$ref\": \"#/definitions/operation\"\n        },\n        \"post\": {\n          \"$ref\": \"#/definitions/operation\"\n        },\n        \"delete\": {\n          \"$ref\": \"#/definitions/operation\"\n        },\n        \"options\": {\n          \"$ref\": \"#/definitions/operation\"\n        },\n        \"head\": {\n          \"$ref\": \"#/definitions/operation\"\n        },\n        \"patch\": {\n          \"$ref\": \"#/definitions/operation\"\n        },\n        \"parameters\": {\n          \"$ref\": \"#/definitions/parametersList\"\n        }\n      }\n    },\n    \"responses\": {\n      \"type\": \"object\",\n      \"description\": \"Response objects names can either be any valid HTTP status code or 'default'.\",\n      \"minProperties\": 1,\n      \"additionalProperties\": false,\n      \"patternProperties\": {\n        \"^([0-9]{3})$|^(default)$\": {\n          \"$ref\": \"#/definitions/responseValue\"\n        },\n        \"^x-\": {\n          \"$ref\": \"#/definitions/vendorExtension\"\n        }\n      },\n      \"not\": {\n        \"type\": \"object\",\n        \"additionalProperties\": false,\n        \"patternProperties\": {\n          \"^x-\": {\n            \"$ref\": \"#/definitions/vendorExtension\"\n          }\n        }\n      }\n    },\n    \"responseValue\": {\n      \"oneOf\": [\n        {\n          \"$ref\": \"#/definitions/response\"\n        },\n        {\n          \"$ref\": \"#/definitions/jsonReference\"\n        }\n      ]\n    },\n    \"response\": {\n      \"type\": \"object\",\n      \"required\": [\"description\"],\n      \"properties\": {\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"schema\": {\n          \"oneOf\": [\n            {\n              \"$ref\": \"#/definitions/schema\"\n            },\n            {\n              \"$ref\": \"#/definitions/fileSchema\"\n            }\n          ]\n        },\n        \"headers\": {\n          \"$ref\": \"#/definitions/headers\"\n        },\n        \"examples\": {\n          \"$ref\": \"#/definitions/examples\"\n        }\n      },\n      \"additionalProperties\": false,\n      \"patternProperties\": {\n        \"^x-\": {\n          \"$ref\": \"#/definitions/vendorExtension\"\n        }\n      }\n    },\n    \"headers\": {\n      \"type\": \"object\",\n      \"additionalProperties\": {\n        \"$ref\": \"#/definitions/header\"\n      }\n    },\n    \"header\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"required\": [\"type\"],\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"enum\": [\"string\", \"number\", \"integer\", \"boolean\", \"array\"]\n        },\n        \"format\": {\n          \"type\": \"string\"\n        },\n        \"items\": {\n          \"$ref\": \"#/definitions/primitivesItems\"\n        },\n        \"collectionFormat\": {\n          \"$ref\": \"#/definitions/collectionFormat\"\n        },\n        \"default\": {\n          \"$ref\": \"#/definitions/default\"\n        },\n        \"maximum\": {\n          \"$ref\": \"#/definitions/maximum\"\n        },\n        \"exclusiveMaximum\": {\n          \"$ref\": \"#/definitions/exclusiveMaximum\"\n        },\n        \"minimum\": {\n          \"$ref\": \"#/definitions/minimum\"\n        },\n        \"exclusiveMinimum\": {\n          \"$ref\": \"#/definitions/exclusiveMinimum\"\n        },\n        \"maxLength\": {\n          \"$ref\": \"#/definitions/maxLength\"\n        },\n        \"minLength\": {\n          \"$ref\": \"#/definitions/minLength\"\n        },\n        \"pattern\": {\n          \"$ref\": \"#/definitions/pattern\"\n        },\n        \"maxItems\": {\n          \"$ref\": \"#/definitions/maxItems\"\n        },\n        \"minItems\": {\n          \"$ref\": \"#/definitions/minItems\"\n        },\n        \"uniqueItems\": {\n          \"$ref\": \"#/definitions/uniqueItems\"\n        },\n        \"enum\": {\n          \"$ref\": \"#/definitions/enum\"\n        },\n        \"multipleOf\": {\n          \"$ref\": \"#/definitions/multipleOf\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        }\n      },\n      \"patternProperties\": {\n        \"^x-\": {\n          \"$ref\": \"#/definitions/vendorExtension\"\n        }\n      }\n    },\n    \"vendorExtension\": {\n      \"description\": \"Any property starting with x- is valid.\",\n      \"additionalProperties\": true,\n      \"additionalItems\": true\n    },\n    \"bodyParameter\": {\n      \"type\": \"object\",\n      \"required\": [\"name\", \"in\", \"schema\"],\n      \"patternProperties\": {\n        \"^x-\": {\n          \"$ref\": \"#/definitions/vendorExtension\"\n        }\n      },\n      \"properties\": {\n        \"description\": {\n          \"type\": \"string\",\n          \"description\": \"A brief description of the parameter. This could contain examples of use.  GitHub Flavored Markdown is allowed.\"\n        },\n        \"name\": {\n          \"type\": \"string\",\n          \"description\": \"The name of the parameter.\"\n        },\n        \"in\": {\n          \"type\": \"string\",\n          \"description\": \"Determines the location of the parameter.\",\n          \"enum\": [\"body\"]\n        },\n        \"required\": {\n          \"type\": \"boolean\",\n          \"description\": \"Determines whether or not this parameter is required or optional.\",\n          \"default\": false\n        },\n        \"schema\": {\n          \"$ref\": \"#/definitions/schema\"\n        }\n      },\n      \"additionalProperties\": false\n    },\n    \"headerParameterSubSchema\": {\n      \"additionalProperties\": false,\n      \"patternProperties\": {\n        \"^x-\": {\n          \"$ref\": \"#/definitions/vendorExtension\"\n        }\n      },\n      \"properties\": {\n        \"required\": {\n          \"type\": \"boolean\",\n          \"description\": \"Determines whether or not this parameter is required or optional.\",\n          \"default\": false\n        },\n        \"in\": {\n          \"type\": \"string\",\n          \"description\": \"Determines the location of the parameter.\",\n          \"enum\": [\"header\"]\n        },\n        \"description\": {\n          \"type\": \"string\",\n          \"description\": \"A brief description of the parameter. This could contain examples of use.  GitHub Flavored Markdown is allowed.\"\n        },\n        \"name\": {\n          \"type\": \"string\",\n          \"description\": \"The name of the parameter.\"\n        },\n        \"type\": {\n          \"type\": \"string\",\n          \"enum\": [\"string\", \"number\", \"boolean\", \"integer\", \"array\"]\n        },\n        \"format\": {\n          \"type\": \"string\"\n        },\n        \"items\": {\n          \"$ref\": \"#/definitions/primitivesItems\"\n        },\n        \"collectionFormat\": {\n          \"$ref\": \"#/definitions/collectionFormat\"\n        },\n        \"default\": {\n          \"$ref\": \"#/definitions/default\"\n        },\n        \"maximum\": {\n          \"$ref\": \"#/definitions/maximum\"\n        },\n        \"exclusiveMaximum\": {\n          \"$ref\": \"#/definitions/exclusiveMaximum\"\n        },\n        \"minimum\": {\n          \"$ref\": \"#/definitions/minimum\"\n        },\n        \"exclusiveMinimum\": {\n          \"$ref\": \"#/definitions/exclusiveMinimum\"\n        },\n        \"maxLength\": {\n          \"$ref\": \"#/definitions/maxLength\"\n        },\n        \"minLength\": {\n          \"$ref\": \"#/definitions/minLength\"\n        },\n        \"pattern\": {\n          \"$ref\": \"#/definitions/pattern\"\n        },\n        \"maxItems\": {\n          \"$ref\": \"#/definitions/maxItems\"\n        },\n        \"minItems\": {\n          \"$ref\": \"#/definitions/minItems\"\n        },\n        \"uniqueItems\": {\n          \"$ref\": \"#/definitions/uniqueItems\"\n        },\n        \"enum\": {\n          \"$ref\": \"#/definitions/enum\"\n        },\n        \"multipleOf\": {\n          \"$ref\": \"#/definitions/multipleOf\"\n        }\n      }\n    },\n    \"queryParameterSubSchema\": {\n      \"additionalProperties\": false,\n      \"patternProperties\": {\n        \"^x-\": {\n          \"$ref\": \"#/definitions/vendorExtension\"\n        }\n      },\n      \"properties\": {\n        \"required\": {\n          \"type\": \"boolean\",\n          \"description\": \"Determines whether or not this parameter is required or optional.\",\n          \"default\": false\n        },\n        \"in\": {\n          \"type\": \"string\",\n          \"description\": \"Determines the location of the parameter.\",\n          \"enum\": [\"query\"]\n        },\n        \"description\": {\n          \"type\": \"string\",\n          \"description\": \"A brief description of the parameter. This could contain examples of use.  GitHub Flavored Markdown is allowed.\"\n        },\n        \"name\": {\n          \"type\": \"string\",\n          \"description\": \"The name of the parameter.\"\n        },\n        \"allowEmptyValue\": {\n          \"type\": \"boolean\",\n          \"default\": false,\n          \"description\": \"allows sending a parameter by name only or with an empty value.\"\n        },\n        \"type\": {\n          \"type\": \"string\",\n          \"enum\": [\"string\", \"number\", \"boolean\", \"integer\", \"array\"]\n        },\n        \"format\": {\n          \"type\": \"string\"\n        },\n        \"items\": {\n          \"$ref\": \"#/definitions/primitivesItems\"\n        },\n        \"collectionFormat\": {\n          \"$ref\": \"#/definitions/collectionFormatWithMulti\"\n        },\n        \"default\": {\n          \"$ref\": \"#/definitions/default\"\n        },\n        \"maximum\": {\n          \"$ref\": \"#/definitions/maximum\"\n        },\n        \"exclusiveMaximum\": {\n          \"$ref\": \"#/definitions/exclusiveMaximum\"\n        },\n        \"minimum\": {\n          \"$ref\": \"#/definitions/minimum\"\n        },\n        \"exclusiveMinimum\": {\n          \"$ref\": \"#/definitions/exclusiveMinimum\"\n        },\n        \"maxLength\": {\n          \"$ref\": \"#/definitions/maxLength\"\n        },\n        \"minLength\": {\n          \"$ref\": \"#/definitions/minLength\"\n        },\n        \"pattern\": {\n          \"$ref\": \"#/definitions/pattern\"\n        },\n        \"maxItems\": {\n          \"$ref\": \"#/definitions/maxItems\"\n        },\n        \"minItems\": {\n          \"$ref\": \"#/definitions/minItems\"\n        },\n        \"uniqueItems\": {\n          \"$ref\": \"#/definitions/uniqueItems\"\n        },\n        \"enum\": {\n          \"$ref\": \"#/definitions/enum\"\n        },\n        \"multipleOf\": {\n          \"$ref\": \"#/definitions/multipleOf\"\n        }\n      }\n    },\n    \"formDataParameterSubSchema\": {\n      \"additionalProperties\": false,\n      \"patternProperties\": {\n        \"^x-\": {\n          \"$ref\": \"#/definitions/vendorExtension\"\n        }\n      },\n      \"properties\": {\n        \"required\": {\n          \"type\": \"boolean\",\n          \"description\": \"Determines whether or not this parameter is required or optional.\",\n          \"default\": false\n        },\n        \"in\": {\n          \"type\": \"string\",\n          \"description\": \"Determines the location of the parameter.\",\n          \"enum\": [\"formData\"]\n        },\n        \"description\": {\n          \"type\": \"string\",\n          \"description\": \"A brief description of the parameter. This could contain examples of use.  GitHub Flavored Markdown is allowed.\"\n        },\n        \"name\": {\n          \"type\": \"string\",\n          \"description\": \"The name of the parameter.\"\n        },\n        \"allowEmptyValue\": {\n          \"type\": \"boolean\",\n          \"default\": false,\n          \"description\": \"allows sending a parameter by name only or with an empty value.\"\n        },\n        \"type\": {\n          \"type\": \"string\",\n          \"enum\": [\"string\", \"number\", \"boolean\", \"integer\", \"array\", \"file\"]\n        },\n        \"format\": {\n          \"type\": \"string\"\n        },\n        \"items\": {\n          \"$ref\": \"#/definitions/primitivesItems\"\n        },\n        \"collectionFormat\": {\n          \"$ref\": \"#/definitions/collectionFormatWithMulti\"\n        },\n        \"default\": {\n          \"$ref\": \"#/definitions/default\"\n        },\n        \"maximum\": {\n          \"$ref\": \"#/definitions/maximum\"\n        },\n        \"exclusiveMaximum\": {\n          \"$ref\": \"#/definitions/exclusiveMaximum\"\n        },\n        \"minimum\": {\n          \"$ref\": \"#/definitions/minimum\"\n        },\n        \"exclusiveMinimum\": {\n          \"$ref\": \"#/definitions/exclusiveMinimum\"\n        },\n        \"maxLength\": {\n          \"$ref\": \"#/definitions/maxLength\"\n        },\n        \"minLength\": {\n          \"$ref\": \"#/definitions/minLength\"\n        },\n        \"pattern\": {\n          \"$ref\": \"#/definitions/pattern\"\n        },\n        \"maxItems\": {\n          \"$ref\": \"#/definitions/maxItems\"\n        },\n        \"minItems\": {\n          \"$ref\": \"#/definitions/minItems\"\n        },\n        \"uniqueItems\": {\n          \"$ref\": \"#/definitions/uniqueItems\"\n        },\n        \"enum\": {\n          \"$ref\": \"#/definitions/enum\"\n        },\n        \"multipleOf\": {\n          \"$ref\": \"#/definitions/multipleOf\"\n        }\n      }\n    },\n    \"pathParameterSubSchema\": {\n      \"additionalProperties\": false,\n      \"patternProperties\": {\n        \"^x-\": {\n          \"$ref\": \"#/definitions/vendorExtension\"\n        }\n      },\n      \"required\": [\"required\"],\n      \"properties\": {\n        \"required\": {\n          \"type\": \"boolean\",\n          \"enum\": [true],\n          \"description\": \"Determines whether or not this parameter is required or optional.\"\n        },\n        \"in\": {\n          \"type\": \"string\",\n          \"description\": \"Determines the location of the parameter.\",\n          \"enum\": [\"path\"]\n        },\n        \"description\": {\n          \"type\": \"string\",\n          \"description\": \"A brief description of the parameter. This could contain examples of use.  GitHub Flavored Markdown is allowed.\"\n        },\n        \"name\": {\n          \"type\": \"string\",\n          \"description\": \"The name of the parameter.\"\n        },\n        \"type\": {\n          \"type\": \"string\",\n          \"enum\": [\"string\", \"number\", \"boolean\", \"integer\", \"array\"]\n        },\n        \"format\": {\n          \"type\": \"string\"\n        },\n        \"items\": {\n          \"$ref\": \"#/definitions/primitivesItems\"\n        },\n        \"collectionFormat\": {\n          \"$ref\": \"#/definitions/collectionFormat\"\n        },\n        \"default\": {\n          \"$ref\": \"#/definitions/default\"\n        },\n        \"maximum\": {\n          \"$ref\": \"#/definitions/maximum\"\n        },\n        \"exclusiveMaximum\": {\n          \"$ref\": \"#/definitions/exclusiveMaximum\"\n        },\n        \"minimum\": {\n          \"$ref\": \"#/definitions/minimum\"\n        },\n        \"exclusiveMinimum\": {\n          \"$ref\": \"#/definitions/exclusiveMinimum\"\n        },\n        \"maxLength\": {\n          \"$ref\": \"#/definitions/maxLength\"\n        },\n        \"minLength\": {\n          \"$ref\": \"#/definitions/minLength\"\n        },\n        \"pattern\": {\n          \"$ref\": \"#/definitions/pattern\"\n        },\n        \"maxItems\": {\n          \"$ref\": \"#/definitions/maxItems\"\n        },\n        \"minItems\": {\n          \"$ref\": \"#/definitions/minItems\"\n        },\n        \"uniqueItems\": {\n          \"$ref\": \"#/definitions/uniqueItems\"\n        },\n        \"enum\": {\n          \"$ref\": \"#/definitions/enum\"\n        },\n        \"multipleOf\": {\n          \"$ref\": \"#/definitions/multipleOf\"\n        }\n      }\n    },\n    \"nonBodyParameter\": {\n      \"type\": \"object\",\n      \"required\": [\"name\", \"in\", \"type\"],\n      \"oneOf\": [\n        {\n          \"$ref\": \"#/definitions/headerParameterSubSchema\"\n        },\n        {\n          \"$ref\": \"#/definitions/formDataParameterSubSchema\"\n        },\n        {\n          \"$ref\": \"#/definitions/queryParameterSubSchema\"\n        },\n        {\n          \"$ref\": \"#/definitions/pathParameterSubSchema\"\n        }\n      ]\n    },\n    \"parameter\": {\n      \"oneOf\": [\n        {\n          \"$ref\": \"#/definitions/bodyParameter\"\n        },\n        {\n          \"$ref\": \"#/definitions/nonBodyParameter\"\n        }\n      ]\n    },\n    \"schema\": {\n      \"type\": \"object\",\n      \"description\": \"A deterministic version of a JSON Schema object.\",\n      \"patternProperties\": {\n        \"^x-\": {\n          \"$ref\": \"#/definitions/vendorExtension\"\n        }\n      },\n      \"properties\": {\n        \"$ref\": {\n          \"type\": \"string\"\n        },\n        \"format\": {\n          \"type\": \"string\"\n        },\n        \"title\": {\n          \"$ref\": \"http://json-schema.org/draft-04/schema#/properties/title\"\n        },\n        \"description\": {\n          \"$ref\": \"http://json-schema.org/draft-04/schema#/properties/description\"\n        },\n        \"default\": {\n          \"$ref\": \"http://json-schema.org/draft-04/schema#/properties/default\"\n        },\n        \"multipleOf\": {\n          \"$ref\": \"http://json-schema.org/draft-04/schema#/properties/multipleOf\"\n        },\n        \"maximum\": {\n          \"$ref\": \"http://json-schema.org/draft-04/schema#/properties/maximum\"\n        },\n        \"exclusiveMaximum\": {\n          \"$ref\": \"http://json-schema.org/draft-04/schema#/properties/exclusiveMaximum\"\n        },\n        \"minimum\": {\n          \"$ref\": \"http://json-schema.org/draft-04/schema#/properties/minimum\"\n        },\n        \"exclusiveMinimum\": {\n          \"$ref\": \"http://json-schema.org/draft-04/schema#/properties/exclusiveMinimum\"\n        },\n        \"maxLength\": {\n          \"$ref\": \"http://json-schema.org/draft-04/schema#/definitions/positiveInteger\"\n        },\n        \"minLength\": {\n          \"$ref\": \"http://json-schema.org/draft-04/schema#/definitions/positiveIntegerDefault0\"\n        },\n        \"pattern\": {\n          \"$ref\": \"http://json-schema.org/draft-04/schema#/properties/pattern\"\n        },\n        \"maxItems\": {\n          \"$ref\": \"http://json-schema.org/draft-04/schema#/definitions/positiveInteger\"\n        },\n        \"minItems\": {\n          \"$ref\": \"http://json-schema.org/draft-04/schema#/definitions/positiveIntegerDefault0\"\n        },\n        \"uniqueItems\": {\n          \"$ref\": \"http://json-schema.org/draft-04/schema#/properties/uniqueItems\"\n        },\n        \"maxProperties\": {\n          \"$ref\": \"http://json-schema.org/draft-04/schema#/definitions/positiveInteger\"\n        },\n        \"minProperties\": {\n          \"$ref\": \"http://json-schema.org/draft-04/schema#/definitions/positiveIntegerDefault0\"\n        },\n        \"required\": {\n          \"$ref\": \"http://json-schema.org/draft-04/schema#/definitions/stringArray\"\n        },\n        \"enum\": {\n          \"$ref\": \"http://json-schema.org/draft-04/schema#/properties/enum\"\n        },\n        \"additionalProperties\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/definitions/schema\"\n            },\n            {\n              \"type\": \"boolean\"\n            }\n          ],\n          \"default\": {}\n        },\n        \"type\": {\n          \"$ref\": \"http://json-schema.org/draft-04/schema#/properties/type\"\n        },\n        \"items\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/definitions/schema\"\n            },\n            {\n              \"type\": \"array\",\n              \"minItems\": 1,\n              \"items\": {\n                \"$ref\": \"#/definitions/schema\"\n              }\n            }\n          ],\n          \"default\": {}\n        },\n        \"allOf\": {\n          \"type\": \"array\",\n          \"minItems\": 1,\n          \"items\": {\n            \"$ref\": \"#/definitions/schema\"\n          }\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"$ref\": \"#/definitions/schema\"\n          },\n          \"default\": {}\n        },\n        \"discriminator\": {\n          \"type\": \"string\"\n        },\n        \"readOnly\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"xml\": {\n          \"$ref\": \"#/definitions/xml\"\n        },\n        \"externalDocs\": {\n          \"$ref\": \"#/definitions/externalDocs\"\n        },\n        \"example\": {}\n      },\n      \"additionalProperties\": false\n    },\n    \"fileSchema\": {\n      \"type\": \"object\",\n      \"description\": \"A deterministic version of a JSON Schema object.\",\n      \"patternProperties\": {\n        \"^x-\": {\n          \"$ref\": \"#/definitions/vendorExtension\"\n        }\n      },\n      \"required\": [\"type\"],\n      \"properties\": {\n        \"format\": {\n          \"type\": \"string\"\n        },\n        \"title\": {\n          \"$ref\": \"http://json-schema.org/draft-04/schema#/properties/title\"\n        },\n        \"description\": {\n          \"$ref\": \"http://json-schema.org/draft-04/schema#/properties/description\"\n        },\n        \"default\": {\n          \"$ref\": \"http://json-schema.org/draft-04/schema#/properties/default\"\n        },\n        \"required\": {\n          \"$ref\": \"http://json-schema.org/draft-04/schema#/definitions/stringArray\"\n        },\n        \"type\": {\n          \"type\": \"string\",\n          \"enum\": [\"file\"]\n        },\n        \"readOnly\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"externalDocs\": {\n          \"$ref\": \"#/definitions/externalDocs\"\n        },\n        \"example\": {}\n      },\n      \"additionalProperties\": false\n    },\n    \"primitivesItems\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"enum\": [\"string\", \"number\", \"integer\", \"boolean\", \"array\"]\n        },\n        \"format\": {\n          \"type\": \"string\"\n        },\n        \"items\": {\n          \"$ref\": \"#/definitions/primitivesItems\"\n        },\n        \"collectionFormat\": {\n          \"$ref\": \"#/definitions/collectionFormat\"\n        },\n        \"default\": {\n          \"$ref\": \"#/definitions/default\"\n        },\n        \"maximum\": {\n          \"$ref\": \"#/definitions/maximum\"\n        },\n        \"exclusiveMaximum\": {\n          \"$ref\": \"#/definitions/exclusiveMaximum\"\n        },\n        \"minimum\": {\n          \"$ref\": \"#/definitions/minimum\"\n        },\n        \"exclusiveMinimum\": {\n          \"$ref\": \"#/definitions/exclusiveMinimum\"\n        },\n        \"maxLength\": {\n          \"$ref\": \"#/definitions/maxLength\"\n        },\n        \"minLength\": {\n          \"$ref\": \"#/definitions/minLength\"\n        },\n        \"pattern\": {\n          \"$ref\": \"#/definitions/pattern\"\n        },\n        \"maxItems\": {\n          \"$ref\": \"#/definitions/maxItems\"\n        },\n        \"minItems\": {\n          \"$ref\": \"#/definitions/minItems\"\n        },\n        \"uniqueItems\": {\n          \"$ref\": \"#/definitions/uniqueItems\"\n        },\n        \"enum\": {\n          \"$ref\": \"#/definitions/enum\"\n        },\n        \"multipleOf\": {\n          \"$ref\": \"#/definitions/multipleOf\"\n        }\n      },\n      \"patternProperties\": {\n        \"^x-\": {\n          \"$ref\": \"#/definitions/vendorExtension\"\n        }\n      }\n    },\n    \"security\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"$ref\": \"#/definitions/securityRequirement\"\n      },\n      \"uniqueItems\": true\n    },\n    \"securityRequirement\": {\n      \"type\": \"object\",\n      \"additionalProperties\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"type\": \"string\"\n        },\n        \"uniqueItems\": true\n      }\n    },\n    \"xml\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"namespace\": {\n          \"type\": \"string\"\n        },\n        \"prefix\": {\n          \"type\": \"string\"\n        },\n        \"attribute\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"wrapped\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        }\n      },\n      \"patternProperties\": {\n        \"^x-\": {\n          \"$ref\": \"#/definitions/vendorExtension\"\n        }\n      }\n    },\n    \"tag\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"required\": [\"name\"],\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"externalDocs\": {\n          \"$ref\": \"#/definitions/externalDocs\"\n        }\n      },\n      \"patternProperties\": {\n        \"^x-\": {\n          \"$ref\": \"#/definitions/vendorExtension\"\n        }\n      }\n    },\n    \"securityDefinitions\": {\n      \"type\": \"object\",\n      \"additionalProperties\": {\n        \"oneOf\": [\n          {\n            \"$ref\": \"#/definitions/basicAuthenticationSecurity\"\n          },\n          {\n            \"$ref\": \"#/definitions/apiKeySecurity\"\n          },\n          {\n            \"$ref\": \"#/definitions/oauth2ImplicitSecurity\"\n          },\n          {\n            \"$ref\": \"#/definitions/oauth2PasswordSecurity\"\n          },\n          {\n            \"$ref\": \"#/definitions/oauth2ApplicationSecurity\"\n          },\n          {\n            \"$ref\": \"#/definitions/oauth2AccessCodeSecurity\"\n          }\n        ]\n      }\n    },\n    \"basicAuthenticationSecurity\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"required\": [\"type\"],\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"enum\": [\"basic\"]\n        },\n        \"description\": {\n          \"type\": \"string\"\n        }\n      },\n      \"patternProperties\": {\n        \"^x-\": {\n          \"$ref\": \"#/definitions/vendorExtension\"\n        }\n      }\n    },\n    \"apiKeySecurity\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"required\": [\"type\", \"name\", \"in\"],\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"enum\": [\"apiKey\"]\n        },\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"in\": {\n          \"type\": \"string\",\n          \"enum\": [\"header\", \"query\"]\n        },\n        \"description\": {\n          \"type\": \"string\"\n        }\n      },\n      \"patternProperties\": {\n        \"^x-\": {\n          \"$ref\": \"#/definitions/vendorExtension\"\n        }\n      }\n    },\n    \"oauth2ImplicitSecurity\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"required\": [\"type\", \"flow\", \"authorizationUrl\"],\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"enum\": [\"oauth2\"]\n        },\n        \"flow\": {\n          \"type\": \"string\",\n          \"enum\": [\"implicit\"]\n        },\n        \"scopes\": {\n          \"$ref\": \"#/definitions/oauth2Scopes\"\n        },\n        \"authorizationUrl\": {\n          \"type\": \"string\",\n          \"format\": \"uri\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        }\n      },\n      \"patternProperties\": {\n        \"^x-\": {\n          \"$ref\": \"#/definitions/vendorExtension\"\n        }\n      }\n    },\n    \"oauth2PasswordSecurity\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"required\": [\"type\", \"flow\", \"tokenUrl\"],\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"enum\": [\"oauth2\"]\n        },\n        \"flow\": {\n          \"type\": \"string\",\n          \"enum\": [\"password\"]\n        },\n        \"scopes\": {\n          \"$ref\": \"#/definitions/oauth2Scopes\"\n        },\n        \"tokenUrl\": {\n          \"type\": \"string\",\n          \"format\": \"uri\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        }\n      },\n      \"patternProperties\": {\n        \"^x-\": {\n          \"$ref\": \"#/definitions/vendorExtension\"\n        }\n      }\n    },\n    \"oauth2ApplicationSecurity\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"required\": [\"type\", \"flow\", \"tokenUrl\"],\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"enum\": [\"oauth2\"]\n        },\n        \"flow\": {\n          \"type\": \"string\",\n          \"enum\": [\"application\"]\n        },\n        \"scopes\": {\n          \"$ref\": \"#/definitions/oauth2Scopes\"\n        },\n        \"tokenUrl\": {\n          \"type\": \"string\",\n          \"format\": \"uri\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        }\n      },\n      \"patternProperties\": {\n        \"^x-\": {\n          \"$ref\": \"#/definitions/vendorExtension\"\n        }\n      }\n    },\n    \"oauth2AccessCodeSecurity\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"required\": [\"type\", \"flow\", \"authorizationUrl\", \"tokenUrl\"],\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"enum\": [\"oauth2\"]\n        },\n        \"flow\": {\n          \"type\": \"string\",\n          \"enum\": [\"accessCode\"]\n        },\n        \"scopes\": {\n          \"$ref\": \"#/definitions/oauth2Scopes\"\n        },\n        \"authorizationUrl\": {\n          \"type\": \"string\",\n          \"format\": \"uri\"\n        },\n        \"tokenUrl\": {\n          \"type\": \"string\",\n          \"format\": \"uri\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        }\n      },\n      \"patternProperties\": {\n        \"^x-\": {\n          \"$ref\": \"#/definitions/vendorExtension\"\n        }\n      }\n    },\n    \"oauth2Scopes\": {\n      \"type\": \"object\",\n      \"additionalProperties\": {\n        \"type\": \"string\"\n      }\n    },\n    \"mediaTypeList\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"$ref\": \"#/definitions/mimeType\"\n      },\n      \"uniqueItems\": true\n    },\n    \"parametersList\": {\n      \"type\": \"array\",\n      \"description\": \"The parameters needed to send a valid API call.\",\n      \"additionalItems\": false,\n      \"items\": {\n        \"oneOf\": [\n          {\n            \"$ref\": \"#/definitions/parameter\"\n          },\n          {\n            \"$ref\": \"#/definitions/jsonReference\"\n          }\n        ]\n      },\n      \"uniqueItems\": true\n    },\n    \"schemesList\": {\n      \"type\": \"array\",\n      \"description\": \"The transfer protocol of the API.\",\n      \"items\": {\n        \"type\": \"string\",\n        \"enum\": [\"http\", \"https\", \"ws\", \"wss\"]\n      },\n      \"uniqueItems\": true\n    },\n    \"collectionFormat\": {\n      \"type\": \"string\",\n      \"enum\": [\"csv\", \"ssv\", \"tsv\", \"pipes\"],\n      \"default\": \"csv\"\n    },\n    \"collectionFormatWithMulti\": {\n      \"type\": \"string\",\n      \"enum\": [\"csv\", \"ssv\", \"tsv\", \"pipes\", \"multi\"],\n      \"default\": \"csv\"\n    },\n    \"title\": {\n      \"$ref\": \"http://json-schema.org/draft-04/schema#/properties/title\"\n    },\n    \"description\": {\n      \"$ref\": \"http://json-schema.org/draft-04/schema#/properties/description\"\n    },\n    \"default\": {\n      \"$ref\": \"http://json-schema.org/draft-04/schema#/properties/default\"\n    },\n    \"multipleOf\": {\n      \"$ref\": \"http://json-schema.org/draft-04/schema#/properties/multipleOf\"\n    },\n    \"maximum\": {\n      \"$ref\": \"http://json-schema.org/draft-04/schema#/properties/maximum\"\n    },\n    \"exclusiveMaximum\": {\n      \"$ref\": \"http://json-schema.org/draft-04/schema#/properties/exclusiveMaximum\"\n    },\n    \"minimum\": {\n      \"$ref\": \"http://json-schema.org/draft-04/schema#/properties/minimum\"\n    },\n    \"exclusiveMinimum\": {\n      \"$ref\": \"http://json-schema.org/draft-04/schema#/properties/exclusiveMinimum\"\n    },\n    \"maxLength\": {\n      \"$ref\": \"http://json-schema.org/draft-04/schema#/definitions/positiveInteger\"\n    },\n    \"minLength\": {\n      \"$ref\": \"http://json-schema.org/draft-04/schema#/definitions/positiveIntegerDefault0\"\n    },\n    \"pattern\": {\n      \"$ref\": \"http://json-schema.org/draft-04/schema#/properties/pattern\"\n    },\n    \"maxItems\": {\n      \"$ref\": \"http://json-schema.org/draft-04/schema#/definitions/positiveInteger\"\n    },\n    \"minItems\": {\n      \"$ref\": \"http://json-schema.org/draft-04/schema#/definitions/positiveIntegerDefault0\"\n    },\n    \"uniqueItems\": {\n      \"$ref\": \"http://json-schema.org/draft-04/schema#/properties/uniqueItems\"\n    },\n    \"enum\": {\n      \"$ref\": \"http://json-schema.org/draft-04/schema#/properties/enum\"\n    },\n    \"jsonReference\": {\n      \"type\": \"object\",\n      \"required\": [\"$ref\"],\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"$ref\": {\n          \"type\": \"string\"\n        }\n      }\n    }\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2220, "column": 0}, "map": {"version":3,"sources":["file:///home/tom/www2026/8_server/vercel/mydoc.site/node_modules/.pnpm/%40scalar%2Bopenapi-parser%400.18.3/node_modules/%40scalar/openapi-parser/src/schemas/v3.0/schema.ts"],"sourcesContent":["export default {\n  \"id\": \"https://spec.openapis.org/oas/3.0/schema/2021-09-28\",\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"description\": \"The description of OpenAPI v3.0.x documents, as defined by https://spec.openapis.org/oas/v3.0.3\",\n  \"type\": \"object\",\n  \"required\": [\"openapi\", \"info\", \"paths\"],\n  \"properties\": {\n    \"openapi\": {\n      \"type\": \"string\",\n      \"pattern\": \"^3\\\\.0\\\\.\\\\d(-.+)?$\"\n    },\n    \"info\": {\n      \"$ref\": \"#/definitions/Info\"\n    },\n    \"externalDocs\": {\n      \"$ref\": \"#/definitions/ExternalDocumentation\"\n    },\n    \"servers\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"$ref\": \"#/definitions/Server\"\n      }\n    },\n    \"security\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"$ref\": \"#/definitions/SecurityRequirement\"\n      }\n    },\n    \"tags\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"$ref\": \"#/definitions/Tag\"\n      },\n      \"uniqueItems\": true\n    },\n    \"paths\": {\n      \"$ref\": \"#/definitions/Paths\"\n    },\n    \"components\": {\n      \"$ref\": \"#/definitions/Components\"\n    }\n  },\n  \"patternProperties\": {\n    \"^x-\": {}\n  },\n  \"additionalProperties\": false,\n  \"definitions\": {\n    \"Reference\": {\n      \"type\": \"object\",\n      \"required\": [\"$ref\"],\n      \"patternProperties\": {\n        \"^\\\\$ref$\": {\n          \"type\": \"string\",\n          \"format\": \"uri-reference\"\n        }\n      }\n    },\n    \"Info\": {\n      \"type\": \"object\",\n      \"required\": [\"title\", \"version\"],\n      \"properties\": {\n        \"title\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"termsOfService\": {\n          \"type\": \"string\",\n          \"format\": \"uri-reference\"\n        },\n        \"contact\": {\n          \"$ref\": \"#/definitions/Contact\"\n        },\n        \"license\": {\n          \"$ref\": \"#/definitions/License\"\n        },\n        \"version\": {\n          \"type\": \"string\"\n        }\n      },\n      \"patternProperties\": {\n        \"^x-\": {}\n      },\n      \"additionalProperties\": false\n    },\n    \"Contact\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"url\": {\n          \"type\": \"string\",\n          \"format\": \"uri-reference\"\n        },\n        \"email\": {\n          \"type\": \"string\",\n          \"format\": \"email\"\n        }\n      },\n      \"patternProperties\": {\n        \"^x-\": {}\n      },\n      \"additionalProperties\": false\n    },\n    \"License\": {\n      \"type\": \"object\",\n      \"required\": [\"name\"],\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"url\": {\n          \"type\": \"string\",\n          \"format\": \"uri-reference\"\n        }\n      },\n      \"patternProperties\": {\n        \"^x-\": {}\n      },\n      \"additionalProperties\": false\n    },\n    \"Server\": {\n      \"type\": \"object\",\n      \"required\": [\"url\"],\n      \"properties\": {\n        \"url\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"variables\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"$ref\": \"#/definitions/ServerVariable\"\n          }\n        }\n      },\n      \"patternProperties\": {\n        \"^x-\": {}\n      },\n      \"additionalProperties\": false\n    },\n    \"ServerVariable\": {\n      \"type\": \"object\",\n      \"required\": [\"default\"],\n      \"properties\": {\n        \"enum\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          }\n        },\n        \"default\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        }\n      },\n      \"patternProperties\": {\n        \"^x-\": {}\n      },\n      \"additionalProperties\": false\n    },\n    \"Components\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"schemas\": {\n          \"type\": \"object\",\n          \"patternProperties\": {\n            \"^[a-zA-Z0-9\\\\.\\\\-_]+$\": {\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/definitions/Schema\"\n                },\n                {\n                  \"$ref\": \"#/definitions/Reference\"\n                }\n              ]\n            }\n          }\n        },\n        \"responses\": {\n          \"type\": \"object\",\n          \"patternProperties\": {\n            \"^[a-zA-Z0-9\\\\.\\\\-_]+$\": {\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/definitions/Reference\"\n                },\n                {\n                  \"$ref\": \"#/definitions/Response\"\n                }\n              ]\n            }\n          }\n        },\n        \"parameters\": {\n          \"type\": \"object\",\n          \"patternProperties\": {\n            \"^[a-zA-Z0-9\\\\.\\\\-_]+$\": {\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/definitions/Reference\"\n                },\n                {\n                  \"$ref\": \"#/definitions/Parameter\"\n                }\n              ]\n            }\n          }\n        },\n        \"examples\": {\n          \"type\": \"object\",\n          \"patternProperties\": {\n            \"^[a-zA-Z0-9\\\\.\\\\-_]+$\": {\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/definitions/Reference\"\n                },\n                {\n                  \"$ref\": \"#/definitions/Example\"\n                }\n              ]\n            }\n          }\n        },\n        \"requestBodies\": {\n          \"type\": \"object\",\n          \"patternProperties\": {\n            \"^[a-zA-Z0-9\\\\.\\\\-_]+$\": {\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/definitions/Reference\"\n                },\n                {\n                  \"$ref\": \"#/definitions/RequestBody\"\n                }\n              ]\n            }\n          }\n        },\n        \"headers\": {\n          \"type\": \"object\",\n          \"patternProperties\": {\n            \"^[a-zA-Z0-9\\\\.\\\\-_]+$\": {\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/definitions/Reference\"\n                },\n                {\n                  \"$ref\": \"#/definitions/Header\"\n                }\n              ]\n            }\n          }\n        },\n        \"securitySchemes\": {\n          \"type\": \"object\",\n          \"patternProperties\": {\n            \"^[a-zA-Z0-9\\\\.\\\\-_]+$\": {\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/definitions/Reference\"\n                },\n                {\n                  \"$ref\": \"#/definitions/SecurityScheme\"\n                }\n              ]\n            }\n          }\n        },\n        \"links\": {\n          \"type\": \"object\",\n          \"patternProperties\": {\n            \"^[a-zA-Z0-9\\\\.\\\\-_]+$\": {\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/definitions/Reference\"\n                },\n                {\n                  \"$ref\": \"#/definitions/Link\"\n                }\n              ]\n            }\n          }\n        },\n        \"callbacks\": {\n          \"type\": \"object\",\n          \"patternProperties\": {\n            \"^[a-zA-Z0-9\\\\.\\\\-_]+$\": {\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/definitions/Reference\"\n                },\n                {\n                  \"$ref\": \"#/definitions/Callback\"\n                }\n              ]\n            }\n          }\n        }\n      },\n      \"patternProperties\": {\n        \"^x-\": {}\n      },\n      \"additionalProperties\": false\n    },\n    \"Schema\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"title\": {\n          \"type\": \"string\"\n        },\n        \"multipleOf\": {\n          \"type\": \"number\",\n          \"minimum\": 0,\n          \"exclusiveMinimum\": true\n        },\n        \"maximum\": {\n          \"type\": \"number\"\n        },\n        \"exclusiveMaximum\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"minimum\": {\n          \"type\": \"number\"\n        },\n        \"exclusiveMinimum\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"maxLength\": {\n          \"type\": \"integer\",\n          \"minimum\": 0\n        },\n        \"minLength\": {\n          \"type\": \"integer\",\n          \"minimum\": 0,\n          \"default\": 0\n        },\n        \"pattern\": {\n          \"type\": \"string\",\n          \"format\": \"regex\"\n        },\n        \"maxItems\": {\n          \"type\": \"integer\",\n          \"minimum\": 0\n        },\n        \"minItems\": {\n          \"type\": \"integer\",\n          \"minimum\": 0,\n          \"default\": 0\n        },\n        \"uniqueItems\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"maxProperties\": {\n          \"type\": \"integer\",\n          \"minimum\": 0\n        },\n        \"minProperties\": {\n          \"type\": \"integer\",\n          \"minimum\": 0,\n          \"default\": 0\n        },\n        \"required\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          },\n          \"minItems\": 1,\n          \"uniqueItems\": true\n        },\n        \"enum\": {\n          \"type\": \"array\",\n          \"items\": {},\n          \"minItems\": 1,\n          \"uniqueItems\": false\n        },\n        \"type\": {\n          \"type\": \"string\",\n          \"enum\": [\"array\", \"boolean\", \"integer\", \"number\", \"object\", \"string\"]\n        },\n        \"not\": {\n          \"oneOf\": [\n            {\n              \"$ref\": \"#/definitions/Schema\"\n            },\n            {\n              \"$ref\": \"#/definitions/Reference\"\n            }\n          ]\n        },\n        \"allOf\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"oneOf\": [\n              {\n                \"$ref\": \"#/definitions/Schema\"\n              },\n              {\n                \"$ref\": \"#/definitions/Reference\"\n              }\n            ]\n          }\n        },\n        \"oneOf\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"oneOf\": [\n              {\n                \"$ref\": \"#/definitions/Schema\"\n              },\n              {\n                \"$ref\": \"#/definitions/Reference\"\n              }\n            ]\n          }\n        },\n        \"anyOf\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"oneOf\": [\n              {\n                \"$ref\": \"#/definitions/Schema\"\n              },\n              {\n                \"$ref\": \"#/definitions/Reference\"\n              }\n            ]\n          }\n        },\n        \"items\": {\n          \"oneOf\": [\n            {\n              \"$ref\": \"#/definitions/Schema\"\n            },\n            {\n              \"$ref\": \"#/definitions/Reference\"\n            }\n          ]\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"oneOf\": [\n              {\n                \"$ref\": \"#/definitions/Schema\"\n              },\n              {\n                \"$ref\": \"#/definitions/Reference\"\n              }\n            ]\n          }\n        },\n        \"additionalProperties\": {\n          \"oneOf\": [\n            {\n              \"$ref\": \"#/definitions/Schema\"\n            },\n            {\n              \"$ref\": \"#/definitions/Reference\"\n            },\n            {\n              \"type\": \"boolean\"\n            }\n          ],\n          \"default\": true\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"format\": {\n          \"type\": \"string\"\n        },\n        \"default\": {},\n        \"nullable\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"discriminator\": {\n          \"$ref\": \"#/definitions/Discriminator\"\n        },\n        \"readOnly\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"writeOnly\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"example\": {},\n        \"externalDocs\": {\n          \"$ref\": \"#/definitions/ExternalDocumentation\"\n        },\n        \"deprecated\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"xml\": {\n          \"$ref\": \"#/definitions/XML\"\n        }\n      },\n      \"patternProperties\": {\n        \"^x-\": {}\n      },\n      \"additionalProperties\": false\n    },\n    \"Discriminator\": {\n      \"type\": \"object\",\n      \"required\": [\"propertyName\"],\n      \"properties\": {\n        \"propertyName\": {\n          \"type\": \"string\"\n        },\n        \"mapping\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    },\n    \"XML\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"namespace\": {\n          \"type\": \"string\",\n          \"format\": \"uri\"\n        },\n        \"prefix\": {\n          \"type\": \"string\"\n        },\n        \"attribute\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"wrapped\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        }\n      },\n      \"patternProperties\": {\n        \"^x-\": {}\n      },\n      \"additionalProperties\": false\n    },\n    \"Response\": {\n      \"type\": \"object\",\n      \"required\": [\"description\"],\n      \"properties\": {\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"headers\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"oneOf\": [\n              {\n                \"$ref\": \"#/definitions/Header\"\n              },\n              {\n                \"$ref\": \"#/definitions/Reference\"\n              }\n            ]\n          }\n        },\n        \"content\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"$ref\": \"#/definitions/MediaType\"\n          }\n        },\n        \"links\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"oneOf\": [\n              {\n                \"$ref\": \"#/definitions/Link\"\n              },\n              {\n                \"$ref\": \"#/definitions/Reference\"\n              }\n            ]\n          }\n        }\n      },\n      \"patternProperties\": {\n        \"^x-\": {}\n      },\n      \"additionalProperties\": false\n    },\n    \"MediaType\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"schema\": {\n          \"oneOf\": [\n            {\n              \"$ref\": \"#/definitions/Schema\"\n            },\n            {\n              \"$ref\": \"#/definitions/Reference\"\n            }\n          ]\n        },\n        \"example\": {},\n        \"examples\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"oneOf\": [\n              {\n                \"$ref\": \"#/definitions/Example\"\n              },\n              {\n                \"$ref\": \"#/definitions/Reference\"\n              }\n            ]\n          }\n        },\n        \"encoding\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"$ref\": \"#/definitions/Encoding\"\n          }\n        }\n      },\n      \"patternProperties\": {\n        \"^x-\": {}\n      },\n      \"additionalProperties\": false,\n      \"allOf\": [\n        {\n          \"$ref\": \"#/definitions/ExampleXORExamples\"\n        }\n      ]\n    },\n    \"Example\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"summary\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"value\": {},\n        \"externalValue\": {\n          \"type\": \"string\",\n          \"format\": \"uri-reference\"\n        }\n      },\n      \"patternProperties\": {\n        \"^x-\": {}\n      },\n      \"additionalProperties\": false\n    },\n    \"Header\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"required\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"deprecated\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"allowEmptyValue\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"style\": {\n          \"type\": \"string\",\n          \"enum\": [\"simple\"],\n          \"default\": \"simple\"\n        },\n        \"explode\": {\n          \"type\": \"boolean\"\n        },\n        \"allowReserved\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"schema\": {\n          \"oneOf\": [\n            {\n              \"$ref\": \"#/definitions/Schema\"\n            },\n            {\n              \"$ref\": \"#/definitions/Reference\"\n            }\n          ]\n        },\n        \"content\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"$ref\": \"#/definitions/MediaType\"\n          },\n          \"minProperties\": 1,\n          \"maxProperties\": 1\n        },\n        \"example\": {},\n        \"examples\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"oneOf\": [\n              {\n                \"$ref\": \"#/definitions/Example\"\n              },\n              {\n                \"$ref\": \"#/definitions/Reference\"\n              }\n            ]\n          }\n        }\n      },\n      \"patternProperties\": {\n        \"^x-\": {}\n      },\n      \"additionalProperties\": false,\n      \"allOf\": [\n        {\n          \"$ref\": \"#/definitions/ExampleXORExamples\"\n        },\n        {\n          \"$ref\": \"#/definitions/SchemaXORContent\"\n        }\n      ]\n    },\n    \"Paths\": {\n      \"type\": \"object\",\n      \"patternProperties\": {\n        \"^\\\\/\": {\n          \"$ref\": \"#/definitions/PathItem\"\n        },\n        \"^x-\": {}\n      },\n      \"additionalProperties\": false\n    },\n    \"PathItem\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"$ref\": {\n          \"type\": \"string\"\n        },\n        \"summary\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"servers\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"$ref\": \"#/definitions/Server\"\n          }\n        },\n        \"parameters\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"oneOf\": [\n              {\n                \"$ref\": \"#/definitions/Parameter\"\n              },\n              {\n                \"$ref\": \"#/definitions/Reference\"\n              }\n            ]\n          },\n          \"uniqueItems\": true\n        }\n      },\n      \"patternProperties\": {\n        \"^(get|put|post|delete|options|head|patch|trace)$\": {\n          \"$ref\": \"#/definitions/Operation\"\n        },\n        \"^x-\": {}\n      },\n      \"additionalProperties\": false\n    },\n    \"Operation\": {\n      \"type\": \"object\",\n      \"required\": [\"responses\"],\n      \"properties\": {\n        \"tags\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          }\n        },\n        \"summary\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"externalDocs\": {\n          \"$ref\": \"#/definitions/ExternalDocumentation\"\n        },\n        \"operationId\": {\n          \"type\": \"string\"\n        },\n        \"parameters\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"oneOf\": [\n              {\n                \"$ref\": \"#/definitions/Parameter\"\n              },\n              {\n                \"$ref\": \"#/definitions/Reference\"\n              }\n            ]\n          },\n          \"uniqueItems\": true\n        },\n        \"requestBody\": {\n          \"oneOf\": [\n            {\n              \"$ref\": \"#/definitions/RequestBody\"\n            },\n            {\n              \"$ref\": \"#/definitions/Reference\"\n            }\n          ]\n        },\n        \"responses\": {\n          \"$ref\": \"#/definitions/Responses\"\n        },\n        \"callbacks\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"oneOf\": [\n              {\n                \"$ref\": \"#/definitions/Callback\"\n              },\n              {\n                \"$ref\": \"#/definitions/Reference\"\n              }\n            ]\n          }\n        },\n        \"deprecated\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"security\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"$ref\": \"#/definitions/SecurityRequirement\"\n          }\n        },\n        \"servers\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"$ref\": \"#/definitions/Server\"\n          }\n        }\n      },\n      \"patternProperties\": {\n        \"^x-\": {}\n      },\n      \"additionalProperties\": false\n    },\n    \"Responses\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"default\": {\n          \"oneOf\": [\n            {\n              \"$ref\": \"#/definitions/Response\"\n            },\n            {\n              \"$ref\": \"#/definitions/Reference\"\n            }\n          ]\n        }\n      },\n      \"patternProperties\": {\n        \"^[1-5](?:\\\\d{2}|XX)$\": {\n          \"oneOf\": [\n            {\n              \"$ref\": \"#/definitions/Response\"\n            },\n            {\n              \"$ref\": \"#/definitions/Reference\"\n            }\n          ]\n        },\n        \"^x-\": {}\n      },\n      \"minProperties\": 1,\n      \"additionalProperties\": false\n    },\n    \"SecurityRequirement\": {\n      \"type\": \"object\",\n      \"additionalProperties\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"type\": \"string\"\n        }\n      }\n    },\n    \"Tag\": {\n      \"type\": \"object\",\n      \"required\": [\"name\"],\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"externalDocs\": {\n          \"$ref\": \"#/definitions/ExternalDocumentation\"\n        }\n      },\n      \"patternProperties\": {\n        \"^x-\": {}\n      },\n      \"additionalProperties\": false\n    },\n    \"ExternalDocumentation\": {\n      \"type\": \"object\",\n      \"required\": [\"url\"],\n      \"properties\": {\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"url\": {\n          \"type\": \"string\",\n          \"format\": \"uri-reference\"\n        }\n      },\n      \"patternProperties\": {\n        \"^x-\": {}\n      },\n      \"additionalProperties\": false\n    },\n    \"ExampleXORExamples\": {\n      \"description\": \"Example and examples are mutually exclusive\",\n      \"not\": {\n        \"required\": [\"example\", \"examples\"]\n      }\n    },\n    \"SchemaXORContent\": {\n      \"description\": \"Schema and content are mutually exclusive, at least one is required\",\n      \"not\": {\n        \"required\": [\"schema\", \"content\"]\n      },\n      \"oneOf\": [\n        {\n          \"required\": [\"schema\"]\n        },\n        {\n          \"required\": [\"content\"],\n          \"description\": \"Some properties are not allowed if content is present\",\n          \"allOf\": [\n            {\n              \"not\": {\n                \"required\": [\"style\"]\n              }\n            },\n            {\n              \"not\": {\n                \"required\": [\"explode\"]\n              }\n            },\n            {\n              \"not\": {\n                \"required\": [\"allowReserved\"]\n              }\n            },\n            {\n              \"not\": {\n                \"required\": [\"example\"]\n              }\n            },\n            {\n              \"not\": {\n                \"required\": [\"examples\"]\n              }\n            }\n          ]\n        }\n      ]\n    },\n    \"Parameter\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"in\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"required\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"deprecated\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"allowEmptyValue\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"style\": {\n          \"type\": \"string\"\n        },\n        \"explode\": {\n          \"type\": \"boolean\"\n        },\n        \"allowReserved\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"schema\": {\n          \"oneOf\": [\n            {\n              \"$ref\": \"#/definitions/Schema\"\n            },\n            {\n              \"$ref\": \"#/definitions/Reference\"\n            }\n          ]\n        },\n        \"content\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"$ref\": \"#/definitions/MediaType\"\n          },\n          \"minProperties\": 1,\n          \"maxProperties\": 1\n        },\n        \"example\": {},\n        \"examples\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"oneOf\": [\n              {\n                \"$ref\": \"#/definitions/Example\"\n              },\n              {\n                \"$ref\": \"#/definitions/Reference\"\n              }\n            ]\n          }\n        }\n      },\n      \"patternProperties\": {\n        \"^x-\": {}\n      },\n      \"additionalProperties\": false,\n      \"required\": [\"name\", \"in\"],\n      \"allOf\": [\n        {\n          \"$ref\": \"#/definitions/ExampleXORExamples\"\n        },\n        {\n          \"$ref\": \"#/definitions/SchemaXORContent\"\n        },\n        {\n          \"$ref\": \"#/definitions/ParameterLocation\"\n        }\n      ]\n    },\n    \"ParameterLocation\": {\n      \"description\": \"Parameter location\",\n      \"oneOf\": [\n        {\n          \"description\": \"Parameter in path\",\n          \"required\": [\"required\"],\n          \"properties\": {\n            \"in\": {\n              \"enum\": [\"path\"]\n            },\n            \"style\": {\n              \"enum\": [\"matrix\", \"label\", \"simple\"],\n              \"default\": \"simple\"\n            },\n            \"required\": {\n              \"enum\": [true]\n            }\n          }\n        },\n        {\n          \"description\": \"Parameter in query\",\n          \"properties\": {\n            \"in\": {\n              \"enum\": [\"query\"]\n            },\n            \"style\": {\n              \"enum\": [\"form\", \"spaceDelimited\", \"pipeDelimited\", \"deepObject\"],\n              \"default\": \"form\"\n            }\n          }\n        },\n        {\n          \"description\": \"Parameter in header\",\n          \"properties\": {\n            \"in\": {\n              \"enum\": [\"header\"]\n            },\n            \"style\": {\n              \"enum\": [\"simple\"],\n              \"default\": \"simple\"\n            }\n          }\n        },\n        {\n          \"description\": \"Parameter in cookie\",\n          \"properties\": {\n            \"in\": {\n              \"enum\": [\"cookie\"]\n            },\n            \"style\": {\n              \"enum\": [\"form\"],\n              \"default\": \"form\"\n            }\n          }\n        }\n      ]\n    },\n    \"RequestBody\": {\n      \"type\": \"object\",\n      \"required\": [\"content\"],\n      \"properties\": {\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"content\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"$ref\": \"#/definitions/MediaType\"\n          }\n        },\n        \"required\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        }\n      },\n      \"patternProperties\": {\n        \"^x-\": {}\n      },\n      \"additionalProperties\": false\n    },\n    \"SecurityScheme\": {\n      \"oneOf\": [\n        {\n          \"$ref\": \"#/definitions/APIKeySecurityScheme\"\n        },\n        {\n          \"$ref\": \"#/definitions/HTTPSecurityScheme\"\n        },\n        {\n          \"$ref\": \"#/definitions/OAuth2SecurityScheme\"\n        },\n        {\n          \"$ref\": \"#/definitions/OpenIdConnectSecurityScheme\"\n        }\n      ]\n    },\n    \"APIKeySecurityScheme\": {\n      \"type\": \"object\",\n      \"required\": [\"type\", \"name\", \"in\"],\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"enum\": [\"apiKey\"]\n        },\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"in\": {\n          \"type\": \"string\",\n          \"enum\": [\"header\", \"query\", \"cookie\"]\n        },\n        \"description\": {\n          \"type\": \"string\"\n        }\n      },\n      \"patternProperties\": {\n        \"^x-\": {}\n      },\n      \"additionalProperties\": false\n    },\n    \"HTTPSecurityScheme\": {\n      \"type\": \"object\",\n      \"required\": [\"scheme\", \"type\"],\n      \"properties\": {\n        \"scheme\": {\n          \"type\": \"string\"\n        },\n        \"bearerFormat\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"type\": {\n          \"type\": \"string\",\n          \"enum\": [\"http\"]\n        }\n      },\n      \"patternProperties\": {\n        \"^x-\": {}\n      },\n      \"additionalProperties\": false,\n      \"oneOf\": [\n        {\n          \"description\": \"Bearer\",\n          \"properties\": {\n            \"scheme\": {\n              \"type\": \"string\",\n              \"pattern\": \"^[Bb][Ee][Aa][Rr][Ee][Rr]$\"\n            }\n          }\n        },\n        {\n          \"description\": \"Non Bearer\",\n          \"not\": {\n            \"required\": [\"bearerFormat\"]\n          },\n          \"properties\": {\n            \"scheme\": {\n              \"not\": {\n                \"type\": \"string\",\n                \"pattern\": \"^[Bb][Ee][Aa][Rr][Ee][Rr]$\"\n              }\n            }\n          }\n        }\n      ]\n    },\n    \"OAuth2SecurityScheme\": {\n      \"type\": \"object\",\n      \"required\": [\"type\", \"flows\"],\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"enum\": [\"oauth2\"]\n        },\n        \"flows\": {\n          \"$ref\": \"#/definitions/OAuthFlows\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        }\n      },\n      \"patternProperties\": {\n        \"^x-\": {}\n      },\n      \"additionalProperties\": false\n    },\n    \"OpenIdConnectSecurityScheme\": {\n      \"type\": \"object\",\n      \"required\": [\"type\", \"openIdConnectUrl\"],\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"enum\": [\"openIdConnect\"]\n        },\n        \"openIdConnectUrl\": {\n          \"type\": \"string\",\n          \"format\": \"uri-reference\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        }\n      },\n      \"patternProperties\": {\n        \"^x-\": {}\n      },\n      \"additionalProperties\": false\n    },\n    \"OAuthFlows\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"implicit\": {\n          \"$ref\": \"#/definitions/ImplicitOAuthFlow\"\n        },\n        \"password\": {\n          \"$ref\": \"#/definitions/PasswordOAuthFlow\"\n        },\n        \"clientCredentials\": {\n          \"$ref\": \"#/definitions/ClientCredentialsFlow\"\n        },\n        \"authorizationCode\": {\n          \"$ref\": \"#/definitions/AuthorizationCodeOAuthFlow\"\n        }\n      },\n      \"patternProperties\": {\n        \"^x-\": {}\n      },\n      \"additionalProperties\": false\n    },\n    \"ImplicitOAuthFlow\": {\n      \"type\": \"object\",\n      \"required\": [\"authorizationUrl\", \"scopes\"],\n      \"properties\": {\n        \"authorizationUrl\": {\n          \"type\": \"string\",\n          \"format\": \"uri-reference\"\n        },\n        \"refreshUrl\": {\n          \"type\": \"string\",\n          \"format\": \"uri-reference\"\n        },\n        \"scopes\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"patternProperties\": {\n        \"^x-\": {}\n      },\n      \"additionalProperties\": false\n    },\n    \"PasswordOAuthFlow\": {\n      \"type\": \"object\",\n      \"required\": [\"tokenUrl\", \"scopes\"],\n      \"properties\": {\n        \"tokenUrl\": {\n          \"type\": \"string\",\n          \"format\": \"uri-reference\"\n        },\n        \"refreshUrl\": {\n          \"type\": \"string\",\n          \"format\": \"uri-reference\"\n        },\n        \"scopes\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"patternProperties\": {\n        \"^x-\": {}\n      },\n      \"additionalProperties\": false\n    },\n    \"ClientCredentialsFlow\": {\n      \"type\": \"object\",\n      \"required\": [\"tokenUrl\", \"scopes\"],\n      \"properties\": {\n        \"tokenUrl\": {\n          \"type\": \"string\",\n          \"format\": \"uri-reference\"\n        },\n        \"refreshUrl\": {\n          \"type\": \"string\",\n          \"format\": \"uri-reference\"\n        },\n        \"scopes\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"patternProperties\": {\n        \"^x-\": {}\n      },\n      \"additionalProperties\": false\n    },\n    \"AuthorizationCodeOAuthFlow\": {\n      \"type\": \"object\",\n      \"required\": [\"authorizationUrl\", \"tokenUrl\", \"scopes\"],\n      \"properties\": {\n        \"authorizationUrl\": {\n          \"type\": \"string\",\n          \"format\": \"uri-reference\"\n        },\n        \"tokenUrl\": {\n          \"type\": \"string\",\n          \"format\": \"uri-reference\"\n        },\n        \"refreshUrl\": {\n          \"type\": \"string\",\n          \"format\": \"uri-reference\"\n        },\n        \"scopes\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"patternProperties\": {\n        \"^x-\": {}\n      },\n      \"additionalProperties\": false\n    },\n    \"Link\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"operationId\": {\n          \"type\": \"string\"\n        },\n        \"operationRef\": {\n          \"type\": \"string\",\n          \"format\": \"uri-reference\"\n        },\n        \"parameters\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {}\n        },\n        \"requestBody\": {},\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"server\": {\n          \"$ref\": \"#/definitions/Server\"\n        }\n      },\n      \"patternProperties\": {\n        \"^x-\": {}\n      },\n      \"additionalProperties\": false,\n      \"not\": {\n        \"description\": \"Operation Id and Operation Ref are mutually exclusive\",\n        \"required\": [\"operationId\", \"operationRef\"]\n      }\n    },\n    \"Callback\": {\n      \"type\": \"object\",\n      \"additionalProperties\": {\n        \"$ref\": \"#/definitions/PathItem\"\n      },\n      \"patternProperties\": {\n        \"^x-\": {}\n      }\n    },\n    \"Encoding\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"contentType\": {\n          \"type\": \"string\"\n        },\n        \"headers\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"oneOf\": [\n              {\n                \"$ref\": \"#/definitions/Header\"\n              },\n              {\n                \"$ref\": \"#/definitions/Reference\"\n              }\n            ]\n          }\n        },\n        \"style\": {\n          \"type\": \"string\",\n          \"enum\": [\"form\", \"spaceDelimited\", \"pipeDelimited\", \"deepObject\"]\n        },\n        \"explode\": {\n          \"type\": \"boolean\"\n        },\n        \"allowReserved\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        }\n      },\n      \"additionalProperties\": false\n    }\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3851, "column": 0}, "map": {"version":3,"sources":["file:///home/tom/www2026/8_server/vercel/mydoc.site/node_modules/.pnpm/%40scalar%2Bopenapi-parser%400.18.3/node_modules/%40scalar/openapi-parser/src/schemas/v3.1/schema.ts"],"sourcesContent":["export default {\n  \"$id\": \"https://spec.openapis.org/oas/3.1/schema/2022-10-07\",\n  \"$schema\": \"https://json-schema.org/draft/2020-12/schema\",\n  \"description\": \"The description of OpenAPI v3.1.x documents without schema validation, as defined by https://spec.openapis.org/oas/v3.1.0\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"openapi\": {\n      \"type\": \"string\",\n      \"pattern\": \"^3\\\\.1\\\\.\\\\d+(-.+)?$\"\n    },\n    \"info\": {\n      \"$ref\": \"#/$defs/info\"\n    },\n    \"jsonSchemaDialect\": {\n      \"type\": \"string\",\n      \"format\": \"uri-reference\",\n      \"default\": \"https://spec.openapis.org/oas/3.1/dialect/base\"\n    },\n    \"servers\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"$ref\": \"#/$defs/server\"\n      },\n      \"default\": [\n        {\n          \"url\": \"/\"\n        }\n      ]\n    },\n    \"paths\": {\n      \"$ref\": \"#/$defs/paths\"\n    },\n    \"webhooks\": {\n      \"type\": \"object\",\n      \"additionalProperties\": {\n        \"$ref\": \"#/$defs/path-item-or-reference\"\n      }\n    },\n    \"components\": {\n      \"$ref\": \"#/$defs/components\"\n    },\n    \"security\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"$ref\": \"#/$defs/security-requirement\"\n      }\n    },\n    \"tags\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"$ref\": \"#/$defs/tag\"\n      }\n    },\n    \"externalDocs\": {\n      \"$ref\": \"#/$defs/external-documentation\"\n    }\n  },\n  \"required\": [\"openapi\", \"info\"],\n  \"anyOf\": [\n    {\n      \"required\": [\"paths\"]\n    },\n    {\n      \"required\": [\"components\"]\n    },\n    {\n      \"required\": [\"webhooks\"]\n    }\n  ],\n  \"$ref\": \"#/$defs/specification-extensions\",\n  \"unevaluatedProperties\": false,\n  \"$defs\": {\n    \"info\": {\n      \"$comment\": \"https://spec.openapis.org/oas/v3.1.0#info-object\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"title\": {\n          \"type\": \"string\"\n        },\n        \"summary\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"termsOfService\": {\n          \"type\": \"string\",\n          \"format\": \"uri-reference\"\n        },\n        \"contact\": {\n          \"$ref\": \"#/$defs/contact\"\n        },\n        \"license\": {\n          \"$ref\": \"#/$defs/license\"\n        },\n        \"version\": {\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\"title\", \"version\"],\n      \"$ref\": \"#/$defs/specification-extensions\",\n      \"unevaluatedProperties\": false\n    },\n    \"contact\": {\n      \"$comment\": \"https://spec.openapis.org/oas/v3.1.0#contact-object\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"url\": {\n          \"type\": \"string\",\n          \"format\": \"uri-reference\"\n        },\n        \"email\": {\n          \"type\": \"string\",\n          \"format\": \"email\"\n        }\n      },\n      \"$ref\": \"#/$defs/specification-extensions\",\n      \"unevaluatedProperties\": false\n    },\n    \"license\": {\n      \"$comment\": \"https://spec.openapis.org/oas/v3.1.0#license-object\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"identifier\": {\n          \"type\": \"string\"\n        },\n        \"url\": {\n          \"type\": \"string\",\n          \"format\": \"uri-reference\"\n        }\n      },\n      \"required\": [\"name\"],\n      \"dependentSchemas\": {\n        \"identifier\": {\n          \"not\": {\n            \"required\": [\"url\"]\n          }\n        }\n      },\n      \"$ref\": \"#/$defs/specification-extensions\",\n      \"unevaluatedProperties\": false\n    },\n    \"server\": {\n      \"$comment\": \"https://spec.openapis.org/oas/v3.1.0#server-object\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"url\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"variables\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"$ref\": \"#/$defs/server-variable\"\n          }\n        }\n      },\n      \"required\": [\"url\"],\n      \"$ref\": \"#/$defs/specification-extensions\",\n      \"unevaluatedProperties\": false\n    },\n    \"server-variable\": {\n      \"$comment\": \"https://spec.openapis.org/oas/v3.1.0#server-variable-object\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"enum\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          },\n          \"minItems\": 1\n        },\n        \"default\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\"default\"],\n      \"$ref\": \"#/$defs/specification-extensions\",\n      \"unevaluatedProperties\": false\n    },\n    \"components\": {\n      \"$comment\": \"https://spec.openapis.org/oas/v3.1.0#components-object\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"schemas\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"$ref\": \"#/$defs/schema\"\n          }\n        },\n        \"responses\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"$ref\": \"#/$defs/response-or-reference\"\n          }\n        },\n        \"parameters\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"$ref\": \"#/$defs/parameter-or-reference\"\n          }\n        },\n        \"examples\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"$ref\": \"#/$defs/example-or-reference\"\n          }\n        },\n        \"requestBodies\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"$ref\": \"#/$defs/request-body-or-reference\"\n          }\n        },\n        \"headers\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"$ref\": \"#/$defs/header-or-reference\"\n          }\n        },\n        \"securitySchemes\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"$ref\": \"#/$defs/security-scheme-or-reference\"\n          }\n        },\n        \"links\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"$ref\": \"#/$defs/link-or-reference\"\n          }\n        },\n        \"callbacks\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"$ref\": \"#/$defs/callbacks-or-reference\"\n          }\n        },\n        \"pathItems\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"$ref\": \"#/$defs/path-item-or-reference\"\n          }\n        }\n      },\n      \"patternProperties\": {\n        \"^(schemas|responses|parameters|examples|requestBodies|headers|securitySchemes|links|callbacks|pathItems)$\": {\n          \"$comment\": \"Enumerating all of the property names in the regex above is necessary for unevaluatedProperties to work as expected\",\n          \"propertyNames\": {\n            \"pattern\": \"^[a-zA-Z0-9._-]+$\"\n          }\n        }\n      },\n      \"$ref\": \"#/$defs/specification-extensions\",\n      \"unevaluatedProperties\": false\n    },\n    \"paths\": {\n      \"$comment\": \"https://spec.openapis.org/oas/v3.1.0#paths-object\",\n      \"type\": \"object\",\n      \"patternProperties\": {\n        \"^/\": {\n          \"$ref\": \"#/$defs/path-item\"\n        }\n      },\n      \"$ref\": \"#/$defs/specification-extensions\",\n      \"unevaluatedProperties\": false\n    },\n    \"path-item\": {\n      \"$comment\": \"https://spec.openapis.org/oas/v3.1.0#path-item-object\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"summary\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"servers\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"$ref\": \"#/$defs/server\"\n          }\n        },\n        \"parameters\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"$ref\": \"#/$defs/parameter-or-reference\"\n          }\n        },\n        \"get\": {\n          \"$ref\": \"#/$defs/operation\"\n        },\n        \"put\": {\n          \"$ref\": \"#/$defs/operation\"\n        },\n        \"post\": {\n          \"$ref\": \"#/$defs/operation\"\n        },\n        \"delete\": {\n          \"$ref\": \"#/$defs/operation\"\n        },\n        \"options\": {\n          \"$ref\": \"#/$defs/operation\"\n        },\n        \"head\": {\n          \"$ref\": \"#/$defs/operation\"\n        },\n        \"patch\": {\n          \"$ref\": \"#/$defs/operation\"\n        },\n        \"trace\": {\n          \"$ref\": \"#/$defs/operation\"\n        }\n      },\n      \"$ref\": \"#/$defs/specification-extensions\",\n      \"unevaluatedProperties\": false\n    },\n    \"path-item-or-reference\": {\n      \"if\": {\n        \"type\": \"object\",\n        \"required\": [\"$ref\"]\n      },\n      \"then\": {\n        \"$ref\": \"#/$defs/reference\"\n      },\n      \"else\": {\n        \"$ref\": \"#/$defs/path-item\"\n      }\n    },\n    \"operation\": {\n      \"$comment\": \"https://spec.openapis.org/oas/v3.1.0#operation-object\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"tags\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          }\n        },\n        \"summary\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"externalDocs\": {\n          \"$ref\": \"#/$defs/external-documentation\"\n        },\n        \"operationId\": {\n          \"type\": \"string\"\n        },\n        \"parameters\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"$ref\": \"#/$defs/parameter-or-reference\"\n          }\n        },\n        \"requestBody\": {\n          \"$ref\": \"#/$defs/request-body-or-reference\"\n        },\n        \"responses\": {\n          \"$ref\": \"#/$defs/responses\"\n        },\n        \"callbacks\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"$ref\": \"#/$defs/callbacks-or-reference\"\n          }\n        },\n        \"deprecated\": {\n          \"default\": false,\n          \"type\": \"boolean\"\n        },\n        \"security\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"$ref\": \"#/$defs/security-requirement\"\n          }\n        },\n        \"servers\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"$ref\": \"#/$defs/server\"\n          }\n        }\n      },\n      \"$ref\": \"#/$defs/specification-extensions\",\n      \"unevaluatedProperties\": false\n    },\n    \"external-documentation\": {\n      \"$comment\": \"https://spec.openapis.org/oas/v3.1.0#external-documentation-object\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"url\": {\n          \"type\": \"string\",\n          \"format\": \"uri-reference\"\n        }\n      },\n      \"required\": [\"url\"],\n      \"$ref\": \"#/$defs/specification-extensions\",\n      \"unevaluatedProperties\": false\n    },\n    \"parameter\": {\n      \"$comment\": \"https://spec.openapis.org/oas/v3.1.0#parameter-object\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"in\": {\n          \"enum\": [\"query\", \"header\", \"path\", \"cookie\"]\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"required\": {\n          \"default\": false,\n          \"type\": \"boolean\"\n        },\n        \"deprecated\": {\n          \"default\": false,\n          \"type\": \"boolean\"\n        },\n        \"schema\": {\n          \"$ref\": \"#/$defs/schema\"\n        },\n        \"content\": {\n          \"$ref\": \"#/$defs/content\",\n          \"minProperties\": 1,\n          \"maxProperties\": 1\n        }\n      },\n      \"required\": [\"name\", \"in\"],\n      \"oneOf\": [\n        {\n          \"required\": [\"schema\"]\n        },\n        {\n          \"required\": [\"content\"]\n        }\n      ],\n      \"if\": {\n        \"properties\": {\n          \"in\": {\n            \"const\": \"query\"\n          }\n        },\n        \"required\": [\"in\"]\n      },\n      \"then\": {\n        \"properties\": {\n          \"allowEmptyValue\": {\n            \"default\": false,\n            \"type\": \"boolean\"\n          }\n        }\n      },\n      \"dependentSchemas\": {\n        \"schema\": {\n          \"properties\": {\n            \"style\": {\n              \"type\": \"string\"\n            },\n            \"explode\": {\n              \"type\": \"boolean\"\n            }\n          },\n          \"allOf\": [\n            {\n              \"$ref\": \"#/$defs/examples\"\n            },\n            {\n              \"$ref\": \"#/$defs/parameter/dependentSchemas/schema/$defs/styles-for-path\"\n            },\n            {\n              \"$ref\": \"#/$defs/parameter/dependentSchemas/schema/$defs/styles-for-header\"\n            },\n            {\n              \"$ref\": \"#/$defs/parameter/dependentSchemas/schema/$defs/styles-for-query\"\n            },\n            {\n              \"$ref\": \"#/$defs/parameter/dependentSchemas/schema/$defs/styles-for-cookie\"\n            },\n            {\n              \"$ref\": \"#/$defs/parameter/dependentSchemas/schema/$defs/styles-for-form\"\n            }\n          ],\n          \"$defs\": {\n            \"styles-for-path\": {\n              \"if\": {\n                \"properties\": {\n                  \"in\": {\n                    \"const\": \"path\"\n                  }\n                },\n                \"required\": [\"in\"]\n              },\n              \"then\": {\n                \"properties\": {\n                  \"name\": {\n                    \"pattern\": \"[^/#?]+$\"\n                  },\n                  \"style\": {\n                    \"default\": \"simple\",\n                    \"enum\": [\"matrix\", \"label\", \"simple\"]\n                  },\n                  \"required\": {\n                    \"const\": true\n                  }\n                },\n                \"required\": [\"required\"]\n              }\n            },\n            \"styles-for-header\": {\n              \"if\": {\n                \"properties\": {\n                  \"in\": {\n                    \"const\": \"header\"\n                  }\n                },\n                \"required\": [\"in\"]\n              },\n              \"then\": {\n                \"properties\": {\n                  \"style\": {\n                    \"default\": \"simple\",\n                    \"const\": \"simple\"\n                  }\n                }\n              }\n            },\n            \"styles-for-query\": {\n              \"if\": {\n                \"properties\": {\n                  \"in\": {\n                    \"const\": \"query\"\n                  }\n                },\n                \"required\": [\"in\"]\n              },\n              \"then\": {\n                \"properties\": {\n                  \"style\": {\n                    \"default\": \"form\",\n                    \"enum\": [\"form\", \"spaceDelimited\", \"pipeDelimited\", \"deepObject\"]\n                  },\n                  \"allowReserved\": {\n                    \"default\": false,\n                    \"type\": \"boolean\"\n                  }\n                }\n              }\n            },\n            \"styles-for-cookie\": {\n              \"if\": {\n                \"properties\": {\n                  \"in\": {\n                    \"const\": \"cookie\"\n                  }\n                },\n                \"required\": [\"in\"]\n              },\n              \"then\": {\n                \"properties\": {\n                  \"style\": {\n                    \"default\": \"form\",\n                    \"const\": \"form\"\n                  }\n                }\n              }\n            },\n            \"styles-for-form\": {\n              \"if\": {\n                \"properties\": {\n                  \"style\": {\n                    \"const\": \"form\"\n                  }\n                },\n                \"required\": [\"style\"]\n              },\n              \"then\": {\n                \"properties\": {\n                  \"explode\": {\n                    \"default\": true\n                  }\n                }\n              },\n              \"else\": {\n                \"properties\": {\n                  \"explode\": {\n                    \"default\": false\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"$ref\": \"#/$defs/specification-extensions\",\n      \"unevaluatedProperties\": false\n    },\n    \"parameter-or-reference\": {\n      \"if\": {\n        \"type\": \"object\",\n        \"required\": [\"$ref\"]\n      },\n      \"then\": {\n        \"$ref\": \"#/$defs/reference\"\n      },\n      \"else\": {\n        \"$ref\": \"#/$defs/parameter\"\n      }\n    },\n    \"request-body\": {\n      \"$comment\": \"https://spec.openapis.org/oas/v3.1.0#request-body-object\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"content\": {\n          \"$ref\": \"#/$defs/content\"\n        },\n        \"required\": {\n          \"default\": false,\n          \"type\": \"boolean\"\n        }\n      },\n      \"required\": [\"content\"],\n      \"$ref\": \"#/$defs/specification-extensions\",\n      \"unevaluatedProperties\": false\n    },\n    \"request-body-or-reference\": {\n      \"if\": {\n        \"type\": \"object\",\n        \"required\": [\"$ref\"]\n      },\n      \"then\": {\n        \"$ref\": \"#/$defs/reference\"\n      },\n      \"else\": {\n        \"$ref\": \"#/$defs/request-body\"\n      }\n    },\n    \"content\": {\n      \"$comment\": \"https://spec.openapis.org/oas/v3.1.0#fixed-fields-10\",\n      \"type\": \"object\",\n      \"additionalProperties\": {\n        \"$ref\": \"#/$defs/media-type\"\n      },\n      \"propertyNames\": {\n        \"format\": \"media-range\"\n      }\n    },\n    \"media-type\": {\n      \"$comment\": \"https://spec.openapis.org/oas/v3.1.0#media-type-object\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"schema\": {\n          \"$ref\": \"#/$defs/schema\"\n        },\n        \"encoding\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"$ref\": \"#/$defs/encoding\"\n          }\n        }\n      },\n      \"allOf\": [\n        {\n          \"$ref\": \"#/$defs/specification-extensions\"\n        },\n        {\n          \"$ref\": \"#/$defs/examples\"\n        }\n      ],\n      \"unevaluatedProperties\": false\n    },\n    \"encoding\": {\n      \"$comment\": \"https://spec.openapis.org/oas/v3.1.0#encoding-object\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"contentType\": {\n          \"type\": \"string\",\n          \"format\": \"media-range\"\n        },\n        \"headers\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"$ref\": \"#/$defs/header-or-reference\"\n          }\n        },\n        \"style\": {\n          \"default\": \"form\",\n          \"enum\": [\"form\", \"spaceDelimited\", \"pipeDelimited\", \"deepObject\"]\n        },\n        \"explode\": {\n          \"type\": \"boolean\"\n        },\n        \"allowReserved\": {\n          \"default\": false,\n          \"type\": \"boolean\"\n        }\n      },\n      \"allOf\": [\n        {\n          \"$ref\": \"#/$defs/specification-extensions\"\n        },\n        {\n          \"$ref\": \"#/$defs/encoding/$defs/explode-default\"\n        }\n      ],\n      \"unevaluatedProperties\": false,\n      \"$defs\": {\n        \"explode-default\": {\n          \"if\": {\n            \"properties\": {\n              \"style\": {\n                \"const\": \"form\"\n              }\n            },\n            \"required\": [\"style\"]\n          },\n          \"then\": {\n            \"properties\": {\n              \"explode\": {\n                \"default\": true\n              }\n            }\n          },\n          \"else\": {\n            \"properties\": {\n              \"explode\": {\n                \"default\": false\n              }\n            }\n          }\n        }\n      }\n    },\n    \"responses\": {\n      \"$comment\": \"https://spec.openapis.org/oas/v3.1.0#responses-object\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"default\": {\n          \"$ref\": \"#/$defs/response-or-reference\"\n        }\n      },\n      \"patternProperties\": {\n        \"^[1-5](?:[0-9]{2}|XX)$\": {\n          \"$ref\": \"#/$defs/response-or-reference\"\n        }\n      },\n      \"minProperties\": 1,\n      \"$ref\": \"#/$defs/specification-extensions\",\n      \"unevaluatedProperties\": false\n    },\n    \"response\": {\n      \"$comment\": \"https://spec.openapis.org/oas/v3.1.0#response-object\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"headers\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"$ref\": \"#/$defs/header-or-reference\"\n          }\n        },\n        \"content\": {\n          \"$ref\": \"#/$defs/content\"\n        },\n        \"links\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"$ref\": \"#/$defs/link-or-reference\"\n          }\n        }\n      },\n      \"required\": [\"description\"],\n      \"$ref\": \"#/$defs/specification-extensions\",\n      \"unevaluatedProperties\": false\n    },\n    \"response-or-reference\": {\n      \"if\": {\n        \"type\": \"object\",\n        \"required\": [\"$ref\"]\n      },\n      \"then\": {\n        \"$ref\": \"#/$defs/reference\"\n      },\n      \"else\": {\n        \"$ref\": \"#/$defs/response\"\n      }\n    },\n    \"callbacks\": {\n      \"$comment\": \"https://spec.openapis.org/oas/v3.1.0#callback-object\",\n      \"type\": \"object\",\n      \"$ref\": \"#/$defs/specification-extensions\",\n      \"additionalProperties\": {\n        \"$ref\": \"#/$defs/path-item-or-reference\"\n      }\n    },\n    \"callbacks-or-reference\": {\n      \"if\": {\n        \"type\": \"object\",\n        \"required\": [\"$ref\"]\n      },\n      \"then\": {\n        \"$ref\": \"#/$defs/reference\"\n      },\n      \"else\": {\n        \"$ref\": \"#/$defs/callbacks\"\n      }\n    },\n    \"example\": {\n      \"$comment\": \"https://spec.openapis.org/oas/v3.1.0#example-object\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"summary\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"value\": true,\n        \"externalValue\": {\n          \"type\": \"string\",\n          \"format\": \"uri-reference\"\n        }\n      },\n      \"not\": {\n        \"required\": [\"value\", \"externalValue\"]\n      },\n      \"$ref\": \"#/$defs/specification-extensions\",\n      \"unevaluatedProperties\": false\n    },\n    \"example-or-reference\": {\n      \"if\": {\n        \"type\": \"object\",\n        \"required\": [\"$ref\"]\n      },\n      \"then\": {\n        \"$ref\": \"#/$defs/reference\"\n      },\n      \"else\": {\n        \"$ref\": \"#/$defs/example\"\n      }\n    },\n    \"link\": {\n      \"$comment\": \"https://spec.openapis.org/oas/v3.1.0#link-object\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"operationRef\": {\n          \"type\": \"string\",\n          \"format\": \"uri-reference\"\n        },\n        \"operationId\": {\n          \"type\": \"string\"\n        },\n        \"parameters\": {\n          \"$ref\": \"#/$defs/map-of-strings\"\n        },\n        \"requestBody\": true,\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"body\": {\n          \"$ref\": \"#/$defs/server\"\n        }\n      },\n      \"oneOf\": [\n        {\n          \"required\": [\"operationRef\"]\n        },\n        {\n          \"required\": [\"operationId\"]\n        }\n      ],\n      \"$ref\": \"#/$defs/specification-extensions\",\n      \"unevaluatedProperties\": false\n    },\n    \"link-or-reference\": {\n      \"if\": {\n        \"type\": \"object\",\n        \"required\": [\"$ref\"]\n      },\n      \"then\": {\n        \"$ref\": \"#/$defs/reference\"\n      },\n      \"else\": {\n        \"$ref\": \"#/$defs/link\"\n      }\n    },\n    \"header\": {\n      \"$comment\": \"https://spec.openapis.org/oas/v3.1.0#header-object\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"required\": {\n          \"default\": false,\n          \"type\": \"boolean\"\n        },\n        \"deprecated\": {\n          \"default\": false,\n          \"type\": \"boolean\"\n        },\n        \"schema\": {\n          \"$ref\": \"#/$defs/schema\"\n        },\n        \"content\": {\n          \"$ref\": \"#/$defs/content\",\n          \"minProperties\": 1,\n          \"maxProperties\": 1\n        }\n      },\n      \"oneOf\": [\n        {\n          \"required\": [\"schema\"]\n        },\n        {\n          \"required\": [\"content\"]\n        }\n      ],\n      \"dependentSchemas\": {\n        \"schema\": {\n          \"properties\": {\n            \"style\": {\n              \"default\": \"simple\",\n              \"const\": \"simple\"\n            },\n            \"explode\": {\n              \"default\": false,\n              \"type\": \"boolean\"\n            }\n          },\n          \"$ref\": \"#/$defs/examples\"\n        }\n      },\n      \"$ref\": \"#/$defs/specification-extensions\",\n      \"unevaluatedProperties\": false\n    },\n    \"header-or-reference\": {\n      \"if\": {\n        \"type\": \"object\",\n        \"required\": [\"$ref\"]\n      },\n      \"then\": {\n        \"$ref\": \"#/$defs/reference\"\n      },\n      \"else\": {\n        \"$ref\": \"#/$defs/header\"\n      }\n    },\n    \"tag\": {\n      \"$comment\": \"https://spec.openapis.org/oas/v3.1.0#tag-object\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"externalDocs\": {\n          \"$ref\": \"#/$defs/external-documentation\"\n        }\n      },\n      \"required\": [\"name\"],\n      \"$ref\": \"#/$defs/specification-extensions\",\n      \"unevaluatedProperties\": false\n    },\n    \"reference\": {\n      \"$comment\": \"https://spec.openapis.org/oas/v3.1.0#reference-object\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"$ref\": {\n          \"type\": \"string\",\n          \"format\": \"uri-reference\"\n        },\n        \"summary\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        }\n      },\n      \"unevaluatedProperties\": false\n    },\n    \"schema\": {\n      \"$comment\": \"https://spec.openapis.org/oas/v3.1.0#schema-object\",\n      \"$dynamicAnchor\": \"meta\",\n      \"type\": [\"object\", \"boolean\"]\n    },\n    \"security-scheme\": {\n      \"$comment\": \"https://spec.openapis.org/oas/v3.1.0#security-scheme-object\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"type\": {\n          \"enum\": [\"apiKey\", \"http\", \"mutualTLS\", \"oauth2\", \"openIdConnect\"]\n        },\n        \"description\": {\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\"type\"],\n      \"allOf\": [\n        {\n          \"$ref\": \"#/$defs/specification-extensions\"\n        },\n        {\n          \"$ref\": \"#/$defs/security-scheme/$defs/type-apikey\"\n        },\n        {\n          \"$ref\": \"#/$defs/security-scheme/$defs/type-http\"\n        },\n        {\n          \"$ref\": \"#/$defs/security-scheme/$defs/type-http-bearer\"\n        },\n        {\n          \"$ref\": \"#/$defs/security-scheme/$defs/type-oauth2\"\n        },\n        {\n          \"$ref\": \"#/$defs/security-scheme/$defs/type-oidc\"\n        }\n      ],\n      \"unevaluatedProperties\": false,\n      \"$defs\": {\n        \"type-apikey\": {\n          \"if\": {\n            \"properties\": {\n              \"type\": {\n                \"const\": \"apiKey\"\n              }\n            },\n            \"required\": [\"type\"]\n          },\n          \"then\": {\n            \"properties\": {\n              \"name\": {\n                \"type\": \"string\"\n              },\n              \"in\": {\n                \"enum\": [\"query\", \"header\", \"cookie\"]\n              }\n            },\n            \"required\": [\"name\", \"in\"]\n          }\n        },\n        \"type-http\": {\n          \"if\": {\n            \"properties\": {\n              \"type\": {\n                \"const\": \"http\"\n              }\n            },\n            \"required\": [\"type\"]\n          },\n          \"then\": {\n            \"properties\": {\n              \"scheme\": {\n                \"type\": \"string\"\n              }\n            },\n            \"required\": [\"scheme\"]\n          }\n        },\n        \"type-http-bearer\": {\n          \"if\": {\n            \"properties\": {\n              \"type\": {\n                \"const\": \"http\"\n              },\n              \"scheme\": {\n                \"type\": \"string\",\n                \"pattern\": \"^[Bb][Ee][Aa][Rr][Ee][Rr]$\"\n              }\n            },\n            \"required\": [\"type\", \"scheme\"]\n          },\n          \"then\": {\n            \"properties\": {\n              \"bearerFormat\": {\n                \"type\": \"string\"\n              }\n            }\n          }\n        },\n        \"type-oauth2\": {\n          \"if\": {\n            \"properties\": {\n              \"type\": {\n                \"const\": \"oauth2\"\n              }\n            },\n            \"required\": [\"type\"]\n          },\n          \"then\": {\n            \"properties\": {\n              \"flows\": {\n                \"$ref\": \"#/$defs/oauth-flows\"\n              }\n            },\n            \"required\": [\"flows\"]\n          }\n        },\n        \"type-oidc\": {\n          \"if\": {\n            \"properties\": {\n              \"type\": {\n                \"const\": \"openIdConnect\"\n              }\n            },\n            \"required\": [\"type\"]\n          },\n          \"then\": {\n            \"properties\": {\n              \"openIdConnectUrl\": {\n                \"type\": \"string\",\n                \"format\": \"uri-reference\"\n              }\n            },\n            \"required\": [\"openIdConnectUrl\"]\n          }\n        }\n      }\n    },\n    \"security-scheme-or-reference\": {\n      \"if\": {\n        \"type\": \"object\",\n        \"required\": [\"$ref\"]\n      },\n      \"then\": {\n        \"$ref\": \"#/$defs/reference\"\n      },\n      \"else\": {\n        \"$ref\": \"#/$defs/security-scheme\"\n      }\n    },\n    \"oauth-flows\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"implicit\": {\n          \"$ref\": \"#/$defs/oauth-flows/$defs/implicit\"\n        },\n        \"password\": {\n          \"$ref\": \"#/$defs/oauth-flows/$defs/password\"\n        },\n        \"clientCredentials\": {\n          \"$ref\": \"#/$defs/oauth-flows/$defs/client-credentials\"\n        },\n        \"authorizationCode\": {\n          \"$ref\": \"#/$defs/oauth-flows/$defs/authorization-code\"\n        }\n      },\n      \"$ref\": \"#/$defs/specification-extensions\",\n      \"unevaluatedProperties\": false,\n      \"$defs\": {\n        \"implicit\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"authorizationUrl\": {\n              \"type\": \"string\",\n              \"format\": \"uri-reference\"\n            },\n            \"refreshUrl\": {\n              \"type\": \"string\",\n              \"format\": \"uri-reference\"\n            },\n            \"scopes\": {\n              \"$ref\": \"#/$defs/map-of-strings\"\n            }\n          },\n          \"required\": [\"authorizationUrl\", \"scopes\"],\n          \"$ref\": \"#/$defs/specification-extensions\",\n          \"unevaluatedProperties\": false\n        },\n        \"password\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"tokenUrl\": {\n              \"type\": \"string\",\n              \"format\": \"uri-reference\"\n            },\n            \"refreshUrl\": {\n              \"type\": \"string\",\n              \"format\": \"uri-reference\"\n            },\n            \"scopes\": {\n              \"$ref\": \"#/$defs/map-of-strings\"\n            }\n          },\n          \"required\": [\"tokenUrl\", \"scopes\"],\n          \"$ref\": \"#/$defs/specification-extensions\",\n          \"unevaluatedProperties\": false\n        },\n        \"client-credentials\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"tokenUrl\": {\n              \"type\": \"string\",\n              \"format\": \"uri-reference\"\n            },\n            \"refreshUrl\": {\n              \"type\": \"string\",\n              \"format\": \"uri-reference\"\n            },\n            \"scopes\": {\n              \"$ref\": \"#/$defs/map-of-strings\"\n            }\n          },\n          \"required\": [\"tokenUrl\", \"scopes\"],\n          \"$ref\": \"#/$defs/specification-extensions\",\n          \"unevaluatedProperties\": false\n        },\n        \"authorization-code\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"authorizationUrl\": {\n              \"type\": \"string\",\n              \"format\": \"uri-reference\"\n            },\n            \"tokenUrl\": {\n              \"type\": \"string\",\n              \"format\": \"uri-reference\"\n            },\n            \"refreshUrl\": {\n              \"type\": \"string\",\n              \"format\": \"uri-reference\"\n            },\n            \"scopes\": {\n              \"$ref\": \"#/$defs/map-of-strings\"\n            }\n          },\n          \"required\": [\"authorizationUrl\", \"tokenUrl\", \"scopes\"],\n          \"$ref\": \"#/$defs/specification-extensions\",\n          \"unevaluatedProperties\": false\n        }\n      }\n    },\n    \"security-requirement\": {\n      \"$comment\": \"https://spec.openapis.org/oas/v3.1.0#security-requirement-object\",\n      \"type\": \"object\",\n      \"additionalProperties\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"type\": \"string\"\n        }\n      }\n    },\n    \"specification-extensions\": {\n      \"$comment\": \"https://spec.openapis.org/oas/v3.1.0#specification-extensions\",\n      \"patternProperties\": {\n        \"^x-\": true\n      }\n    },\n    \"examples\": {\n      \"properties\": {\n        \"example\": true,\n        \"examples\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"$ref\": \"#/$defs/example-or-reference\"\n          }\n        }\n      }\n    },\n    \"map-of-strings\": {\n      \"type\": \"object\",\n      \"additionalProperties\": {\n        \"type\": \"string\"\n      }\n    }\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5300, "column": 0}, "map": {"version":3,"sources":["file:///home/tom/www2026/8_server/vercel/mydoc.site/node_modules/.pnpm/%40scalar%2Bopenapi-parser%400.18.3/node_modules/%40scalar/openapi-parser/src/configuration/index.ts"],"sourcesContent":["import Swagger20 from '@/schemas/v2.0/schema'\nimport OpenApi30 from '@/schemas/v3.0/schema'\nimport OpenApi31 from '@/schemas/v3.1/schema'\n\n/**\n * A list of the supported OpenAPI specifications\n */\nexport const OpenApiSpecifications = {\n  '2.0': Swagger20,\n  '3.0': OpenApi30,\n  '3.1': OpenApi31,\n}\n\nexport type OpenApiVersion = keyof typeof OpenApiSpecifications\n\nexport const OpenApiVersions = Object.keys(OpenApiSpecifications) as OpenApiVersion[]\n\n/**\n * List of error messages used in the Validator\n */\nexport const ERRORS = {\n  EMPTY_OR_INVALID: \"Can't find JSON, YAML or filename in data.\",\n  // URI_MUST_BE_STRING: 'uri parameter or $id attribute must be a string',\n  OPENAPI_VERSION_NOT_SUPPORTED:\n    \"Can't find supported Swagger/OpenAPI version in the provided document, version must be a string.\",\n  INVALID_REFERENCE: \"Can't resolve reference: %s\",\n  EXTERNAL_REFERENCE_NOT_FOUND: \"Can't resolve external reference: %s\",\n  FILE_DOES_NOT_EXIST: 'File does not exist: %s',\n  NO_CONTENT: 'No content found',\n} as const\n\nexport type ValidationError = keyof typeof ERRORS\n"],"names":[],"mappings":";;;;;;;;AAAA,OAAO,eAAe;AACtB,OAAO,eAAe;AACtB,OAAO,eAAe;;;;AAKf,MAAM,wBAAwB;IACnC,OAAO,2QAAA;IACP,OAAO,2QAAA;IACP,OAAO,2QAAA;AACT;AAIO,MAAM,kBAAkB,OAAO,IAAA,CAAK,qBAAqB;AAKzD,MAAM,SAAS;IACpB,kBAAkB;IAAA,yEAAA;IAElB,+BACE;IACF,mBAAmB;IACnB,8BAA8B;IAC9B,qBAAqB;IACrB,YAAY;AACd","debugId":null}},
    {"offset": {"line": 5335, "column": 0}, "map": {"version":3,"sources":["file:///home/tom/www2026/8_server/vercel/mydoc.site/node_modules/.pnpm/%40scalar%2Bopenapi-parser%400.18.3/node_modules/%40scalar/openapi-parser/src/utils/details.ts"],"sourcesContent":["import { OpenApiVersions } from '@/configuration'\nimport type { DetailsResult } from '@/types/index'\nimport { isObject } from './is-object'\n\n/**\n * Get versions of the OpenAPI document.\n */\nexport function details(specification: unknown): DetailsResult {\n  if (specification === null) {\n    return {\n      version: undefined,\n      specificationType: undefined,\n      specificationVersion: undefined,\n    }\n  }\n\n  if (isObject(specification)) {\n    for (const version of new Set(OpenApiVersions)) {\n      const specificationType = version === '2.0' ? 'swagger' : 'openapi'\n      const value = specification[specificationType]\n\n      if (typeof value === 'string' && value.startsWith(version)) {\n        return {\n          version: version,\n          specificationType,\n          specificationVersion: value,\n        }\n      }\n    }\n  }\n\n  return {\n    version: undefined,\n    specificationType: undefined,\n    specificationVersion: undefined,\n  }\n}\n"],"names":[],"mappings":";;;;AAAA,SAAS,uBAAuB;AAEhC,SAAS,gBAAgB;;;AAKlB,SAAS,QAAQ,aAAA,EAAuC;IAC7D,IAAI,kBAAkB,MAAM;QAC1B,OAAO;YACL,SAAS,KAAA;YACT,mBAAmB,KAAA;YACnB,sBAAsB,KAAA;QACxB;IACF;IAEA,QAAI,qQAAA,EAAS,aAAa,GAAG;QAC3B,KAAA,MAAW,WAAW,IAAI,IAAI,6QAAe,EAAG;YAC9C,MAAM,oBAAoB,YAAY,QAAQ,YAAY;YAC1D,MAAM,QAAQ,aAAA,CAAc,iBAAiB,CAAA;YAE7C,IAAI,OAAO,UAAU,YAAY,MAAM,UAAA,CAAW,OAAO,GAAG;gBAC1D,OAAO;oBACL;oBACA;oBACA,sBAAsB;gBACxB;YACF;QACF;IACF;IAEA,OAAO;QACL,SAAS,KAAA;QACT,mBAAmB,KAAA;QACnB,sBAAsB,KAAA;IACxB;AACF","debugId":null}},
    {"offset": {"line": 5376, "column": 0}, "map": {"version":3,"sources":["file:///home/tom/www2026/8_server/vercel/mydoc.site/node_modules/.pnpm/%40scalar%2Bopenapi-parser%400.18.3/node_modules/%40scalar/openapi-parser/src/utils/get-entrypoint.ts"],"sourcesContent":["import type { Filesystem, FilesystemEntry } from '@/types/index'\n\n/**\n * Return just the entrypoint of the filesystem.\n */\nexport function getEntrypoint(filesystem?: Filesystem): FilesystemEntry | undefined {\n  return filesystem?.find((file) => file.isEntrypoint)\n}\n"],"names":[],"mappings":";;;;AAKO,SAAS,cAAc,UAAA,EAAsD;IAClF,OAAO,YAAY,KAAK,CAAC,OAAS,KAAK,YAAY;AACrD","debugId":null}},
    {"offset": {"line": 5389, "column": 0}, "map": {"version":3,"sources":["file:///home/tom/www2026/8_server/vercel/mydoc.site/node_modules/.pnpm/%40scalar%2Bopenapi-parser%400.18.3/node_modules/%40scalar/openapi-parser/src/utils/traverse.ts"],"sourcesContent":["import type { AnyObject } from '@/types/index'\nimport type { UnknownObject } from '@scalar/types/utils'\n\n/**\n * Recursively traverses the content and applies the transform function to each node.\n */\nexport function traverse(\n  content: UnknownObject,\n  transform: (content: UnknownObject, path?: string[]) => UnknownObject,\n  path: string[] = [],\n) {\n  const result: AnyObject = {}\n\n  for (const [key, value] of Object.entries(content)) {\n    const currentPath = [...path, key]\n\n    if (Array.isArray(value)) {\n      result[key] = value.map((item, index) => {\n        if (typeof item === 'object' && !Array.isArray(item) && item !== null) {\n          return traverse(item, transform, [...currentPath, index.toString()])\n        }\n\n        return item\n      })\n\n      continue\n    }\n\n    if (typeof value === 'object' && value !== null) {\n      result[key] = traverse(value as UnknownObject, transform, currentPath)\n\n      continue\n    }\n\n    result[key] = value\n  }\n\n  return transform(result, path)\n}\n"],"names":[],"mappings":";;;;AAMO,SAAS,SACd,OAAA,EACA,SAAA,EACA,OAAiB,CAAC,CAAA,EAClB;IACA,MAAM,SAAoB,CAAC;IAE3B,KAAA,MAAW,CAAC,KAAK,KAAK,CAAA,IAAK,OAAO,OAAA,CAAQ,OAAO,EAAG;QAClD,MAAM,cAAc,CAAC;eAAG;YAAM,GAAG;SAAA;QAEjC,IAAI,MAAM,OAAA,CAAQ,KAAK,GAAG;YACxB,MAAA,CAAO,GAAG,CAAA,GAAI,MAAM,GAAA,CAAI,CAAC,MAAM,UAAU;gBACvC,IAAI,OAAO,SAAS,YAAY,CAAC,MAAM,OAAA,CAAQ,IAAI,KAAK,SAAS,MAAM;oBACrE,OAAO,SAAS,MAAM,WAAW,CAAC;2BAAG;wBAAa,MAAM,QAAA,CAAS,CAAC;qBAAC;gBACrE;gBAEA,OAAO;YACT,CAAC;YAED;QACF;QAEA,IAAI,OAAO,UAAU,YAAY,UAAU,MAAM;YAC/C,MAAA,CAAO,GAAG,CAAA,GAAI,SAAS,OAAwB,WAAW,WAAW;YAErE;QACF;QAEA,MAAA,CAAO,GAAG,CAAA,GAAI;IAChB;IAEA,OAAO,UAAU,QAAQ,IAAI;AAC/B","debugId":null}},
    {"offset": {"line": 5426, "column": 0}, "map": {"version":3,"sources":["file:///home/tom/www2026/8_server/vercel/mydoc.site/node_modules/.pnpm/%40scalar%2Bopenapi-parser%400.18.3/node_modules/%40scalar/openapi-parser/src/utils/get-list-of-references.ts"],"sourcesContent":["import type { AnyObject } from '@/types/index'\nimport { traverse } from './traverse'\n\n/**\n * Walks through the specification and returns all references as an array.\n *\n * Warning: Doesn't return internal references.\n */\nexport function getListOfReferences(specification: AnyObject) {\n  const references: string[] = []\n\n  // Make sure we're dealing with an object\n  if (!specification || typeof specification !== 'object') {\n    return references\n  }\n\n  // Traverse the specification and collect all references\n  traverse(specification, (value: any) => {\n    if (value.$ref && typeof value.$ref === 'string' && !value.$ref.startsWith('#')) {\n      references.push(value.$ref.split('#')[0])\n    }\n\n    return value\n  })\n\n  // Remove duplicates\n  return [...new Set(references)]\n}\n"],"names":[],"mappings":";;;;AACA,SAAS,gBAAgB;;AAOlB,SAAS,oBAAoB,aAAA,EAA0B;IAC5D,MAAM,aAAuB,CAAC,CAAA;IAG9B,IAAI,CAAC,iBAAiB,OAAO,kBAAkB,UAAU;QACvD,OAAO;IACT;IAGA,IAAA,iQAAA,EAAS,eAAe,CAAC,UAAe;QACtC,IAAI,MAAM,IAAA,IAAQ,OAAO,MAAM,IAAA,KAAS,YAAY,CAAC,MAAM,IAAA,CAAK,UAAA,CAAW,GAAG,GAAG;YAC/E,WAAW,IAAA,CAAK,MAAM,IAAA,CAAK,KAAA,CAAM,GAAG,CAAA,CAAE,CAAC,CAAC;QAC1C;QAEA,OAAO;IACT,CAAC;IAGD,OAAO,CAAC;WAAG,IAAI,IAAI,UAAU,CAAC;KAAA;AAChC","debugId":null}},
    {"offset": {"line": 5453, "column": 0}, "map": {"version":3,"sources":["file:///home/tom/www2026/8_server/vercel/mydoc.site/node_modules/.pnpm/%40scalar%2Bopenapi-parser%400.18.3/node_modules/%40scalar/openapi-parser/src/utils/is-filesystem.ts"],"sourcesContent":["import type { Filesystem } from '@/types'\n\n/**\n * Check if the value is a filesystem\n */\nexport function isFilesystem(value: any): value is Filesystem {\n  return (\n    typeof value !== 'undefined' &&\n    Array.isArray(value) &&\n    value.length > 0 &&\n    value.some((file) => file.isEntrypoint === true)\n  )\n}\n"],"names":[],"mappings":";;;;AAKO,SAAS,aAAa,KAAA,EAAiC;IAC5D,OACE,OAAO,UAAU,eACjB,MAAM,OAAA,CAAQ,KAAK,KACnB,MAAM,MAAA,GAAS,KACf,MAAM,IAAA,CAAK,CAAC,OAAS,KAAK,YAAA,KAAiB,IAAI;AAEnD","debugId":null}},
    {"offset": {"line": 5466, "column": 0}, "map": {"version":3,"sources":["file:///home/tom/www2026/8_server/vercel/mydoc.site/node_modules/.pnpm/%40scalar%2Bopenapi-parser%400.18.3/node_modules/%40scalar/openapi-parser/src/utils/normalize.ts"],"sourcesContent":["import type { UnknownObject } from '@scalar/types/utils'\nimport { parse } from 'yaml'\n\nimport type { Filesystem } from '@/types/index'\nimport { isFilesystem } from './is-filesystem'\n\n/**\n * Normalize the OpenAPI document (YAML, JSON, object) to a JavaScript object.\n *\n * Doesn't modify the object if it's a `Filesystem` (multiple files) already.\n */\nexport function normalize(content: string | UnknownObject | Filesystem): UnknownObject | Filesystem {\n  if (content === null) {\n    return undefined\n  }\n\n  if (typeof content === 'string') {\n    if (content.trim() === '') {\n      return undefined\n    }\n\n    try {\n      return JSON.parse(content)\n    } catch (_error) {\n      // Does it look like YAML?\n      const hasColon = /^[^:]+:/.test(content)\n      const isJson = content.slice(0, 50).trimStart().startsWith('{')\n\n      if (!hasColon || isJson) {\n        return undefined\n      }\n\n      return parse(content, {\n        maxAliasCount: 10000,\n      })\n    }\n  }\n\n  if (isFilesystem(content)) {\n    return content\n  }\n\n  return content\n}\n"],"names":[],"mappings":";;;;AACA,SAAS,aAAa;AAGtB,SAAS,oBAAoB;;;AAOtB,SAAS,UAAU,OAAA,EAA0E;IAClG,IAAI,YAAY,MAAM;QACpB,OAAO,KAAA;IACT;IAEA,IAAI,OAAO,YAAY,UAAU;QAC/B,IAAI,QAAQ,IAAA,CAAK,MAAM,IAAI;YACzB,OAAO,KAAA;QACT;QAEA,IAAI;YACF,OAAO,KAAK,KAAA,CAAM,OAAO;QAC3B,EAAA,OAAS,QAAQ;YAEf,MAAM,WAAW,UAAU,IAAA,CAAK,OAAO;YACvC,MAAM,SAAS,QAAQ,KAAA,CAAM,GAAG,EAAE,EAAE,SAAA,CAAU,EAAE,UAAA,CAAW,GAAG;YAE9D,IAAI,CAAC,YAAY,QAAQ;gBACvB,OAAO,KAAA;YACT;YAEA,WAAO,+LAAA,EAAM,SAAS;gBACpB,eAAe;YACjB,CAAC;QACH;IACF;IAEA,QAAI,6QAAA,EAAa,OAAO,GAAG;QACzB,OAAO;IACT;IAEA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 5506, "column": 0}, "map": {"version":3,"sources":["file:///home/tom/www2026/8_server/vercel/mydoc.site/node_modules/.pnpm/%40scalar%2Bopenapi-parser%400.18.3/node_modules/%40scalar/openapi-parser/src/utils/make-filesystem.ts"],"sourcesContent":["import type { AnyObject, Filesystem, FilesystemEntry } from '@/types/index'\nimport { getListOfReferences } from './get-list-of-references'\nimport { isFilesystem } from './is-filesystem'\nimport { normalize } from './normalize'\n\nexport function makeFilesystem(\n  value: string | AnyObject | Filesystem,\n  overwrites: Partial<FilesystemEntry> = {},\n): Filesystem {\n  // Keep as is\n  if (isFilesystem(value)) {\n    return value as Filesystem\n  }\n\n  // Make an object\n  const specification = normalize(value)\n\n  // Create fake filesystem\n  return [\n    {\n      isEntrypoint: true,\n      specification,\n      filename: null,\n      dir: './',\n      references: getListOfReferences(specification),\n      ...overwrites,\n    },\n  ]\n}\n"],"names":[],"mappings":";;;;AACA,SAAS,2BAA2B;AACpC,SAAS,oBAAoB;AAC7B,SAAS,iBAAiB;;;;AAEnB,SAAS,eACd,KAAA,EACA,aAAuC,CAAC,CAAA,EAC5B;IAEZ,QAAI,6QAAA,EAAa,KAAK,GAAG;QACvB,OAAO;IACT;IAGA,MAAM,oBAAgB,mQAAA,EAAU,KAAK;IAGrC,OAAO;QACL;YACE,cAAc;YACd;YACA,UAAU;YACV,KAAK;YACL,gBAAY,mSAAA,EAAoB,aAAa;YAC7C,GAAG,UAAA;QACL;KACF;AACF","debugId":null}},
    {"offset": {"line": 5538, "column": 0}, "map": {"version":3,"sources":["file:///home/tom/www2026/8_server/vercel/mydoc.site/node_modules/.pnpm/%40scalar%2Bopenapi-parser%400.18.3/node_modules/%40scalar/openapi-parser/src/utils/resolve-references.ts"],"sourcesContent":["import type { OpenAPI } from '@scalar/openapi-types'\n\nimport { ERRORS } from '@/configuration'\nimport type { AnyObject, ErrorObject, Filesystem, FilesystemEntry, ThrowOnErrorOption } from '@/types/index'\nimport { getEntrypoint } from './get-entrypoint'\nimport { getSegmentsFromPath } from './get-segments-from-path'\nimport { isObject } from './is-object'\nimport { makeFilesystem } from './make-filesystem'\n\n// TODO: Add support for all pointer words\n// export const pointerWords = new Set([\n//   '$ref',\n//   '$id',\n//   '$anchor',\n//   '$dynamicRef',\n//   '$dynamicAnchor',\n//   '$schema',\n// ])\n\nexport type ResolveReferencesResult = {\n  valid: boolean\n  errors: ErrorObject[]\n  schema: OpenAPI.Document\n}\n\nexport type ResolveReferencesOptions = ThrowOnErrorOption & {\n  /**\n   * Fired when dereferenced a schema.\n   *\n   * Note that for object schemas, its properties may not be dereferenced when the hook is called.\n   */\n  onDereference?: (data: { schema: AnyObject; ref: string }) => void\n}\n\n/**\n * Takes a specification and resolves all references.\n */\nexport function resolveReferences(\n  // Just a specification, or a set of files.\n  input: AnyObject | Filesystem,\n  // Additional options to control the behaviour\n  options?: ResolveReferencesOptions,\n  // Fallback to the entrypoint\n  file?: FilesystemEntry,\n  // Errors that occurred during the process\n  errors: ErrorObject[] = [],\n): ResolveReferencesResult {\n  // Detach from input\n  const clonedInput = structuredClone(input)\n\n  // Make it a filesystem, even if it's just one file\n  const filesystem = makeFilesystem(clonedInput)\n\n  // Get the main file\n  const entrypoint = getEntrypoint(filesystem)\n\n  const finalInput = file?.specification ?? entrypoint.specification\n\n  // Does it look like an OpenAPI document?\n  if (!isObject(finalInput)) {\n    if (options?.throwOnError) {\n      throw new Error(ERRORS.NO_CONTENT)\n    }\n\n    return {\n      valid: false,\n      errors,\n      schema: finalInput as OpenAPI.Document,\n    }\n  }\n\n  // Recursively resolve all references\n  dereference(finalInput, filesystem, file ?? entrypoint, new WeakSet(), errors, options)\n\n  // Remove duplicats (according to message) from errors\n  errors = errors.filter(\n    (error, index, self) => index === self.findIndex((t) => t.message === error.message && t.code === error.code),\n  )\n\n  // Return the resolved specification\n  return {\n    valid: errors.length === 0,\n    errors,\n    schema: finalInput as OpenAPI.Document,\n  }\n}\n\n/**\n * Resolves the circular reference to an object and deletes the $ref properties (in-place).\n */\nfunction dereference(\n  schema: AnyObject,\n  filesystem: Filesystem,\n  entrypoint: FilesystemEntry,\n  // references to resolved object\n  resolvedSchemas: WeakSet<object>,\n  // error output\n  errors: ErrorObject[],\n\n  options?: ResolveReferencesOptions,\n): void {\n  if (schema === null || resolvedSchemas.has(schema)) {\n    return\n  }\n  resolvedSchemas.add(schema)\n\n  function resolveExternal(externalFile: FilesystemEntry) {\n    dereference(externalFile.specification, filesystem, externalFile, resolvedSchemas, errors, options)\n\n    return externalFile\n  }\n\n  while (schema.$ref !== undefined) {\n    // Find the referenced content\n    const resolved = resolveUri(schema.$ref, options, entrypoint, filesystem, resolveExternal, errors)\n\n    // invalid\n    if (typeof resolved !== 'object' || resolved === null) {\n      break\n    }\n    const dereferencedRef = schema.$ref\n\n    // Get rid of the reference\n    delete schema.$ref\n\n    for (const key of Object.keys(resolved)) {\n      if (schema[key] === undefined) {\n        schema[key] = resolved[key]\n      }\n    }\n\n    if (dereferencedRef) {\n      options?.onDereference?.({ schema, ref: dereferencedRef })\n    }\n  }\n\n  // Iterate over the whole object\n  for (const value of Object.values(schema)) {\n    if (typeof value === 'object' && value !== null) {\n      dereference(value, filesystem, entrypoint, resolvedSchemas, errors, options)\n    }\n  }\n}\n\n/**\n * Resolves a URI to a part of the specification\n *\n * The output is not necessarily dereferenced\n */\nfunction resolveUri(\n  // 'foobar.json#/foo/bar'\n  uri: string,\n  options: ResolveReferencesOptions,\n  // { filename: './foobar.json '}\n  file: FilesystemEntry,\n  // [ { filename: './foobar.json '} ]\n  filesystem: Filesystem,\n\n  // a function to resolve references in external file\n  resolve: (file: FilesystemEntry) => FilesystemEntry,\n\n  errors: ErrorObject[],\n): AnyObject | undefined {\n  // Ignore invalid URIs\n  if (typeof uri !== 'string') {\n    if (options?.throwOnError) {\n      throw new Error(ERRORS.INVALID_REFERENCE.replace('%s', uri))\n    }\n\n    errors.push({\n      code: 'INVALID_REFERENCE',\n      message: ERRORS.INVALID_REFERENCE.replace('%s', uri),\n    })\n\n    return undefined\n  }\n\n  // Understand the URI\n  const [prefix, path] = uri.split('#', 2)\n\n  /** Check whether the file is pointing to itself */\n  const isDifferentFile = prefix !== file.filename\n\n  // External references\n  if (prefix && isDifferentFile) {\n    const externalReference = filesystem.find((entry) => {\n      return entry.filename === prefix\n    })\n\n    if (!externalReference) {\n      if (options?.throwOnError) {\n        throw new Error(ERRORS.EXTERNAL_REFERENCE_NOT_FOUND.replace('%s', prefix))\n      }\n\n      errors.push({\n        code: 'EXTERNAL_REFERENCE_NOT_FOUND',\n        message: ERRORS.EXTERNAL_REFERENCE_NOT_FOUND.replace('%s', prefix),\n      })\n\n      return undefined\n    }\n    // $ref: 'other-file.yaml'\n    if (path === undefined) {\n      return externalReference.specification\n    }\n\n    // $ref: 'other-file.yaml#/foo/bar'\n    // resolve refs first before accessing properties directly\n    return resolveUri(`#${path}`, options, resolve(externalReference), filesystem, resolve, errors)\n  }\n\n  // Pointers\n  const segments = getSegmentsFromPath(path)\n\n  // Try to find the URI\n  try {\n    return segments.reduce((acc, key) => {\n      return acc[key]\n    }, file.specification)\n  } catch (_error) {\n    if (options?.throwOnError) {\n      throw new Error(ERRORS.INVALID_REFERENCE.replace('%s', uri))\n    }\n\n    errors.push({\n      code: 'INVALID_REFERENCE',\n      message: ERRORS.INVALID_REFERENCE.replace('%s', uri),\n    })\n  }\n\n  return undefined\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5663, "column": 0}, "map": {"version":3,"sources":["file:///home/tom/www2026/8_server/vercel/mydoc.site/node_modules/.pnpm/%40scalar%2Bopenapi-parser%400.18.3/node_modules/%40scalar/openapi-parser/src/utils/dereference.ts"],"sourcesContent":["import type { AnyApiDefinitionFormat, DereferenceResult, Filesystem } from '@/types/index'\nimport { details } from './details'\nimport { getEntrypoint } from './get-entrypoint'\nimport { makeFilesystem } from './make-filesystem'\nimport { type ResolveReferencesOptions, resolveReferences } from './resolve-references'\n\nexport type DereferenceOptions = ResolveReferencesOptions\n\n/**\n * Resolves all references in an OpenAPI document\n */\nexport async function dereference(\n  value: AnyApiDefinitionFormat | Filesystem,\n  options?: DereferenceOptions,\n): Promise<DereferenceResult> {\n  const filesystem = makeFilesystem(value)\n\n  const entrypoint = getEntrypoint(filesystem)\n  const result = resolveReferences(filesystem, options)\n\n  return {\n    specification: entrypoint.specification,\n    errors: result.errors,\n    schema: result.schema,\n    ...details(entrypoint.specification),\n  }\n}\n"],"names":[],"mappings":";;;;AACA,SAAS,eAAe;AACxB,SAAS,qBAAqB;AAC9B,SAAS,sBAAsB;AAC/B,SAAwC,yBAAyB;;;;;AAOjE,eAAsB,YACpB,KAAA,EACA,OAAA,EAC4B;IAC5B,MAAM,iBAAa,iRAAA,EAAe,KAAK;IAEvC,MAAM,iBAAa,+QAAA,EAAc,UAAU;IAC3C,MAAM,aAAS,uRAAA,EAAkB,YAAY,OAAO;IAEpD,OAAO;QACL,eAAe,WAAW,aAAA;QAC1B,QAAQ,OAAO,MAAA;QACf,QAAQ,OAAO,MAAA;QACf,OAAG,+PAAA,EAAQ,WAAW,aAAa,CAAA;IACrC;AACF","debugId":null}},
    {"offset": {"line": 5692, "column": 0}, "map": {"version":3,"sources":["file:///home/tom/www2026/8_server/vercel/mydoc.site/node_modules/.pnpm/%40scalar%2Bopenapi-parser%400.18.3/node_modules/%40scalar/openapi-parser/src/utils/upgrade-from-three-to-three-one.ts"],"sourcesContent":["import type { OpenAPIV3_1 } from '@scalar/openapi-types'\nimport type { UnknownObject } from '@scalar/types/utils'\n\nimport { traverse } from './traverse'\n\n// Create Sets for faster schema path lookups\nconst SCHEMA_SEGMENTS = new Set([\n  'properties',\n  'items',\n  'allOf',\n  'anyOf',\n  'oneOf',\n  'not',\n  'additionalProperties',\n  'schema',\n])\n\n/** Determine if the current path is within a schema - optimized version */\nexport function isSchemaPath(path: string[]): boolean {\n  // Check for schema segments first (most common case)\n  if (path.some((segment) => SCHEMA_SEGMENTS.has(segment))) {\n    return true\n  }\n\n  // Check for schema suffix\n  if (path.some((segment) => segment.endsWith('Schema'))) {\n    return true\n  }\n\n  // Check for components/schemas path\n  if (path.length >= 2 && path[0] === 'components' && path[1] === 'schemas') {\n    return true\n  }\n\n  return false\n}\n\n/**\n * Upgrade from OpenAPI 3.0.x to 3.1.1\n *\n * https://www.openapis.org/blog/2021/02/16/migrating-from-openapi-3-0-to-3-1-0\n */\nexport function upgradeFromThreeToThreeOne(originalContent: UnknownObject) {\n  let content = originalContent\n\n  // Version check - early return if not 3.0.x\n  if (content === null || typeof content.openapi !== 'string' || !content.openapi.startsWith('3.0')) {\n    return content\n  }\n\n  content.openapi = '3.1.1'\n\n  // Single traversal that handles all transformations\n  content = traverse(content, applyChangesToDocument)\n\n  return content as OpenAPIV3_1.Document\n}\n\nconst applyChangesToDocument = (schema: UnknownObject, path: string[]) => {\n  // 1. Handle nullable types\n  if (schema.type !== undefined && schema.nullable === true) {\n    schema.type = [schema.type, 'null']\n    delete schema.nullable\n  }\n\n  // 2. Handle exclusiveMinimum and exclusiveMaximum\n  if (schema.exclusiveMinimum === true) {\n    schema.exclusiveMinimum = schema.minimum\n    delete schema.minimum\n  } else if (schema.exclusiveMinimum === false) {\n    delete schema.exclusiveMinimum\n  }\n\n  if (schema.exclusiveMaximum === true) {\n    schema.exclusiveMaximum = schema.maximum\n    delete schema.maximum\n  } else if (schema.exclusiveMaximum === false) {\n    delete schema.exclusiveMaximum\n  }\n\n  // 3. Handle examples\n  if (schema.example !== undefined) {\n    if (isSchemaPath(path)) {\n      schema.examples = [schema.example]\n    } else {\n      schema.examples = {\n        default: {\n          value: schema.example,\n        },\n      }\n    }\n    delete schema.example\n  }\n\n  // 4. Handle multipart file uploads\n  if (schema.type === 'object' && schema.properties !== undefined) {\n    const parentPath = path.slice(0, -1)\n    const isMultipart = parentPath.some((segment, index) => {\n      return segment === 'content' && path[index + 1] === 'multipart/form-data'\n    })\n\n    if (isMultipart) {\n      for (const value of Object.values(schema.properties)) {\n        if (\n          typeof value === 'object' &&\n          value !== null &&\n          'type' in value &&\n          'format' in value &&\n          value.type === 'string' &&\n          value.format === 'binary'\n        ) {\n          ;(value as any).contentMediaType = 'application/octet-stream'\n          delete (value as any).format\n        }\n      }\n    }\n  }\n\n  // 5. Handle binary file uploads\n  if (path.includes('content') && path.includes('application/octet-stream')) {\n    return {}\n  }\n\n  if (schema.type === 'string') {\n    if (schema.format === 'binary') {\n      return {\n        type: 'string',\n        contentMediaType: 'application/octet-stream',\n      }\n    }\n\n    if (schema.format === 'base64') {\n      return {\n        type: 'string',\n        contentEncoding: 'base64',\n      }\n    }\n\n    if (schema.format === 'byte') {\n      const parentPath = path.slice(0, -1)\n      const contentMediaType = parentPath.find((_, index) => path[index - 1] === 'content')\n      return {\n        type: 'string',\n        contentEncoding: 'base64',\n        contentMediaType,\n      }\n    }\n  }\n\n  // 6. Handle x-webhooks\n  if (schema['x-webhooks'] !== undefined) {\n    schema.webhooks = schema['x-webhooks']\n    delete schema['x-webhooks']\n  }\n\n  return schema\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5818, "column": 0}, "map": {"version":3,"sources":["file:///home/tom/www2026/8_server/vercel/mydoc.site/node_modules/.pnpm/%40scalar%2Bopenapi-parser%400.18.3/node_modules/%40scalar/openapi-parser/src/utils/upgrade-from-two-to-three.ts"],"sourcesContent":["import type { OpenAPIV2, OpenAPIV3 } from '@scalar/openapi-types'\nimport type { UnknownObject } from '@scalar/types/utils'\n\nimport { traverse } from './traverse'\n\n/** Update the flow names to OpenAPI 3.1.0 format */\nconst upgradeFlow = (flow: string): 'implicit' | 'password' | 'clientCredentials' | 'authorizationCode' => {\n  switch (flow) {\n    case 'application':\n      return 'clientCredentials'\n    case 'accessCode':\n      return 'authorizationCode'\n    case 'implicit':\n      return 'implicit'\n    case 'password':\n      return 'password'\n    default:\n      return flow as never\n  }\n}\n\n/**\n * Upgrade Swagger 2.0 to OpenAPI 3.0\n *\n * https://swagger.io/blog/news/whats-new-in-openapi-3-0/\n */\nexport function upgradeFromTwoToThree(originalSpecification: UnknownObject) {\n  let specification = originalSpecification\n\n  // Version\n  if (\n    specification !== null &&\n    typeof specification === 'object' &&\n    typeof specification.swagger === 'string' &&\n    specification.swagger?.startsWith('2.0')\n  ) {\n    specification.openapi = '3.0.4'\n    delete specification.swagger\n  } else {\n    // Skip if it's something else than 3.0.x\n    return specification\n  }\n\n  // Servers\n  if (specification.host) {\n    const schemes =\n      Array.isArray(specification.schemes) && specification.schemes?.length ? specification.schemes : ['http']\n\n    specification.servers = schemes.map((scheme: string[]) => ({\n      url: `${scheme}://${specification.host}${specification.basePath ?? ''}`,\n    }))\n\n    delete specification.basePath\n    delete specification.schemes\n    delete specification.host\n  } else if (specification.basePath) {\n    specification.servers = [{ url: specification.basePath }]\n    delete specification.basePath\n  }\n\n  // Schemas\n  if (specification.definitions) {\n    specification.components = Object.assign({}, specification.components, {\n      schemas: specification.definitions,\n    })\n\n    delete specification.definitions\n\n    // Rewrite $refs to definitions\n    specification = traverse(specification, (schema) => {\n      // Rewrite $refs to components\n      if (typeof schema.$ref === 'string' && schema.$ref.startsWith('#/definitions/')) {\n        schema.$ref = schema.$ref.replace(/^#\\/definitions\\//, '#/components/schemas/')\n      }\n\n      return schema\n    })\n  }\n\n  // Transform file type to string with binary format\n  specification = traverse(specification, (schema) => {\n    if (schema.type === 'file') {\n      schema.type = 'string'\n      schema.format = 'binary'\n    }\n\n    return schema\n  })\n\n  // Paths\n  if (typeof specification.paths === 'object') {\n    for (const path in specification.paths) {\n      if (Object.hasOwn(specification.paths, path)) {\n        const pathItem = specification.paths[path]\n\n        for (const method in pathItem) {\n          if (Object.hasOwn(pathItem, method)) {\n            const operationItem = pathItem[method]\n\n            // Request bodies\n            if (operationItem.parameters) {\n              const bodyParameter = structuredClone(\n                operationItem.parameters.find((parameter: OpenAPIV3.ParameterObject) => parameter.in === 'body') ?? {},\n              )\n\n              if (bodyParameter && Object.keys(bodyParameter).length) {\n                delete bodyParameter.name\n                delete bodyParameter.in\n\n                const consumes = specification.consumes ?? operationItem.consumes ?? ['application/json']\n\n                if (typeof operationItem.requestBody !== 'object') {\n                  operationItem.requestBody = {}\n                }\n\n                if (typeof operationItem.requestBody.content !== 'object') {\n                  operationItem.requestBody.content = {}\n                }\n\n                const { schema, ...requestBody } = bodyParameter\n\n                operationItem.requestBody = {\n                  ...operationItem.requestBody,\n                  ...requestBody,\n                }\n\n                for (const type of consumes) {\n                  operationItem.requestBody.content[type] = {\n                    schema: schema,\n                  }\n                }\n              }\n\n              // Delete body parameter\n              operationItem.parameters = operationItem.parameters.filter(\n                (parameter: OpenAPIV2.ParameterObject) => parameter.in !== 'body',\n              )\n\n              delete operationItem.consumes\n\n              // formData parameters\n              const formDataParameters = operationItem.parameters.filter(\n                (parameter: OpenAPIV2.ParameterObject) => parameter.in === 'formData',\n              )\n\n              if (formDataParameters.length > 0) {\n                if (typeof operationItem.requestBody !== 'object') {\n                  operationItem.requestBody = {}\n                }\n\n                if (typeof operationItem.requestBody.content !== 'object') {\n                  operationItem.requestBody.content = {}\n                }\n\n                operationItem.requestBody.content['application/x-www-form-urlencoded'] = {\n                  schema: {\n                    type: 'object',\n                    properties: {},\n                    required: [], // Initialize required array\n                  },\n                }\n\n                for (const param of formDataParameters) {\n                  operationItem.requestBody.content['application/x-www-form-urlencoded'].schema.properties[param.name] =\n                    {\n                      type: param.type,\n                      description: param.description,\n                    }\n\n                  // Add to required array if param is required\n                  if (param.required) {\n                    operationItem.requestBody.content['application/x-www-form-urlencoded'].schema.required.push(\n                      param.name,\n                    )\n                  }\n                }\n\n                // Remove formData parameters from the parameters array\n                operationItem.parameters = operationItem.parameters.filter(\n                  (parameter: OpenAPIV2.ParameterObject) => parameter.in !== 'formData',\n                )\n              }\n\n              operationItem.parameters = operationItem.parameters.map((parameter) =>\n                transformParameterObject(parameter),\n              )\n            }\n\n            // Responses\n            if (operationItem.responses) {\n              for (const response in operationItem.responses) {\n                if (Object.hasOwn(operationItem.responses, response)) {\n                  const responseItem = operationItem.responses[response]\n\n                  if (responseItem.headers) {\n                    responseItem.headers = Object.entries(responseItem.headers).reduce((acc, [name, header]) => {\n                      return {\n                        [name]: transformParameterObject(header),\n                        ...acc,\n                      }\n                    }, {})\n                  }\n                  if (responseItem.schema) {\n                    const produces = specification.produces ?? operationItem.produces ?? ['application/json']\n\n                    if (typeof responseItem.content !== 'object') {\n                      responseItem.content = {}\n                    }\n\n                    for (const type of produces) {\n                      responseItem.content[type] = {\n                        schema: responseItem.schema,\n                      }\n                    }\n\n                    delete responseItem.schema\n                  }\n                }\n              }\n            }\n\n            delete operationItem.produces\n\n            // Delete empty parameters\n            if (operationItem.parameters?.length === 0) {\n              delete operationItem.parameters\n            }\n          }\n        }\n      }\n    }\n  }\n\n  // Upgrade securityDefinitions\n  if (specification.securityDefinitions) {\n    if (typeof specification.components !== 'object') {\n      specification.components = {}\n    }\n\n    // Assert that components is of type OpenAPIV3.ComponentsObject\n    specification.components = specification.components as OpenAPIV3.ComponentsObject\n\n    Object.assign(specification.components, { securitySchemes: {} })\n\n    for (const [key, securityScheme] of Object.entries(specification.securityDefinitions)) {\n      if (typeof securityScheme === 'object') {\n        if ('type' in securityScheme && securityScheme.type === 'oauth2') {\n          const { flow, authorizationUrl, tokenUrl, scopes } = securityScheme as {\n            type: 'oauth2'\n            flow?: string\n            authorizationUrl?: string\n            tokenUrl?: string\n            scopes?: Record<string, string>\n          }\n\n          // Convert flow values to OpenAPI 3.1.0 format\n\n          // Assert that securitySchemes is of type OpenAPIV3.SecuritySchemeObject\n          Object.assign((specification.components as OpenAPIV3.ComponentsObject).securitySchemes, {\n            [key]: {\n              type: 'oauth2',\n              flows: {\n                [upgradeFlow(flow)]: Object.assign(\n                  {},\n                  authorizationUrl && { authorizationUrl },\n                  tokenUrl && { tokenUrl },\n                  scopes && { scopes },\n                ),\n              },\n            },\n          })\n        } else if ('type' in securityScheme && securityScheme.type === 'basic') {\n          Object.assign((specification.components as OpenAPIV3.ComponentsObject).securitySchemes, {\n            [key]: {\n              type: 'http',\n              scheme: 'basic',\n            },\n          })\n        } else {\n          Object.assign((specification.components as OpenAPIV3.ComponentsObject).securitySchemes, {\n            [key]: securityScheme,\n          })\n        }\n      }\n    }\n\n    delete specification.securityDefinitions\n  }\n\n  return specification as OpenAPIV3.Document\n}\n\nfunction transformItemsObject<T extends Record<PropertyKey, unknown>>(obj: T): OpenAPIV3.SchemaObject {\n  const schemaProperties = [\n    'type',\n    'format',\n    'items',\n    'maximum',\n    'exclusiveMaximum',\n    'minimum',\n    'exclusiveMinimum',\n    'maxLength',\n    'minLength',\n    'pattern',\n    'maxItems',\n    'minItems',\n    'uniqueItems',\n    'enum',\n    'multipleOf',\n  ]\n\n  return schemaProperties.reduce((acc, property) => {\n    if (Object.hasOwn(obj, property)) {\n      acc[property] = obj[property]\n      delete obj[property]\n    }\n\n    return acc\n  }, {} as OpenAPIV3.SchemaObject)\n}\n\nfunction transformParameterObject(parameter: OpenAPIV2.ParameterObject): OpenAPIV3.ParameterObject {\n  // it is important to call getParameterSerializationStyle first because transformItemsObject modifies properties on which getParameterSerializationStyle rely on\n  const serializationStyle = getParameterSerializationStyle(parameter)\n  const schema = transformItemsObject(parameter)\n\n  delete parameter.collectionFormat\n  delete parameter.default\n\n  return {\n    schema,\n    ...serializationStyle,\n    ...parameter,\n  }\n}\n\ntype CollectionFormat = 'csv' | 'ssv' | 'tsv' | 'pipes' | 'multi'\n\ntype ParameterSerializationStyle = { style?: string; explode?: boolean }\n\nconst querySerialization: Record<CollectionFormat, ParameterSerializationStyle> = {\n  ssv: {\n    style: 'spaceDelimited',\n    explode: false,\n  },\n  pipes: {\n    style: 'pipeDelimited',\n    explode: false,\n  },\n  multi: {\n    style: 'form',\n    explode: true,\n  },\n  csv: {\n    style: 'form',\n    explode: false,\n  },\n  tsv: {},\n}\n\nconst pathAndHeaderSerialization: Record<CollectionFormat, ParameterSerializationStyle> = {\n  ssv: {},\n  pipes: {},\n  multi: {},\n  csv: {\n    style: 'simple',\n    explode: false,\n  },\n  tsv: {},\n}\n\nconst serializationStyles = {\n  header: pathAndHeaderSerialization,\n  query: querySerialization,\n  path: pathAndHeaderSerialization,\n} as const\n\nfunction getParameterSerializationStyle(parameter: OpenAPIV2.ParameterObject): ParameterSerializationStyle {\n  if (\n    parameter.type !== 'array' ||\n    !(parameter.in === 'query' || parameter.in === 'path' || parameter.in === 'header')\n  ) {\n    return {}\n  }\n\n  const collectionFormat = parameter.collectionFormat ?? 'csv'\n\n  return serializationStyles[parameter.in][collectionFormat]\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 6111, "column": 0}, "map": {"version":3,"sources":["file:///home/tom/www2026/8_server/vercel/mydoc.site/node_modules/.pnpm/%40scalar%2Bopenapi-parser%400.18.3/node_modules/%40scalar/openapi-parser/src/utils/upgrade.ts"],"sourcesContent":["import type { OpenAPIV3_1 } from '@scalar/openapi-types'\n\nimport type { AnyObject, Filesystem, UpgradeResult } from '@/types/index'\nimport type { UnknownObject } from '@scalar/types/utils'\nimport { getEntrypoint } from './get-entrypoint'\nimport { isFilesystem } from './is-filesystem'\nimport { normalize } from './normalize'\nimport { upgradeFromThreeToThreeOne } from './upgrade-from-three-to-three-one'\nimport { upgradeFromTwoToThree } from './upgrade-from-two-to-three'\n\nconst upgraders = [\n  // Swagger 2.0 -> OpenAPI 3.0\n  upgradeFromTwoToThree,\n  // OpenAPI 3.0 -> OpenAPI 3.1\n  upgradeFromThreeToThreeOne,\n]\n\n/**\n * Upgrade specification to OpenAPI 3.1.0\n */\nexport function upgrade(value: string | AnyObject | Filesystem): UpgradeResult<OpenAPIV3_1.Document> {\n  if (!value) {\n    return {\n      specification: null,\n      version: '3.1',\n    }\n  }\n\n  // TODO: Run upgrade over the whole filesystem\n  const result = upgraders.reduce(\n    (currentSpecification, upgrader) => upgrader(currentSpecification as UnknownObject),\n    isFilesystem(value) ? getEntrypoint(value).specification : normalize(value),\n  ) as OpenAPIV3_1.Document\n\n  return {\n    specification: result,\n    // TODO: Make dynamic\n    version: '3.1',\n  } as UpgradeResult<OpenAPIV3_1.Document>\n}\n"],"names":[],"mappings":";;;;AAIA,SAAS,qBAAqB;AAC9B,SAAS,oBAAoB;AAC7B,SAAS,iBAAiB;AAC1B,SAAS,kCAAkC;AAC3C,SAAS,6BAA6B;;;;;;AAEtC,MAAM,YAAY;IAAA,6BAAA;IAEhB,2SAAA;IAAA,6BAAA;IAEA,yTAAA;CACF;AAKO,SAAS,QAAQ,KAAA,EAA6E;IACnG,IAAI,CAAC,OAAO;QACV,OAAO;YACL,eAAe;YACf,SAAS;QACX;IACF;IAGA,MAAM,SAAS,UAAU,MAAA,CACvB,CAAC,sBAAsB,WAAa,SAAS,oBAAqC,OAClF,6QAAA,EAAa,KAAK,QAAI,+QAAA,EAAc,KAAK,EAAE,aAAA,OAAgB,mQAAA,EAAU,KAAK;IAG5E,OAAO;QACL,eAAe;QAAA,qBAAA;QAEf,SAAS;IACX;AACF","debugId":null}},
    {"offset": {"line": 6151, "column": 0}, "map": {"version":3,"sources":["file:///home/tom/www2026/8_server/vercel/mydoc.site/node_modules/.pnpm/%40scalar%2Bopenapi-parser%400.18.3/node_modules/%40scalar/openapi-parser/src/utils/bundle/create-limiter.ts"],"sourcesContent":["/**\n * Creates a function that limits the number of concurrent executions of async functions.\n *\n * @param maxConcurrent - Maximum number of concurrent executions allowed\n * @returns A function that wraps async functions to limit their concurrent execution\n *\n * @example\n * ```ts\n * const limiter = createLimiter(2) // Allow max 2 concurrent executions\n *\n * // These will run with max 2 at a time\n * const results = await Promise.all([\n *   limiter(() => fetch('/api/1')),\n *   limiter(() => fetch('/api/2')),\n *   limiter(() => fetch('/api/3')),\n *   limiter(() => fetch('/api/4'))\n * ])\n * ```\n */\nexport function createLimiter(maxConcurrent: number) {\n  let activeCount = 0\n  const queue: (() => void)[] = []\n\n  const next = () => {\n    if (queue.length === 0 || activeCount >= maxConcurrent) {\n      return\n    }\n\n    const resolve = queue.shift()\n\n    if (resolve) {\n      resolve()\n    }\n  }\n\n  const run = async <T>(fn: () => Promise<T>): Promise<T> => {\n    if (activeCount >= maxConcurrent) {\n      await new Promise<void>((resolve) => queue.push(resolve))\n    }\n\n    activeCount++\n    try {\n      const result = await fn()\n      return result\n    } finally {\n      activeCount--\n      next()\n    }\n  }\n\n  return run\n}\n"],"names":[],"mappings":";;;;AAmBO,SAAS,cAAc,aAAA,EAAuB;IACnD,IAAI,cAAc;IAClB,MAAM,QAAwB,CAAC,CAAA;IAE/B,MAAM,OAAO,MAAM;QACjB,IAAI,MAAM,MAAA,KAAW,KAAK,eAAe,eAAe;YACtD;QACF;QAEA,MAAM,UAAU,MAAM,KAAA,CAAM;QAE5B,IAAI,SAAS;YACX,QAAQ;QACV;IACF;IAEA,MAAM,MAAM,OAAU,OAAqC;QACzD,IAAI,eAAe,eAAe;YAChC,MAAM,IAAI,QAAc,CAAC,UAAY,MAAM,IAAA,CAAK,OAAO,CAAC;QAC1D;QAEA;QACA,IAAI;YACF,MAAM,SAAS,MAAM,GAAG;YACxB,OAAO;QACT,SAAE;YACA;YACA,KAAK;QACP;IACF;IAEA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 6188, "column": 0}, "map": {"version":3,"sources":["file:///home/tom/www2026/8_server/vercel/mydoc.site/node_modules/.pnpm/%40scalar%2Bopenapi-parser%400.18.3/node_modules/%40scalar/openapi-parser/src/utils/bundle/plugins/fetch-urls/index.ts"],"sourcesContent":["import { normalize } from '@/utils/normalize'\nimport { isRemoteUrl, type Plugin, type ResolveResult } from '@/utils/bundle/bundle'\nimport { createLimiter } from '@/utils/bundle/create-limiter'\n\ntype FetchConfig = Partial<{\n  headers: { headers: HeadersInit; domains: string[] }[]\n  fetch: (input: string | URL | globalThis.Request, init?: RequestInit) => Promise<Response>\n}>\n\n/**\n * Safely checks for host from a URL\n * Needed because we cannot create a URL from a relative remote URL ex: examples/openapi.json\n */\nconst getHost = (url: string): string | null => {\n  try {\n    return new URL(url).host\n  } catch {\n    return null\n  }\n}\n\n/**\n * Fetches and normalizes data from a remote URL\n * @param url - The URL to fetch data from\n * @returns A promise that resolves to either the normalized data or an error result\n * @example\n * ```ts\n * const result = await fetchUrl('https://api.example.com/data.json')\n * if (result.ok) {\n *   console.log(result.data) // The normalized data\n * } else {\n *   console.log('Failed to fetch data')\n * }\n * ```\n */\nexport async function fetchUrl(\n  url: string,\n  limiter: <T>(fn: () => Promise<T>) => Promise<T>,\n  config?: FetchConfig,\n): Promise<ResolveResult> {\n  try {\n    const host = getHost(url)\n\n    // Get the headers that match the domain\n    const headers = config?.headers?.find((a) => a.domains.find((d) => d === host) !== undefined)?.headers\n\n    const exec = config?.fetch ?? fetch\n\n    const result = await limiter(() =>\n      exec(url, {\n        headers,\n      }),\n    )\n\n    if (result.ok) {\n      const body = await result.text()\n\n      return {\n        ok: true,\n        data: normalize(body),\n      }\n    }\n\n    return {\n      ok: false,\n    }\n  } catch {\n    return {\n      ok: false,\n    }\n  }\n}\n\n/**\n * Creates a plugin for handling remote URL references.\n * This plugin validates and fetches data from HTTP/HTTPS URLs.\n *\n * @returns A plugin object with validate and exec functions\n * @example\n * const urlPlugin = fetchUrls()\n * if (urlPlugin.validate('https://example.com/schema.json')) {\n *   const result = await urlPlugin.exec('https://example.com/schema.json')\n * }\n */\nexport function fetchUrls(config?: FetchConfig & Partial<{ limit: number | null }>): Plugin {\n  // If there is a limit specified we limit the number of concurrent calls\n  const limiter = config?.limit ? createLimiter(config.limit) : <T>(fn: () => Promise<T>) => fn()\n\n  return {\n    validate: isRemoteUrl,\n    exec: (value) => fetchUrl(value, limiter, config),\n  }\n}\n"],"names":[],"mappings":";;;;;;AAAA,SAAS,iBAAiB;AAC1B,SAAS,mBAAoD;AAC7D,SAAS,qBAAqB;;;;AAW9B,MAAM,UAAU,CAAC,QAA+B;IAC9C,IAAI;QACF,OAAO,IAAI,IAAI,GAAG,EAAE,IAAA;IACtB,EAAA,OAAQ;QACN,OAAO;IACT;AACF;AAgBA,eAAsB,SACpB,GAAA,EACA,OAAA,EACA,MAAA,EACwB;IACxB,IAAI;QACF,MAAM,OAAO,QAAQ,GAAG;QAGxB,MAAM,UAAU,QAAQ,SAAS,KAAK,CAAC,IAAM,EAAE,OAAA,CAAQ,IAAA,CAAK,CAAC,IAAM,MAAM,IAAI,MAAM,KAAA,CAAS,GAAG;QAE/F,MAAM,OAAO,QAAQ,SAAS;QAE9B,MAAM,SAAS,MAAM,QAAQ,IAC3B,KAAK,KAAK;gBACR;YACF,CAAC;QAGH,IAAI,OAAO,EAAA,EAAI;YACb,MAAM,OAAO,MAAM,OAAO,IAAA,CAAK;YAE/B,OAAO;gBACL,IAAI;gBACJ,UAAM,mQAAA,EAAU,IAAI;YACtB;QACF;QAEA,OAAO;YACL,IAAI;QACN;IACF,EAAA,OAAQ;QACN,OAAO;YACL,IAAI;QACN;IACF;AACF;AAaO,SAAS,UAAU,MAAA,EAAkE;IAE1F,MAAM,UAAU,QAAQ,YAAQ,yRAAA,EAAc,OAAO,KAAK,IAAI,CAAI,KAAyB,GAAG;IAE9F,OAAO;QACL,UAAU,4QAAA;QACV,MAAM,CAAC,QAAU,SAAS,OAAO,SAAS,MAAM;IAClD;AACF","debugId":null}},
    {"offset": {"line": 6244, "column": 0}, "map": {"version":3,"sources":["file:///home/tom/www2026/8_server/vercel/mydoc.site/node_modules/.pnpm/%40scalar%2Bopenapi-parser%400.18.3/node_modules/%40scalar/openapi-parser/src/utils/bundle/plugins/read-files/index.ts"],"sourcesContent":["import { normalize } from '@/utils/normalize'\nimport { isFilePath, type Plugin, type ResolveResult } from '@/utils/bundle/bundle'\n\n/**\n * Reads and normalizes data from a local file\n * @param path - The file path to read from\n * @returns A promise that resolves to either the normalized data or an error result\n * @example\n * ```ts\n * const result = await readFile('./schemas/user.json')\n * if (result.ok) {\n *   console.log(result.data) // The normalized data\n * } else {\n *   console.log('Failed to read file')\n * }\n * ```\n */\nexport async function readFile(path: string): Promise<ResolveResult> {\n  const fs = typeof window === 'undefined' ? await import('node:fs/promises') : undefined\n\n  if (fs === undefined) {\n    throw 'Can not use readFiles plugin outside of a node environment'\n  }\n\n  try {\n    const fileContents = await fs.readFile(path, { encoding: 'utf-8' })\n\n    return {\n      ok: true,\n      data: normalize(fileContents),\n    }\n  } catch {\n    return {\n      ok: false,\n    }\n  }\n}\n\n/**\n * Creates a plugin for handling local file references.\n * This plugin validates and reads data from local filesystem paths.\n *\n * @returns A plugin object with validate and exec functions\n * @example\n * const filePlugin = readFiles()\n * if (filePlugin.validate('./local-schema.json')) {\n *   const result = await filePlugin.exec('./local-schema.json')\n * }\n */\nexport function readFiles(): Plugin {\n  return {\n    validate: isFilePath,\n    exec: readFile,\n  }\n}\n"],"names":[],"mappings":";;;;;;AAAA,SAAS,iBAAiB;AAC1B,SAAS,kBAAmD;;;AAgB5D,eAAsB,SAAS,IAAA,EAAsC;IACnE,MAAM,KAAK,OAAO,WAAW,qBAAc,MAAM,OAAO,kBAAkB,kFAAI;IAE9E,IAAI,OAAO,KAAA,GAAW;QACpB,MAAM;IACR;IAEA,IAAI;QACF,MAAM,eAAe,MAAM,GAAG,QAAA,CAAS,MAAM;YAAE,UAAU;QAAQ,CAAC;QAElE,OAAO;YACL,IAAI;YACJ,UAAM,mQAAA,EAAU,YAAY;QAC9B;IACF,EAAA,OAAQ;QACN,OAAO;YACL,IAAI;QACN;IACF;AACF;AAaO,SAAS,YAAoB;IAClC,OAAO;QACL,UAAU,2QAAA;QACV,MAAM;IACR;AACF","debugId":null}}]
}