{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 24, "column": 0}, "map": {"version":3,"sources":["file:///home/tom/www2026/8_server/vercel/fumadocs/node_modules/.pnpm/oxc-transform%400.82.2/node_modules/oxc-transform/webcontainer-fallback.js"],"sourcesContent":["const fs = require('node:fs');\nconst childProcess = require('node:child_process');\n\nconst pkg = JSON.parse(\n  fs.readFileSync(require.resolve('oxc-transform/package.json'), 'utf-8'),\n);\nconst version = pkg.version;\nconst baseDir = `/tmp/oxc-transform-${version}`;\nconst bindingEntry = `${baseDir}/node_modules/@oxc-transform/binding-wasm32-wasi/transform.wasi.cjs`;\n\nif (!fs.existsSync(bindingEntry)) {\n  fs.rmSync(baseDir, { recursive: true, force: true });\n  fs.mkdirSync(baseDir, { recursive: true });\n  const bindingPkg = `@oxc-transform/binding-wasm32-wasi@${version}`;\n  // eslint-disable-next-line: no-console\n  console.log(`[oxc-transform] Downloading ${bindingPkg} on WebContainer...`);\n  childProcess.execFileSync('pnpm', ['i', bindingPkg], {\n    cwd: baseDir,\n    stdio: 'inherit',\n  });\n}\n\nmodule.exports = require(bindingEntry);\n"],"names":[],"mappings":"AAAA,MAAM;AACN,MAAM;AAEN,MAAM,MAAM,KAAK,KAAK,CACpB,GAAG,YAAY,qGAAgD;AAEjE,MAAM,UAAU,IAAI,OAAO;AAC3B,MAAM,UAAU,CAAC,mBAAmB,EAAE,SAAS;AAC/C,MAAM,eAAe,GAAG,QAAQ,mEAAmE,CAAC;AAEpG,IAAI,CAAC,GAAG,UAAU,CAAC,eAAe;IAChC,GAAG,MAAM,CAAC,SAAS;QAAE,WAAW;QAAM,OAAO;IAAK;IAClD,GAAG,SAAS,CAAC,SAAS;QAAE,WAAW;IAAK;IACxC,MAAM,aAAa,CAAC,mCAAmC,EAAE,SAAS;IAClE,uCAAuC;IACvC,QAAQ,GAAG,CAAC,CAAC,4BAA4B,EAAE,WAAW,mBAAmB,CAAC;IAC1E,aAAa,YAAY,CAAC,QAAQ;QAAC;QAAK;KAAW,EAAE;QACnD,KAAK;QACL,OAAO;IACT;AACF;AAEA,OAAO,OAAO","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 57, "column": 0}, "map": {"version":3,"sources":["file:///home/tom/www2026/8_server/vercel/fumadocs/node_modules/.pnpm/oxc-transform%400.82.2/node_modules/oxc-transform/index.js"],"sourcesContent":["// prettier-ignore\n/* eslint-disable */\n// @ts-nocheck\n/* auto-generated by NAPI-RS */\n\nconst { createRequire } = require('node:module')\nrequire = createRequire(__filename)\n\nconst { readFileSync } = require('node:fs')\nlet nativeBinding = null\nconst loadErrors = []\n\nconst isMusl = () => {\n  let musl = false\n  if (process.platform === 'linux') {\n    musl = isMuslFromFilesystem()\n    if (musl === null) {\n      musl = isMuslFromReport()\n    }\n    if (musl === null) {\n      musl = isMuslFromChildProcess()\n    }\n  }\n  return musl\n}\n\nconst isFileMusl = (f) => f.includes('libc.musl-') || f.includes('ld-musl-')\n\nconst isMuslFromFilesystem = () => {\n  try {\n    return readFileSync('/usr/bin/ldd', 'utf-8').includes('musl')\n  } catch {\n    return null\n  }\n}\n\nconst isMuslFromReport = () => {\n  let report = null\n  if (typeof process.report?.getReport === 'function') {\n    process.report.excludeNetwork = true\n    report = process.report.getReport()\n  }\n  if (!report) {\n    return null\n  }\n  if (report.header && report.header.glibcVersionRuntime) {\n    return false\n  }\n  if (Array.isArray(report.sharedObjects)) {\n    if (report.sharedObjects.some(isFileMusl)) {\n      return true\n    }\n  }\n  return false\n}\n\nconst isMuslFromChildProcess = () => {\n  try {\n    return require('child_process').execSync('ldd --version', { encoding: 'utf8' }).includes('musl')\n  } catch (e) {\n    // If we reach this case, we don't know if the system is musl or not, so is better to just fallback to false\n    return false\n  }\n}\n\nfunction requireNative() {\n  if (process.env.NAPI_RS_NATIVE_LIBRARY_PATH) {\n    try {\n      nativeBinding = require(process.env.NAPI_RS_NATIVE_LIBRARY_PATH);\n    } catch (err) {\n      loadErrors.push(err)\n    }\n  } else if (process.platform === 'android') {\n    if (process.arch === 'arm64') {\n      try {\n        return require('./transform.android-arm64.node')\n      } catch (e) {\n        loadErrors.push(e)\n      }\n      try {\n        return require('@oxc-transform/binding-android-arm64')\n      } catch (e) {\n        loadErrors.push(e)\n      }\n    } else if (process.arch === 'arm') {\n      try {\n        return require('./transform.android-arm-eabi.node')\n      } catch (e) {\n        loadErrors.push(e)\n      }\n      try {\n        return require('@oxc-transform/binding-android-arm-eabi')\n      } catch (e) {\n        loadErrors.push(e)\n      }\n    } else {\n      loadErrors.push(new Error(`Unsupported architecture on Android ${process.arch}`))\n    }\n  } else if (process.platform === 'win32') {\n    if (process.arch === 'x64') {\n      try {\n        return require('./transform.win32-x64-msvc.node')\n      } catch (e) {\n        loadErrors.push(e)\n      }\n      try {\n        return require('@oxc-transform/binding-win32-x64-msvc')\n      } catch (e) {\n        loadErrors.push(e)\n      }\n    } else if (process.arch === 'ia32') {\n      try {\n        return require('./transform.win32-ia32-msvc.node')\n      } catch (e) {\n        loadErrors.push(e)\n      }\n      try {\n        return require('@oxc-transform/binding-win32-ia32-msvc')\n      } catch (e) {\n        loadErrors.push(e)\n      }\n    } else if (process.arch === 'arm64') {\n      try {\n        return require('./transform.win32-arm64-msvc.node')\n      } catch (e) {\n        loadErrors.push(e)\n      }\n      try {\n        return require('@oxc-transform/binding-win32-arm64-msvc')\n      } catch (e) {\n        loadErrors.push(e)\n      }\n    } else {\n      loadErrors.push(new Error(`Unsupported architecture on Windows: ${process.arch}`))\n    }\n  } else if (process.platform === 'darwin') {\n    try {\n      return require('./transform.darwin-universal.node')\n    } catch (e) {\n      loadErrors.push(e)\n    }\n    try {\n      return require('@oxc-transform/binding-darwin-universal')\n    } catch (e) {\n      loadErrors.push(e)\n    }\n    if (process.arch === 'x64') {\n      try {\n        return require('./transform.darwin-x64.node')\n      } catch (e) {\n        loadErrors.push(e)\n      }\n      try {\n        return require('@oxc-transform/binding-darwin-x64')\n      } catch (e) {\n        loadErrors.push(e)\n      }\n    } else if (process.arch === 'arm64') {\n      try {\n        return require('./transform.darwin-arm64.node')\n      } catch (e) {\n        loadErrors.push(e)\n      }\n      try {\n        return require('@oxc-transform/binding-darwin-arm64')\n      } catch (e) {\n        loadErrors.push(e)\n      }\n    } else {\n      loadErrors.push(new Error(`Unsupported architecture on macOS: ${process.arch}`))\n    }\n  } else if (process.platform === 'freebsd') {\n    if (process.arch === 'x64') {\n      try {\n        return require('./transform.freebsd-x64.node')\n      } catch (e) {\n        loadErrors.push(e)\n      }\n      try {\n        return require('@oxc-transform/binding-freebsd-x64')\n      } catch (e) {\n        loadErrors.push(e)\n      }\n    } else if (process.arch === 'arm64') {\n      try {\n        return require('./transform.freebsd-arm64.node')\n      } catch (e) {\n        loadErrors.push(e)\n      }\n      try {\n        return require('@oxc-transform/binding-freebsd-arm64')\n      } catch (e) {\n        loadErrors.push(e)\n      }\n    } else {\n      loadErrors.push(new Error(`Unsupported architecture on FreeBSD: ${process.arch}`))\n    }\n  } else if (process.platform === 'linux') {\n    if (process.arch === 'x64') {\n      if (isMusl()) {\n        try {\n          return require('./transform.linux-x64-musl.node')\n        } catch (e) {\n          loadErrors.push(e)\n        }\n        try {\n          return require('@oxc-transform/binding-linux-x64-musl')\n        } catch (e) {\n          loadErrors.push(e)\n        }\n      } else {\n        try {\n          return require('./transform.linux-x64-gnu.node')\n        } catch (e) {\n          loadErrors.push(e)\n        }\n        try {\n          return require('@oxc-transform/binding-linux-x64-gnu')\n        } catch (e) {\n          loadErrors.push(e)\n        }\n      }\n    } else if (process.arch === 'arm64') {\n      if (isMusl()) {\n        try {\n          return require('./transform.linux-arm64-musl.node')\n        } catch (e) {\n          loadErrors.push(e)\n        }\n        try {\n          return require('@oxc-transform/binding-linux-arm64-musl')\n        } catch (e) {\n          loadErrors.push(e)\n        }\n      } else {\n        try {\n          return require('./transform.linux-arm64-gnu.node')\n        } catch (e) {\n          loadErrors.push(e)\n        }\n        try {\n          return require('@oxc-transform/binding-linux-arm64-gnu')\n        } catch (e) {\n          loadErrors.push(e)\n        }\n      }\n    } else if (process.arch === 'arm') {\n      if (isMusl()) {\n        try {\n          return require('./transform.linux-arm-musleabihf.node')\n        } catch (e) {\n          loadErrors.push(e)\n        }\n        try {\n          return require('@oxc-transform/binding-linux-arm-musleabihf')\n        } catch (e) {\n          loadErrors.push(e)\n        }\n      } else {\n        try {\n          return require('./transform.linux-arm-gnueabihf.node')\n        } catch (e) {\n          loadErrors.push(e)\n        }\n        try {\n          return require('@oxc-transform/binding-linux-arm-gnueabihf')\n        } catch (e) {\n          loadErrors.push(e)\n        }\n      }\n    } else if (process.arch === 'riscv64') {\n      if (isMusl()) {\n        try {\n          return require('./transform.linux-riscv64-musl.node')\n        } catch (e) {\n          loadErrors.push(e)\n        }\n        try {\n          return require('@oxc-transform/binding-linux-riscv64-musl')\n        } catch (e) {\n          loadErrors.push(e)\n        }\n      } else {\n        try {\n          return require('./transform.linux-riscv64-gnu.node')\n        } catch (e) {\n          loadErrors.push(e)\n        }\n        try {\n          return require('@oxc-transform/binding-linux-riscv64-gnu')\n        } catch (e) {\n          loadErrors.push(e)\n        }\n      }\n    } else if (process.arch === 'ppc64') {\n      try {\n        return require('./transform.linux-ppc64-gnu.node')\n      } catch (e) {\n        loadErrors.push(e)\n      }\n      try {\n        return require('@oxc-transform/binding-linux-ppc64-gnu')\n      } catch (e) {\n        loadErrors.push(e)\n      }\n    } else if (process.arch === 's390x') {\n      try {\n        return require('./transform.linux-s390x-gnu.node')\n      } catch (e) {\n        loadErrors.push(e)\n      }\n      try {\n        return require('@oxc-transform/binding-linux-s390x-gnu')\n      } catch (e) {\n        loadErrors.push(e)\n      }\n    } else {\n      loadErrors.push(new Error(`Unsupported architecture on Linux: ${process.arch}`))\n    }\n  } else if (process.platform === 'openharmony') {\n    if (process.arch === 'arm64') {\n      try {\n        return require('./transform.linux-arm64-ohos.node')\n      } catch (e) {\n        loadErrors.push(e)\n      }\n      try {\n        return require('@oxc-transform/binding-linux-arm64-ohos')\n      } catch (e) {\n        loadErrors.push(e)\n      }\n    } else if (process.arch === 'x64') {\n      try {\n        return require('./transform.linux-x64-ohos.node')\n      } catch (e) {\n        loadErrors.push(e)\n      }\n      try {\n        return require('@oxc-transform/binding-linux-x64-ohos')\n      } catch (e) {\n        loadErrors.push(e)\n      }\n    } else if (process.arch === 'arm') {\n      try {\n        return require('./transform.linux-arm-ohos.node')\n      } catch (e) {\n        loadErrors.push(e)\n      }\n      try {\n        return require('@oxc-transform/binding-linux-arm-ohos')\n      } catch (e) {\n        loadErrors.push(e)\n      }\n    } else {\n      loadErrors.push(new Error(`Unsupported architecture on OpenHarmony: ${process.arch}`))\n    }\n  } else {\n    loadErrors.push(new Error(`Unsupported OS: ${process.platform}, architecture: ${process.arch}`))\n  }\n}\n\nnativeBinding = requireNative()\n\nif (!nativeBinding || process.env.NAPI_RS_FORCE_WASI) {\n  try {\n    nativeBinding = require('./transform.wasi.cjs')\n  } catch (err) {\n    if (process.env.NAPI_RS_FORCE_WASI) {\n      loadErrors.push(err)\n    }\n  }\n  if (!nativeBinding) {\n    try {\n      nativeBinding = require('@oxc-transform/binding-wasm32-wasi')\n    } catch (err) {\n      if (process.env.NAPI_RS_FORCE_WASI) {\n        loadErrors.push(err)\n      }\n    }\n  }\n}\n\nif (!nativeBinding && globalThis.process?.versions?.[\"webcontainer\"]) {\n  try {\n    nativeBinding = require('./webcontainer-fallback.js');\n  } catch (err) {\n    loadErrors.push(err)\n  }\n}\n\nif (!nativeBinding) {\n  if (loadErrors.length > 0) {\n    throw new Error(\n      `Cannot find native binding. ` +\n        `npm has a bug related to optional dependencies (https://github.com/npm/cli/issues/4828). ` +\n        'Please try `npm i` again after removing both package-lock.json and node_modules directory.',\n      { cause: loadErrors }\n    )\n  }\n  throw new Error(`Failed to load native binding`)\n}\n\nmodule.exports = nativeBinding\nmodule.exports.Severity = nativeBinding.Severity\nmodule.exports.HelperMode = nativeBinding.HelperMode\nmodule.exports.isolatedDeclaration = nativeBinding.isolatedDeclaration\nmodule.exports.moduleRunnerTransform = nativeBinding.moduleRunnerTransform\nmodule.exports.transform = nativeBinding.transform\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}}]
}