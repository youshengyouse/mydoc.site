{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///home/tom/www2026/8_server/vercel/fumadocs/packages/core/dist/chunk-NJLFLPV4.js"],"sourcesContent":["// src/highlight/shiki.ts\nimport { toJsxRuntime } from \"hast-util-to-jsx-runtime\";\nimport { Fragment } from \"react\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar defaultThemes = {\n  light: \"github-light\",\n  dark: \"github-dark\"\n};\nvar highlighters = /* @__PURE__ */ new Map();\nasync function _highlight(code, options) {\n  const {\n    lang: initialLang,\n    fallbackLanguage,\n    components: _,\n    engine = \"oniguruma\",\n    ...rest\n  } = options;\n  let lang = initialLang;\n  let themes;\n  let themesToLoad;\n  if (\"theme\" in options && options.theme) {\n    themes = { theme: options.theme };\n    themesToLoad = [themes.theme];\n  } else {\n    themes = {\n      themes: \"themes\" in options && options.themes ? options.themes : defaultThemes\n    };\n    themesToLoad = Object.values(themes.themes).filter((v) => v !== void 0);\n  }\n  let highlighter;\n  if (typeof engine === \"string\") {\n    highlighter = await getHighlighter(engine, {\n      langs: [],\n      themes: themesToLoad\n    });\n  } else {\n    highlighter = await getHighlighter(\"custom\", {\n      engine,\n      langs: [],\n      themes: themesToLoad\n    });\n    if (process.env.NODE_ENV === \"development\") {\n      console.warn(\n        \"[Fumadocs `highlight()`] Avoid passing `engine` directly. For custom engines, use `shiki` directly instead.\"\n      );\n    }\n  }\n  try {\n    await highlighter.loadLanguage(lang);\n  } catch {\n    lang = fallbackLanguage ?? \"text\";\n    await highlighter.loadLanguage(lang);\n  }\n  return highlighter.codeToHast(code, {\n    lang,\n    ...rest,\n    ...themes,\n    defaultColor: \"themes\" in themes ? false : void 0\n  });\n}\nfunction _renderHighlight(hast, options) {\n  return toJsxRuntime(hast, {\n    jsx,\n    jsxs,\n    development: false,\n    components: options?.components,\n    Fragment\n  });\n}\nasync function getHighlighter(engineType, options) {\n  const { createHighlighter } = await import(\"shiki\");\n  let highlighter = highlighters.get(engineType);\n  if (!highlighter) {\n    let engine;\n    if (engineType === \"js\") {\n      engine = import(\"shiki/engine/javascript\").then(\n        (res) => res.createJavaScriptRegexEngine()\n      );\n    } else if (engineType === \"oniguruma\" || !options.engine) {\n      engine = import(\"shiki/engine/oniguruma\").then(\n        (res) => res.createOnigurumaEngine(import(\"shiki/wasm\"))\n      );\n    } else {\n      engine = options.engine;\n    }\n    highlighter = createHighlighter({\n      ...options,\n      engine\n    });\n    highlighters.set(engineType, highlighter);\n    return highlighter;\n  }\n  return highlighter.then(async (instance) => {\n    await Promise.all([\n      // @ts-expect-error unknown\n      instance.loadLanguage(...options.langs),\n      // @ts-expect-error unknown\n      instance.loadTheme(...options.themes)\n    ]);\n    return instance;\n  });\n}\nasync function highlight(code, options) {\n  return _renderHighlight(await _highlight(code, options), options);\n}\n\nexport {\n  defaultThemes,\n  getHighlighter,\n  highlight\n};\n"],"names":[],"mappings":"AAAA,yBAAyB;;;;;;;;;AACzB;AACA;AACA;;;;AACA,IAAI,gBAAgB;IAClB,OAAO;IACP,MAAM;AACR;AACA,IAAI,eAAe,aAAa,GAAG,IAAI;AACvC,eAAe,WAAW,IAAI,EAAE,OAAO;IACrC,MAAM,EACJ,MAAM,WAAW,EACjB,gBAAgB,EAChB,YAAY,CAAC,EACb,SAAS,WAAW,EACpB,GAAG,MACJ,GAAG;IACJ,IAAI,OAAO;IACX,IAAI;IACJ,IAAI;IACJ,IAAI,WAAW,WAAW,QAAQ,KAAK,EAAE;QACvC,SAAS;YAAE,OAAO,QAAQ,KAAK;QAAC;QAChC,eAAe;YAAC,OAAO,KAAK;SAAC;IAC/B,OAAO;QACL,SAAS;YACP,QAAQ,YAAY,WAAW,QAAQ,MAAM,GAAG,QAAQ,MAAM,GAAG;QACnE;QACA,eAAe,OAAO,MAAM,CAAC,OAAO,MAAM,EAAE,MAAM,CAAC,CAAC,IAAM,MAAM,KAAK;IACvE;IACA,IAAI;IACJ,IAAI,OAAO,WAAW,UAAU;QAC9B,cAAc,MAAM,eAAe,QAAQ;YACzC,OAAO,EAAE;YACT,QAAQ;QACV;IACF,OAAO;QACL,cAAc,MAAM,eAAe,UAAU;YAC3C;YACA,OAAO,EAAE;YACT,QAAQ;QACV;QACA,wCAA4C;YAC1C,QAAQ,IAAI,CACV;QAEJ;IACF;IACA,IAAI;QACF,MAAM,YAAY,YAAY,CAAC;IACjC,EAAE,OAAM;QACN,OAAO,oBAAoB;QAC3B,MAAM,YAAY,YAAY,CAAC;IACjC;IACA,OAAO,YAAY,UAAU,CAAC,MAAM;QAClC;QACA,GAAG,IAAI;QACP,GAAG,MAAM;QACT,cAAc,YAAY,SAAS,QAAQ,KAAK;IAClD;AACF;AACA,SAAS,iBAAiB,IAAI,EAAE,OAAO;IACrC,OAAO,IAAA,qQAAY,EAAC,MAAM;QACxB,KAAA,gbAAG;QACH,MAAA,ibAAI;QACJ,aAAa;QACb,YAAY,SAAS;QACrB,UAAA,maAAQ;IACV;AACF;AACA,eAAe,eAAe,UAAU,EAAE,OAAO;IAC/C,MAAM,EAAE,iBAAiB,EAAE,GAAG;IAC9B,IAAI,cAAc,aAAa,GAAG,CAAC;IACnC,IAAI,CAAC,aAAa;QAChB,IAAI;QACJ,IAAI,eAAe,MAAM;YACvB,SAAS,8HAAkC,IAAI,CAC7C,CAAC,MAAQ,IAAI,2BAA2B;QAE5C,OAAO,IAAI,eAAe,eAAe,CAAC,QAAQ,MAAM,EAAE;YACxD,SAAS,4HAAiC,IAAI,CAC5C,CAAC,MAAQ,IAAI,qBAAqB;QAEtC,OAAO;YACL,SAAS,QAAQ,MAAM;QACzB;QACA,cAAc,kBAAkB;YAC9B,GAAG,OAAO;YACV;QACF;QACA,aAAa,GAAG,CAAC,YAAY;QAC7B,OAAO;IACT;IACA,OAAO,YAAY,IAAI,CAAC,OAAO;QAC7B,MAAM,QAAQ,GAAG,CAAC;YAChB,2BAA2B;YAC3B,SAAS,YAAY,IAAI,QAAQ,KAAK;YACtC,2BAA2B;YAC3B,SAAS,SAAS,IAAI,QAAQ,MAAM;SACrC;QACD,OAAO;IACT;AACF;AACA,eAAe,UAAU,IAAI,EAAE,OAAO;IACpC,OAAO,iBAAiB,MAAM,WAAW,MAAM,UAAU;AAC3D","debugId":null}},
    {"offset": {"line": 117, "column": 0}, "map": {"version":3,"sources":["file:///home/tom/www2026/8_server/vercel/fumadocs/packages/core/dist/highlight/client.js"],"sourcesContent":["\"use client\";\nimport {\n  highlight\n} from \"../chunk-NJLFLPV4.js\";\nimport \"../chunk-JSBRDJBE.js\";\n\n// src/highlight/client.tsx\nimport {\n  use,\n  useId,\n  useMemo\n} from \"react\";\nvar promises = {};\nfunction useShiki(code, options, deps) {\n  const id = useId();\n  const key = useMemo(() => {\n    const state = deps ? JSON.stringify(deps) : `${options.lang}:${code}`;\n    return `${id}:${state}`;\n  }, [code, deps, id, options.lang]);\n  return use(\n    promises[key] ??= highlight(code, {\n      ...options,\n      engine: options.engine ?? \"js\"\n    })\n  );\n}\nexport {\n  useShiki\n};\n"],"names":[],"mappings":";;;;AACA;AAGA;AAEA,2BAA2B;AAC3B;AAPA;;;;AAYA,IAAI,WAAW,CAAC;AAChB,SAAS,SAAS,IAAI,EAAE,OAAO,EAAE,IAAI;IACnC,MAAM,KAAK,IAAA,gaAAK;IAChB,MAAM,MAAM,IAAA,kaAAO,EAAC;QAClB,MAAM,QAAQ,OAAO,KAAK,SAAS,CAAC,QAAQ,GAAG,QAAQ,IAAI,CAAC,CAAC,EAAE,MAAM;QACrE,OAAO,GAAG,GAAG,CAAC,EAAE,OAAO;IACzB,GAAG;QAAC;QAAM;QAAM;QAAI,QAAQ,IAAI;KAAC;IACjC,OAAO,IAAA,8ZAAG,EACR,QAAQ,CAAC,IAAI,KAAK,IAAA,0JAAS,EAAC,MAAM;QAChC,GAAG,OAAO;QACV,QAAQ,QAAQ,MAAM,IAAI;IAC5B;AAEJ","debugId":null}},
    {"offset": {"line": 151, "column": 0}, "map": {"version":3,"sources":["file:///home/tom/www2026/8_server/vercel/fumadocs/packages/ui/dist/components/dynamic-codeblock.js"],"sourcesContent":["'use client';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { CodeBlock, Pre } from '../components/codeblock.js';\nimport { useShiki } from 'fumadocs-core/highlight/client';\nimport { cn } from '../utils/cn.js';\nimport { createContext, Suspense, use, } from 'react';\nconst PropsContext = createContext(undefined);\nfunction DefaultPre(props) {\n    const extraProps = use(PropsContext);\n    return (_jsx(CodeBlock, { ...props, ...extraProps, className: cn('my-0', props.className, extraProps?.className), children: _jsx(Pre, { children: props.children }) }));\n}\nexport function DynamicCodeBlock({ lang, code, codeblock, options, wrapInSuspense = true, }) {\n    const shikiOptions = {\n        lang,\n        ...options,\n        components: {\n            pre: DefaultPre,\n            ...options?.components,\n        },\n    };\n    let children = _jsx(Internal, { code: code, options: shikiOptions });\n    if (wrapInSuspense)\n        children = (_jsx(Suspense, { fallback: _jsx(Placeholder, { code: code, components: shikiOptions.components }), children: children }));\n    return _jsx(PropsContext, { value: codeblock, children: children });\n}\nfunction Placeholder({ code, components = {}, }) {\n    const { pre: Pre = 'pre', code: Code = 'code' } = components;\n    return (_jsx(Pre, { children: _jsx(Code, { children: code.split('\\n').map((line, i) => (_jsx(\"span\", { className: \"line\", children: line }, i))) }) }));\n}\nfunction Internal({ code, options, }) {\n    return useShiki(code, options);\n}\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA;AAAA;AACA;AALA;;;;;;AAMA,MAAM,6BAAe,IAAA,waAAa,EAAC;AACnC,SAAS,WAAW,KAAK;IACrB,MAAM,aAAa,IAAA,8ZAAG,EAAC;IACvB,OAAQ,IAAA,gbAAI,EAAC,8JAAS,EAAE;QAAE,GAAG,KAAK;QAAE,GAAG,UAAU;QAAE,WAAW,IAAA,gQAAE,EAAC,QAAQ,MAAM,SAAS,EAAE,YAAY;QAAY,UAAU,IAAA,gbAAI,EAAC,wJAAG,EAAE;YAAE,UAAU,MAAM,QAAQ;QAAC;IAAG;AACxK;AACO,SAAS,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,iBAAiB,IAAI,EAAG;IACvF,MAAM,eAAe;QACjB;QACA,GAAG,OAAO;QACV,YAAY;YACR,KAAK;YACL,GAAG,SAAS,UAAU;QAC1B;IACJ;IACA,IAAI,WAAW,IAAA,gbAAI,EAAC,UAAU;QAAE,MAAM;QAAM,SAAS;IAAa;IAClE,IAAI,gBACA,WAAY,IAAA,gbAAI,EAAC,maAAQ,EAAE;QAAE,UAAU,IAAA,gbAAI,EAAC,aAAa;YAAE,MAAM;YAAM,YAAY,aAAa,UAAU;QAAC;QAAI,UAAU;IAAS;IACtI,OAAO,IAAA,gbAAI,EAAC,cAAc;QAAE,OAAO;QAAW,UAAU;IAAS;AACrE;AACA,SAAS,YAAY,EAAE,IAAI,EAAE,aAAa,CAAC,CAAC,EAAG;IAC3C,MAAM,EAAE,KAAK,MAAM,KAAK,EAAE,MAAM,OAAO,MAAM,EAAE,GAAG;IAClD,OAAQ,IAAA,gbAAI,EAAC,KAAK;QAAE,UAAU,IAAA,gbAAI,EAAC,MAAM;YAAE,UAAU,KAAK,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,IAAO,IAAA,gbAAI,EAAC,QAAQ;oBAAE,WAAW;oBAAQ,UAAU;gBAAK,GAAG;QAAK;IAAG;AACxJ;AACA,SAAS,SAAS,EAAE,IAAI,EAAE,OAAO,EAAG;IAChC,OAAO,IAAA,2JAAQ,EAAC,MAAM;AAC1B","debugId":null}},
    {"offset": {"line": 234, "column": 0}, "map": {"version":3,"sources":["file:///home/tom/www2026/8_server/vercel/fumadocs/src/mydoc/components/preview/dynamic-codeblock.tsx"],"sourcesContent":["'use client';\nimport { DynamicCodeBlock } from 'fumadocs-ui/components/dynamic-codeblock';\nimport { useState } from 'react';\nimport { bundledLanguages } from 'shiki';\n\nexport default function Example() {\n  const [lang, setLang] = useState('js');\n  const [code, setCode] = useState('console.log(\"This is pre-rendered\")');\n\n  return (\n    <div className=\"prose flex flex-col gap-4 rounded-lg bg-fd-background p-4\">\n      <div className=\"not-prose flex flex-col rounded-lg bg-fd-secondary text-fd-secondary-foreground\">\n        <select\n          value={lang}\n          onChange={(e) => setLang(e.target.value)}\n          className=\"w-fit bg-transparent px-4 py-2 text-sm focus-visible:outline-none\"\n        >\n          {Object.keys(bundledLanguages).map((lang) => (\n            <option value={lang} key={lang}>\n              {lang}\n            </option>\n          ))}\n        </select>\n        <textarea\n          value={code}\n          onChange={(e) => setCode(e.target.value)}\n          className=\"bg-transparent px-4 py-2 text-sm focus-visible:outline-none\"\n        />\n      </div>\n      <DynamicCodeBlock\n        lang={lang}\n        code={code}\n        options={{\n          themes: {\n            light: 'catppuccin-latte',\n            dark: 'catppuccin-mocha',\n          },\n        }}\n      />\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AACA;AACA;AACA;;;;;AAHA;;;;;AAKe,SAAS;IACtB,MAAM,CAAC,MAAM,QAAQ,GAAG,IAAA,maAAQ,EAAC;IACjC,MAAM,CAAC,MAAM,QAAQ,GAAG,IAAA,maAAQ,EAAC;IAEjC,qBACE,gcAAC;QAAI,WAAU;;0BACb,gcAAC;gBAAI,WAAU;;kCACb,gcAAC;wBACC,OAAO;wBACP,UAAU,CAAC,IAAM,QAAQ,EAAE,MAAM,CAAC,KAAK;wBACvC,WAAU;kCAET,OAAO,IAAI,CAAC,8HAAgB,EAAE,GAAG,CAAC,CAAC,qBAClC,gcAAC;gCAAO,OAAO;0CACZ;+BADuB;;;;;;;;;;kCAK9B,gcAAC;wBACC,OAAO;wBACP,UAAU,CAAC,IAAM,QAAQ,EAAE,MAAM,CAAC,KAAK;wBACvC,WAAU;;;;;;;;;;;;0BAGd,gcAAC,gLAAgB;gBACf,MAAM;gBACN,MAAM;gBACN,SAAS;oBACP,QAAQ;wBACN,OAAO;wBACP,MAAM;oBACR;gBACF;;;;;;;;;;;;AAIR","debugId":null}}]
}