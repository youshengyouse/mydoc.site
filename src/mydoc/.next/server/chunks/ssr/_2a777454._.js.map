{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///home/tom/www2026/8_server/vercel/mydoc.site/packages/openapi/dist/ui/components/dialog.js"],"sourcesContent":["'use client';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport * as React from 'react';\nimport * as DialogPrimitive from '@radix-ui/react-dialog';\nimport { X } from '../../icons.js';\nimport { cn } from 'fumadocs-ui/utils/cn';\nimport { buttonVariants } from 'fumadocs-ui/components/ui/button';\nconst Dialog = DialogPrimitive.Root;\nconst DialogTrigger = DialogPrimitive.Trigger;\nconst DialogPortal = DialogPrimitive.Portal;\nconst DialogClose = DialogPrimitive.Close;\nconst DialogOverlay = React.forwardRef(({ className, ...props }, ref) => (_jsx(DialogPrimitive.Overlay, { ref: ref, className: cn('fixed inset-0 z-50 bg-black/30 backdrop-blur-sm data-[state=open]:animate-fd-fade-in data-[state=closed]:animate-fd-fade-out', className), ...props })));\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName;\nconst DialogContent = React.forwardRef(({ className, children, ...props }, ref) => (_jsxs(DialogPortal, { children: [_jsx(DialogOverlay, {}), _jsxs(DialogPrimitive.Content, { ref: ref, className: cn('fixed left-1/2 top-1/2 z-50 flex flex-col gap-4 w-full max-w-lg -translate-x-1/2 -translate-y-1/2 border bg-fd-popover p-4 shadow-lg rounded-xl duration-200 data-[state=open]:animate-fd-dialog-in data-[state=closed]:animate-fd-dialog-out focus-visible:outline-none', className), ...props, children: [children, _jsx(DialogPrimitive.Close, { \"aria-label\": \"Close\", className: cn(buttonVariants({ size: 'icon-sm', color: 'ghost' }), 'absolute end-2 top-2 text-fd-muted-foreground/70'), children: _jsx(X, {}) })] })] })));\nDialogContent.displayName = DialogPrimitive.Content.displayName;\nconst DialogHeader = ({ className, ...props }) => (_jsx(\"div\", { className: cn('flex flex-col gap-1.5 text-center sm:text-start', className), ...props }));\nDialogHeader.displayName = 'DialogHeader';\nconst DialogFooter = ({ className, ...props }) => (_jsx(\"div\", { className: cn('flex flex-col-reverse sm:flex-row sm:justify-end sm:gap-2', className), ...props }));\nDialogFooter.displayName = 'DialogFooter';\nconst DialogTitle = React.forwardRef(({ className, ...props }, ref) => (_jsx(DialogPrimitive.Title, { ref: ref, className: cn('text-lg font-semibold leading-none tracking-tight', className), ...props })));\nDialogTitle.displayName = DialogPrimitive.Title.displayName;\nconst DialogDescription = React.forwardRef(({ className, ...props }, ref) => (_jsx(DialogPrimitive.Description, { ref: ref, className: cn('text-sm text-fd-muted-foreground', className), ...props })));\nDialogDescription.displayName = DialogPrimitive.Description.displayName;\nexport { Dialog, DialogPortal, DialogOverlay, DialogClose, DialogTrigger, DialogContent, DialogHeader, DialogFooter, DialogTitle, DialogDescription, };\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AANA;;;;;;;AAOA,MAAM,SAAS,iYAAoB;AACnC,MAAM,gBAAgB,oYAAuB;AAC7C,MAAM,eAAe,mYAAsB;AAC3C,MAAM,cAAc,kYAAqB;AACzC,MAAM,8BAAgB,qaAAgB,CAAC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,MAAS,IAAA,gbAAI,EAAC,oYAAuB,EAAE;QAAE,KAAK;QAAK,WAAW,IAAA,gQAAE,EAAC,gIAAgI;QAAY,GAAG,KAAK;IAAC;AACvR,cAAc,WAAW,GAAG,oYAAuB,CAAC,WAAW;AAC/D,MAAM,8BAAgB,qaAAgB,CAAC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,MAAS,IAAA,ibAAK,EAAC,cAAc;QAAE,UAAU;YAAC,IAAA,gbAAI,EAAC,eAAe,CAAC;YAAI,IAAA,ibAAK,EAAC,oYAAuB,EAAE;gBAAE,KAAK;gBAAK,WAAW,IAAA,gQAAE,EAAC,4QAA4Q;gBAAY,GAAG,KAAK;gBAAE,UAAU;oBAAC;oBAAU,IAAA,gbAAI,EAAC,kYAAqB,EAAE;wBAAE,cAAc;wBAAS,WAAW,IAAA,gQAAE,EAAC,IAAA,sKAAc,EAAC;4BAAE,MAAM;4BAAW,OAAO;wBAAQ,IAAI;wBAAqD,UAAU,IAAA,gbAAI,EAAC,oIAAC,EAAE,CAAC;oBAAG;iBAAG;YAAC;SAAG;IAAC;AACzsB,cAAc,WAAW,GAAG,oYAAuB,CAAC,WAAW;AAC/D,MAAM,eAAe,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,GAAM,IAAA,gbAAI,EAAC,OAAO;QAAE,WAAW,IAAA,gQAAE,EAAC,mDAAmD;QAAY,GAAG,KAAK;IAAC;AACvJ,aAAa,WAAW,GAAG;AAC3B,MAAM,eAAe,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,GAAM,IAAA,gbAAI,EAAC,OAAO;QAAE,WAAW,IAAA,gQAAE,EAAC,6DAA6D;QAAY,GAAG,KAAK;IAAC;AACjK,aAAa,WAAW,GAAG;AAC3B,MAAM,4BAAc,qaAAgB,CAAC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,MAAS,IAAA,gbAAI,EAAC,kYAAqB,EAAE;QAAE,KAAK;QAAK,WAAW,IAAA,gQAAE,EAAC,qDAAqD;QAAY,GAAG,KAAK;IAAC;AACxM,YAAY,WAAW,GAAG,kYAAqB,CAAC,WAAW;AAC3D,MAAM,kCAAoB,qaAAgB,CAAC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,MAAS,IAAA,gbAAI,EAAC,wYAA2B,EAAE;QAAE,KAAK;QAAK,WAAW,IAAA,gQAAE,EAAC,oCAAoC;QAAY,GAAG,KAAK;IAAC;AACnM,kBAAkB,WAAW,GAAG,wYAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 100, "column": 0}, "map": {"version":3,"sources":["file:///home/tom/www2026/8_server/vercel/mydoc.site/packages/openapi/dist/ui/server-select.js"],"sourcesContent":["'use client';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useApiContext, useServerSelectContext } from '../ui/contexts/api.js';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue, } from '../ui/components/select.js';\nimport { Input, labelVariants } from '../ui/components/input.js';\nimport { useEffect, useState } from 'react';\nimport { cn } from 'fumadocs-ui/utils/cn';\nimport { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle, DialogTrigger, } from '../ui/components/dialog.js';\nimport { resolveServerUrl, withBase } from '../utils/url.js';\nimport { FormProvider, useController, useForm } from 'react-hook-form';\nimport { useEffectEvent } from 'fumadocs-core/utils/use-effect-event';\nexport default function ServerSelect(props) {\n    const { servers } = useApiContext();\n    const { server, setServer, setServerVariables } = useServerSelectContext();\n    const [open, setOpen] = useState(false);\n    const [isMounted, setIsMounted] = useState(false);\n    useEffect(() => {\n        setIsMounted(true);\n    }, []);\n    if (servers.length <= 0)\n        return;\n    const serverSchema = server\n        ? servers.find((obj) => obj.url === server.url)\n        : null;\n    return (_jsxs(Dialog, { open: open, onOpenChange: setOpen, children: [_jsx(DialogTrigger, { className: \"text-xs p-3 py-2 bg-fd-muted text-fd-muted-foreground transition-colors truncate hover:bg-fd-accent hover:text-fd-accent-foreground focus-visible:outline-none\", children: isMounted\n                    ? withBase(server ? resolveServerUrl(server.url, server.variables) : '/', window.location.origin)\n                    : 'loading...' }), _jsxs(DialogContent, { ...props, children: [_jsxs(DialogHeader, { children: [_jsx(DialogTitle, { children: \"Server URL\" }), _jsx(DialogDescription, { children: \"The base URL of your API endpoint.\" })] }), _jsxs(Select, { value: server?.url, onValueChange: setServer, children: [_jsx(SelectTrigger, { children: _jsx(SelectValue, {}) }), _jsx(SelectContent, { children: servers.map((item) => (_jsxs(SelectItem, { value: item.url, children: [_jsx(\"code\", { className: \"text-[13px]\", children: item.url }), _jsx(\"p\", { className: \"text-fd-muted-foreground\", children: item.description })] }, item.url))) })] }), server?.variables && serverSchema?.variables && (_jsx(ServerSelectContent, { defaultValues: server.variables, schema: serverSchema.variables, onChange: setServerVariables }, server.url))] })] }));\n}\nfunction ServerSelectContent({ defaultValues, onChange, schema, }) {\n    const form = useForm({\n        defaultValues,\n    });\n    const onChangeDebounced = useEffectEvent(onChange);\n    useEffect(() => {\n        let timer = null;\n        return form.subscribe({\n            formState: {\n                values: true,\n            },\n            callback({ values }) {\n                if (timer !== null)\n                    window.clearTimeout(timer);\n                timer = window.setTimeout(() => onChangeDebounced(values), 500);\n            },\n        });\n        // eslint-disable-next-line react-hooks/exhaustive-deps -- `form` shouldn't be included\n    }, []);\n    return (_jsx(FormProvider, { ...form, children: _jsx(\"div\", { className: \"flex flex-col gap-4\", children: Object.entries(schema).map(([key, variable]) => {\n                return (_jsxs(\"fieldset\", { className: \"flex flex-col gap-1\", children: [_jsx(\"label\", { className: cn(labelVariants()), htmlFor: key, children: key }), _jsx(\"p\", { className: \"text-xs text-fd-muted-foreground empty:hidden\", children: variable.description }), _jsx(Field, { fieldName: key, variable: variable })] }, key));\n            }) }) }));\n}\nfunction Field({ fieldName, variable, }) {\n    const { field } = useController({\n        name: fieldName,\n    });\n    if (variable.enum) {\n        return (_jsxs(Select, { value: field.value, onValueChange: field.onChange, children: [_jsx(SelectTrigger, { id: fieldName, ref: field.ref, children: _jsx(SelectValue, {}) }), _jsx(SelectContent, { children: variable.enum.map((value) => (_jsx(SelectItem, { value: value, children: value }, value))) })] }));\n    }\n    return _jsx(Input, { id: fieldName, ...field });\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 268, "column": 0}, "map": {"version":3,"sources":["file:///home/tom/www2026/8_server/vercel/mydoc.site/node_modules/.pnpm/%40radix-ui%2Breact-dialog%401.1.15_%40types%2Breact-dom%4019.1.7_%40types%2Breact%4019.1.10__%40types%2Breact%4019.1_rtjnuukicf5iq35g2i42o75jie/node_modules/%40radix-ui/react-dialog/src/dialog.tsx"],"sourcesContent":["import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createContext, createContextScope } from '@radix-ui/react-context';\nimport { useId } from '@radix-ui/react-id';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { DismissableLayer } from '@radix-ui/react-dismissable-layer';\nimport { FocusScope } from '@radix-ui/react-focus-scope';\nimport { Portal as PortalPrimitive } from '@radix-ui/react-portal';\nimport { Presence } from '@radix-ui/react-presence';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { useFocusGuards } from '@radix-ui/react-focus-guards';\nimport { RemoveScroll } from 'react-remove-scroll';\nimport { hideOthers } from 'aria-hidden';\nimport { createSlot } from '@radix-ui/react-slot';\n\nimport type { Scope } from '@radix-ui/react-context';\n\n/* -------------------------------------------------------------------------------------------------\n * Dialog\n * -----------------------------------------------------------------------------------------------*/\n\nconst DIALOG_NAME = 'Dialog';\n\ntype ScopedProps<P> = P & { __scopeDialog?: Scope };\nconst [createDialogContext, createDialogScope] = createContextScope(DIALOG_NAME);\n\ntype DialogContextValue = {\n  triggerRef: React.RefObject<HTMLButtonElement | null>;\n  contentRef: React.RefObject<DialogContentElement | null>;\n  contentId: string;\n  titleId: string;\n  descriptionId: string;\n  open: boolean;\n  onOpenChange(open: boolean): void;\n  onOpenToggle(): void;\n  modal: boolean;\n};\n\nconst [DialogProvider, useDialogContext] = createDialogContext<DialogContextValue>(DIALOG_NAME);\n\ninterface DialogProps {\n  children?: React.ReactNode;\n  open?: boolean;\n  defaultOpen?: boolean;\n  onOpenChange?(open: boolean): void;\n  modal?: boolean;\n}\n\nconst Dialog: React.FC<DialogProps> = (props: ScopedProps<DialogProps>) => {\n  const {\n    __scopeDialog,\n    children,\n    open: openProp,\n    defaultOpen,\n    onOpenChange,\n    modal = true,\n  } = props;\n  const triggerRef = React.useRef<HTMLButtonElement>(null);\n  const contentRef = React.useRef<DialogContentElement>(null);\n  const [open, setOpen] = useControllableState({\n    prop: openProp,\n    defaultProp: defaultOpen ?? false,\n    onChange: onOpenChange,\n    caller: DIALOG_NAME,\n  });\n\n  return (\n    <DialogProvider\n      scope={__scopeDialog}\n      triggerRef={triggerRef}\n      contentRef={contentRef}\n      contentId={useId()}\n      titleId={useId()}\n      descriptionId={useId()}\n      open={open}\n      onOpenChange={setOpen}\n      onOpenToggle={React.useCallback(() => setOpen((prevOpen) => !prevOpen), [setOpen])}\n      modal={modal}\n    >\n      {children}\n    </DialogProvider>\n  );\n};\n\nDialog.displayName = DIALOG_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DialogTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_NAME = 'DialogTrigger';\n\ntype DialogTriggerElement = React.ComponentRef<typeof Primitive.button>;\ntype PrimitiveButtonProps = React.ComponentPropsWithoutRef<typeof Primitive.button>;\ninterface DialogTriggerProps extends PrimitiveButtonProps {}\n\nconst DialogTrigger = React.forwardRef<DialogTriggerElement, DialogTriggerProps>(\n  (props: ScopedProps<DialogTriggerProps>, forwardedRef) => {\n    const { __scopeDialog, ...triggerProps } = props;\n    const context = useDialogContext(TRIGGER_NAME, __scopeDialog);\n    const composedTriggerRef = useComposedRefs(forwardedRef, context.triggerRef);\n    return (\n      <Primitive.button\n        type=\"button\"\n        aria-haspopup=\"dialog\"\n        aria-expanded={context.open}\n        aria-controls={context.contentId}\n        data-state={getState(context.open)}\n        {...triggerProps}\n        ref={composedTriggerRef}\n        onClick={composeEventHandlers(props.onClick, context.onOpenToggle)}\n      />\n    );\n  }\n);\n\nDialogTrigger.displayName = TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DialogPortal\n * -----------------------------------------------------------------------------------------------*/\n\nconst PORTAL_NAME = 'DialogPortal';\n\ntype PortalContextValue = { forceMount?: true };\nconst [PortalProvider, usePortalContext] = createDialogContext<PortalContextValue>(PORTAL_NAME, {\n  forceMount: undefined,\n});\n\ntype PortalProps = React.ComponentPropsWithoutRef<typeof PortalPrimitive>;\ninterface DialogPortalProps {\n  children?: React.ReactNode;\n  /**\n   * Specify a container element to portal the content into.\n   */\n  container?: PortalProps['container'];\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst DialogPortal: React.FC<DialogPortalProps> = (props: ScopedProps<DialogPortalProps>) => {\n  const { __scopeDialog, forceMount, children, container } = props;\n  const context = useDialogContext(PORTAL_NAME, __scopeDialog);\n  return (\n    <PortalProvider scope={__scopeDialog} forceMount={forceMount}>\n      {React.Children.map(children, (child) => (\n        <Presence present={forceMount || context.open}>\n          <PortalPrimitive asChild container={container}>\n            {child}\n          </PortalPrimitive>\n        </Presence>\n      ))}\n    </PortalProvider>\n  );\n};\n\nDialogPortal.displayName = PORTAL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DialogOverlay\n * -----------------------------------------------------------------------------------------------*/\n\nconst OVERLAY_NAME = 'DialogOverlay';\n\ntype DialogOverlayElement = DialogOverlayImplElement;\ninterface DialogOverlayProps extends DialogOverlayImplProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst DialogOverlay = React.forwardRef<DialogOverlayElement, DialogOverlayProps>(\n  (props: ScopedProps<DialogOverlayProps>, forwardedRef) => {\n    const portalContext = usePortalContext(OVERLAY_NAME, props.__scopeDialog);\n    const { forceMount = portalContext.forceMount, ...overlayProps } = props;\n    const context = useDialogContext(OVERLAY_NAME, props.__scopeDialog);\n    return context.modal ? (\n      <Presence present={forceMount || context.open}>\n        <DialogOverlayImpl {...overlayProps} ref={forwardedRef} />\n      </Presence>\n    ) : null;\n  }\n);\n\nDialogOverlay.displayName = OVERLAY_NAME;\n\ntype DialogOverlayImplElement = React.ComponentRef<typeof Primitive.div>;\ntype PrimitiveDivProps = React.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface DialogOverlayImplProps extends PrimitiveDivProps {}\n\nconst Slot = createSlot('DialogOverlay.RemoveScroll');\n\nconst DialogOverlayImpl = React.forwardRef<DialogOverlayImplElement, DialogOverlayImplProps>(\n  (props: ScopedProps<DialogOverlayImplProps>, forwardedRef) => {\n    const { __scopeDialog, ...overlayProps } = props;\n    const context = useDialogContext(OVERLAY_NAME, __scopeDialog);\n    return (\n      // Make sure `Content` is scrollable even when it doesn't live inside `RemoveScroll`\n      // ie. when `Overlay` and `Content` are siblings\n      <RemoveScroll as={Slot} allowPinchZoom shards={[context.contentRef]}>\n        <Primitive.div\n          data-state={getState(context.open)}\n          {...overlayProps}\n          ref={forwardedRef}\n          // We re-enable pointer-events prevented by `Dialog.Content` to allow scrolling the overlay.\n          style={{ pointerEvents: 'auto', ...overlayProps.style }}\n        />\n      </RemoveScroll>\n    );\n  }\n);\n\n/* -------------------------------------------------------------------------------------------------\n * DialogContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'DialogContent';\n\ntype DialogContentElement = DialogContentTypeElement;\ninterface DialogContentProps extends DialogContentTypeProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst DialogContent = React.forwardRef<DialogContentElement, DialogContentProps>(\n  (props: ScopedProps<DialogContentProps>, forwardedRef) => {\n    const portalContext = usePortalContext(CONTENT_NAME, props.__scopeDialog);\n    const { forceMount = portalContext.forceMount, ...contentProps } = props;\n    const context = useDialogContext(CONTENT_NAME, props.__scopeDialog);\n    return (\n      <Presence present={forceMount || context.open}>\n        {context.modal ? (\n          <DialogContentModal {...contentProps} ref={forwardedRef} />\n        ) : (\n          <DialogContentNonModal {...contentProps} ref={forwardedRef} />\n        )}\n      </Presence>\n    );\n  }\n);\n\nDialogContent.displayName = CONTENT_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype DialogContentTypeElement = DialogContentImplElement;\ninterface DialogContentTypeProps\n  extends Omit<DialogContentImplProps, 'trapFocus' | 'disableOutsidePointerEvents'> {}\n\nconst DialogContentModal = React.forwardRef<DialogContentTypeElement, DialogContentTypeProps>(\n  (props: ScopedProps<DialogContentTypeProps>, forwardedRef) => {\n    const context = useDialogContext(CONTENT_NAME, props.__scopeDialog);\n    const contentRef = React.useRef<HTMLDivElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, context.contentRef, contentRef);\n\n    // aria-hide everything except the content (better supported equivalent to setting aria-modal)\n    React.useEffect(() => {\n      const content = contentRef.current;\n      if (content) return hideOthers(content);\n    }, []);\n\n    return (\n      <DialogContentImpl\n        {...props}\n        ref={composedRefs}\n        // we make sure focus isn't trapped once `DialogContent` has been closed\n        // (closed !== unmounted when animating out)\n        trapFocus={context.open}\n        disableOutsidePointerEvents\n        onCloseAutoFocus={composeEventHandlers(props.onCloseAutoFocus, (event) => {\n          event.preventDefault();\n          context.triggerRef.current?.focus();\n        })}\n        onPointerDownOutside={composeEventHandlers(props.onPointerDownOutside, (event) => {\n          const originalEvent = event.detail.originalEvent;\n          const ctrlLeftClick = originalEvent.button === 0 && originalEvent.ctrlKey === true;\n          const isRightClick = originalEvent.button === 2 || ctrlLeftClick;\n\n          // If the event is a right-click, we shouldn't close because\n          // it is effectively as if we right-clicked the `Overlay`.\n          if (isRightClick) event.preventDefault();\n        })}\n        // When focus is trapped, a `focusout` event may still happen.\n        // We make sure we don't trigger our `onDismiss` in such case.\n        onFocusOutside={composeEventHandlers(props.onFocusOutside, (event) =>\n          event.preventDefault()\n        )}\n      />\n    );\n  }\n);\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst DialogContentNonModal = React.forwardRef<DialogContentTypeElement, DialogContentTypeProps>(\n  (props: ScopedProps<DialogContentTypeProps>, forwardedRef) => {\n    const context = useDialogContext(CONTENT_NAME, props.__scopeDialog);\n    const hasInteractedOutsideRef = React.useRef(false);\n    const hasPointerDownOutsideRef = React.useRef(false);\n\n    return (\n      <DialogContentImpl\n        {...props}\n        ref={forwardedRef}\n        trapFocus={false}\n        disableOutsidePointerEvents={false}\n        onCloseAutoFocus={(event) => {\n          props.onCloseAutoFocus?.(event);\n\n          if (!event.defaultPrevented) {\n            if (!hasInteractedOutsideRef.current) context.triggerRef.current?.focus();\n            // Always prevent auto focus because we either focus manually or want user agent focus\n            event.preventDefault();\n          }\n\n          hasInteractedOutsideRef.current = false;\n          hasPointerDownOutsideRef.current = false;\n        }}\n        onInteractOutside={(event) => {\n          props.onInteractOutside?.(event);\n\n          if (!event.defaultPrevented) {\n            hasInteractedOutsideRef.current = true;\n            if (event.detail.originalEvent.type === 'pointerdown') {\n              hasPointerDownOutsideRef.current = true;\n            }\n          }\n\n          // Prevent dismissing when clicking the trigger.\n          // As the trigger is already setup to close, without doing so would\n          // cause it to close and immediately open.\n          const target = event.target as HTMLElement;\n          const targetIsTrigger = context.triggerRef.current?.contains(target);\n          if (targetIsTrigger) event.preventDefault();\n\n          // On Safari if the trigger is inside a container with tabIndex={0}, when clicked\n          // we will get the pointer down outside event on the trigger, but then a subsequent\n          // focus outside event on the container, we ignore any focus outside event when we've\n          // already had a pointer down outside event.\n          if (event.detail.originalEvent.type === 'focusin' && hasPointerDownOutsideRef.current) {\n            event.preventDefault();\n          }\n        }}\n      />\n    );\n  }\n);\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype DialogContentImplElement = React.ComponentRef<typeof DismissableLayer>;\ntype DismissableLayerProps = React.ComponentPropsWithoutRef<typeof DismissableLayer>;\ntype FocusScopeProps = React.ComponentPropsWithoutRef<typeof FocusScope>;\ninterface DialogContentImplProps extends Omit<DismissableLayerProps, 'onDismiss'> {\n  /**\n   * When `true`, focus cannot escape the `Content` via keyboard,\n   * pointer, or a programmatic focus.\n   * @defaultValue false\n   */\n  trapFocus?: FocusScopeProps['trapped'];\n\n  /**\n   * Event handler called when auto-focusing on open.\n   * Can be prevented.\n   */\n  onOpenAutoFocus?: FocusScopeProps['onMountAutoFocus'];\n\n  /**\n   * Event handler called when auto-focusing on close.\n   * Can be prevented.\n   */\n  onCloseAutoFocus?: FocusScopeProps['onUnmountAutoFocus'];\n}\n\nconst DialogContentImpl = React.forwardRef<DialogContentImplElement, DialogContentImplProps>(\n  (props: ScopedProps<DialogContentImplProps>, forwardedRef) => {\n    const { __scopeDialog, trapFocus, onOpenAutoFocus, onCloseAutoFocus, ...contentProps } = props;\n    const context = useDialogContext(CONTENT_NAME, __scopeDialog);\n    const contentRef = React.useRef<HTMLDivElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, contentRef);\n\n    // Make sure the whole tree has focus guards as our `Dialog` will be\n    // the last element in the DOM (because of the `Portal`)\n    useFocusGuards();\n\n    return (\n      <>\n        <FocusScope\n          asChild\n          loop\n          trapped={trapFocus}\n          onMountAutoFocus={onOpenAutoFocus}\n          onUnmountAutoFocus={onCloseAutoFocus}\n        >\n          <DismissableLayer\n            role=\"dialog\"\n            id={context.contentId}\n            aria-describedby={context.descriptionId}\n            aria-labelledby={context.titleId}\n            data-state={getState(context.open)}\n            {...contentProps}\n            ref={composedRefs}\n            onDismiss={() => context.onOpenChange(false)}\n          />\n        </FocusScope>\n        {process.env.NODE_ENV !== 'production' && (\n          <>\n            <TitleWarning titleId={context.titleId} />\n            <DescriptionWarning contentRef={contentRef} descriptionId={context.descriptionId} />\n          </>\n        )}\n      </>\n    );\n  }\n);\n\n/* -------------------------------------------------------------------------------------------------\n * DialogTitle\n * -----------------------------------------------------------------------------------------------*/\n\nconst TITLE_NAME = 'DialogTitle';\n\ntype DialogTitleElement = React.ComponentRef<typeof Primitive.h2>;\ntype PrimitiveHeading2Props = React.ComponentPropsWithoutRef<typeof Primitive.h2>;\ninterface DialogTitleProps extends PrimitiveHeading2Props {}\n\nconst DialogTitle = React.forwardRef<DialogTitleElement, DialogTitleProps>(\n  (props: ScopedProps<DialogTitleProps>, forwardedRef) => {\n    const { __scopeDialog, ...titleProps } = props;\n    const context = useDialogContext(TITLE_NAME, __scopeDialog);\n    return <Primitive.h2 id={context.titleId} {...titleProps} ref={forwardedRef} />;\n  }\n);\n\nDialogTitle.displayName = TITLE_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DialogDescription\n * -----------------------------------------------------------------------------------------------*/\n\nconst DESCRIPTION_NAME = 'DialogDescription';\n\ntype DialogDescriptionElement = React.ComponentRef<typeof Primitive.p>;\ntype PrimitiveParagraphProps = React.ComponentPropsWithoutRef<typeof Primitive.p>;\ninterface DialogDescriptionProps extends PrimitiveParagraphProps {}\n\nconst DialogDescription = React.forwardRef<DialogDescriptionElement, DialogDescriptionProps>(\n  (props: ScopedProps<DialogDescriptionProps>, forwardedRef) => {\n    const { __scopeDialog, ...descriptionProps } = props;\n    const context = useDialogContext(DESCRIPTION_NAME, __scopeDialog);\n    return <Primitive.p id={context.descriptionId} {...descriptionProps} ref={forwardedRef} />;\n  }\n);\n\nDialogDescription.displayName = DESCRIPTION_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DialogClose\n * -----------------------------------------------------------------------------------------------*/\n\nconst CLOSE_NAME = 'DialogClose';\n\ntype DialogCloseElement = React.ComponentRef<typeof Primitive.button>;\ninterface DialogCloseProps extends PrimitiveButtonProps {}\n\nconst DialogClose = React.forwardRef<DialogCloseElement, DialogCloseProps>(\n  (props: ScopedProps<DialogCloseProps>, forwardedRef) => {\n    const { __scopeDialog, ...closeProps } = props;\n    const context = useDialogContext(CLOSE_NAME, __scopeDialog);\n    return (\n      <Primitive.button\n        type=\"button\"\n        {...closeProps}\n        ref={forwardedRef}\n        onClick={composeEventHandlers(props.onClick, () => context.onOpenChange(false))}\n      />\n    );\n  }\n);\n\nDialogClose.displayName = CLOSE_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction getState(open: boolean) {\n  return open ? 'open' : 'closed';\n}\n\nconst TITLE_WARNING_NAME = 'DialogTitleWarning';\n\nconst [WarningProvider, useWarningContext] = createContext(TITLE_WARNING_NAME, {\n  contentName: CONTENT_NAME,\n  titleName: TITLE_NAME,\n  docsSlug: 'dialog',\n});\n\ntype TitleWarningProps = { titleId?: string };\n\nconst TitleWarning: React.FC<TitleWarningProps> = ({ titleId }) => {\n  const titleWarningContext = useWarningContext(TITLE_WARNING_NAME);\n\n  const MESSAGE = `\\`${titleWarningContext.contentName}\\` requires a \\`${titleWarningContext.titleName}\\` for the component to be accessible for screen reader users.\n\nIf you want to hide the \\`${titleWarningContext.titleName}\\`, you can wrap it with our VisuallyHidden component.\n\nFor more information, see https://radix-ui.com/primitives/docs/components/${titleWarningContext.docsSlug}`;\n\n  React.useEffect(() => {\n    if (titleId) {\n      const hasTitle = document.getElementById(titleId);\n      if (!hasTitle) console.error(MESSAGE);\n    }\n  }, [MESSAGE, titleId]);\n\n  return null;\n};\n\nconst DESCRIPTION_WARNING_NAME = 'DialogDescriptionWarning';\n\ntype DescriptionWarningProps = {\n  contentRef: React.RefObject<DialogContentElement | null>;\n  descriptionId?: string;\n};\n\nconst DescriptionWarning: React.FC<DescriptionWarningProps> = ({ contentRef, descriptionId }) => {\n  const descriptionWarningContext = useWarningContext(DESCRIPTION_WARNING_NAME);\n  const MESSAGE = `Warning: Missing \\`Description\\` or \\`aria-describedby={undefined}\\` for {${descriptionWarningContext.contentName}}.`;\n\n  React.useEffect(() => {\n    const describedById = contentRef.current?.getAttribute('aria-describedby');\n    // if we have an id and the user hasn't set aria-describedby={undefined}\n    if (descriptionId && describedById) {\n      const hasDescription = document.getElementById(descriptionId);\n      if (!hasDescription) console.warn(MESSAGE);\n    }\n  }, [MESSAGE, contentRef, descriptionId]);\n\n  return null;\n};\n\nconst Root = Dialog;\nconst Trigger = DialogTrigger;\nconst Portal = DialogPortal;\nconst Overlay = DialogOverlay;\nconst Content = DialogContent;\nconst Title = DialogTitle;\nconst Description = DialogDescription;\nconst Close = DialogClose;\n\nexport {\n  createDialogScope,\n  //\n  Dialog,\n  DialogTrigger,\n  DialogPortal,\n  DialogOverlay,\n  DialogContent,\n  DialogTitle,\n  DialogDescription,\n  DialogClose,\n  //\n  Root,\n  Trigger,\n  Portal,\n  Overlay,\n  Content,\n  Title,\n  Description,\n  Close,\n  //\n  WarningProvider,\n};\nexport type {\n  DialogProps,\n  DialogTriggerProps,\n  DialogPortalProps,\n  DialogOverlayProps,\n  DialogContentProps,\n  DialogTitleProps,\n  DialogDescriptionProps,\n  DialogCloseProps,\n};\n"],"names":[],"mappings":"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","debugId":null}}]
}